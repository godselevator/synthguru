@model AOS.Platform.Models.AdminHomeGlobalViewModel
@{
    ViewBag.Title = "Administrator Home";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml";
}
<div class="row">
    <div class="col-md-12">
        <!-- Upper panel-->
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title sysuserfg"><strong>System User Dashboard</strong></h4>
            </div>
            <div class="panel-body">
                <div class="aoswell">
                    <div class="form-group">
                        This is the System User Dashboard. You are able to view this page because you are a system user.
                        Here you will find a bunch of tools to adjust low-level settings for all aspects of AOS
                        @*<input type="checkbox" name="my-checkbox" checked data-on-text="Enabled" data-size="small">*@
                    </div>
                    <div class="form-group">
                        Currently running on <span class="adwiza-label">@Model.DBEnvironment</span> database...
                    </div>
                    <div style="vertical-align: middle; display: inline-block;">
                        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AppAdministrator", "SysAdmin")'"><span class="fa fa-wrench"></span> App admin</button>
                        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("UserAdministrator", "SysAdmin")'"><span class="fa fa-user"></span> User admin</button>
                        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Diagnostics", "SysAdmin")'"><span class="glyphicon glyphicon-question-sign"></span> Diagnostics</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title sysuserfg"><strong>Global settings</strong></h4>
            </div>
            <div class="panel-body">
                <div class="aoswell">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="tabbable parentTabs">
                                <ul class="nav nav-tabs">
                                    <li class="active">
                                        <a href="#endpointsettings">Endpoint Settings</a>
                                    </li>
                                    <li>
                                        <a href="#notificationsettings">Notification Settings</a>
                                    </li>
                                    <li>
                                        <a href="#soonlinesettings">SO Online Settings</a>
                                    </li>
                                    <li>
                                        <a href="#aoswebapisettings">AOS WebAPI Settings</a>
                                    </li>
                                </ul>
                                <hr />
                                <div class="tab-content">
                                    <div class="tab-pane fade active in" id="endpointsettings">
                                        @{Html.RenderPartial("_AdminHomeEndpointSettings", Model.EndpointSettings); }
                                    </div>
                                    <div class="tab-pane fade" id="notificationsettings">
                                        @{Html.RenderPartial("_AdminHomeNotificationSettings", Model.NotificationSettings); }
                                    </div>
                                    <div class="tab-pane fade" id="soonlinesettings">
                                        @{Html.RenderPartial("_AdminHomeSOOnlineSettings", Model.SOOnlineSettings); }
                                    </div>
                                    <div class="tab-pane fade" id="aoswebapisettings">
                                        @{Html.RenderPartial("_AdminHomeAOSWebAPISettings", Model.AOSWebAPISettings); }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("ShowContent")
<script>

    // Change selection dropdown
    function ChangeEnv(val) {

        var url = "@Url.Action("GetGlobalsInfo", "SysAdmin")";
        var data = val;

        // Assign handlers immediately after making the request,
        // and remember the jqxhr object for this request
        var jqxhr = $.getJSON(url, { globalsId: val }, function (resp) {

            // Update fields
            $("#adwizaCertificate").val(resp.SOOnlineSettings.AdwizaCertificate);
            $("#federationGateway").val(resp.SOOnlineSettings.FederationGateway);
            $("#systemTokenCertificatePath").val(resp.SOOnlineSettings.SystemTokenCertificatePath);
            $("#superIdCertificate").val(resp.SOOnlineSettings.SuperIdCertificate);
            $("#createUserRedirectURL").val(resp.SOOnlineSettings.CreateUserRedirectURL);
            $("#AOSURL").val(resp.SOOnlineSettings.AOSURL);
            $("#mirroringStatus").val(resp.SOOnlineSettings.MirroringStatus);

            console.log("success");
        })
          .done(function () {
              console.log("second success");
          })
          .fail(function () {
              console.log("error");
          })
          .always(function () {
              console.log("complete");
          });

    }

    // This function uploads private key XML-files
    function UploadSOCertificate(e) {
        var files = e.target.files;

        if (files.length > 0) {
            if (window.FormData !== undefined) {

                var data = new FormData();

                for (var x = 0; x < files.length; x++) {
                    data.append("file" + x, files[x]);
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UploadSOCertificate", "SysAdmin")",
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (resp) {
                        if (resp.IsOK) {
                            // Show success alert box
                            $("#success-alert-soonlinesettings").html(resp.ErrorMsg);
                            $("#success-alert-soonlinesettings").show();
                            // Remove success alert-box after a few seconds
                            $("#success-alert-soonlinesettings").fadeTo(2000, 1000).slideUp(1000, function () {
                                $("#success-alert-soonlinesettings").hide();
                            });

                            // Update filename
                            var obj = jQuery.parseJSON(resp.ReturnedJsonData);
                            var fileName = obj.CertificateName;

                            $("#socertificate").val(fileName);
                            $("#soCertificateDelete").show();
                            $("#soCertificateView").show();
                        }
                        else {
                            // Show error alert box
                            $("#error-alert-soonlinesettings").html(resp.ErrorMsg);
                            $("#error-alert-soonlinesettings").show();
                            // Remove error alert-box after a few seconds
                            $("#error-alert-soonlinesettings").fadeTo(2000, 500).slideUp(500, function () {
                                $("#error-alert-soonlinesettings").hide();
                            });
                        }
                    },
                    error: function (xhr, status, p3, p4) {
                        var err = "Error " + " " + status + " " + p3 + " " + p4;
                        if (xhr.responseText && xhr.responseText[0] == "{")
                            err = JSON.parse(xhr.responseText).Message;
                        console.log(err);
                    }
                });
            } else {
                alert("This browser doesn't support HTML5 file uploads!");
            }
        };
    }

    // This function uploads private key XML-files
    function RemoveSOCertificate() {

        var data = new FormData();

        $.ajax({
            type: "POST",
            url: "@Url.Action("RemoveSOCertificate", "SysAdmin")",
            contentType: false,
            processData: false,
            data: data,
            success: function (resp) {
                if (resp.IsOK) {
                    // Show success alert box
                    $("#error-alert-advanced").html(resp.ErrorMsg);
                    $("#success-alert-advanced").show();
                    // Remove success alert-box after a few seconds
                    $("#success-alert-advanced").fadeTo(2000, 1000).slideUp(1000, function () {
                        $("#success-alert-advanced").hide();
                    });

                    $("#socertificate").val("");
                    $("#soCertificateDelete").hide();
                }
                else {
                    // Show error alert box
                    $("#error-alert-advanced").html(resp.ErrorMsg);
                    $("#error-alert-advanced").show();
                    // Remove error alert-box after a few seconds
                    $("#error-alert-advanced").fadeTo(2000, 500).slideUp(500, function () {
                        $("#error-alert-advanced").hide();
                    });
                }
            },
            error: function (xhr, status, p3, p4) {
                var err = "Error " + " " + status + " " + p3 + " " + p4;
                if (xhr.responseText && xhr.responseText[0] == "{")
                    err = JSON.parse(xhr.responseText).Message;
                console.log(err);
            }
        });
    }



    // This section will only be available when the page is ready
    $(document).ready(function () {

        // Attach click handlers to delete buttons on advanced tab
        $('#soCertificateDelete').click(function () {
            RemoveSOCertificate("sod");
        });

        $('#upload-SOCertificate').on('change', function (e) {
            UploadSOCertificate(e);
        });

        $("ul.nav-tabs a").click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        // Tooltip initialization
        $("#pollingInterval").tooltip();
        $("#notificationEmail").tooltip();

        // The ladda button (button with spinner)
        var ladda = null;

        // Attach click handler to the submit Endpoint Settings button:
        $('#form-submit1').click(function () {
            // Assign button to ladda button
            ladda = Ladda.create(this);
            // Submit form
            $('#frmUpdateEndpointSettings').submit();
        });

        // Attach click handler to the submit Notification Settings button:
        $('#form-submit2').click(function () {
            // Assign button to ladda button
            ladda = Ladda.create(this);
            // Submit form
            $('#frmUpdateNotificationSettings').submit();
        });

        // Attach click handler to the submit SO Online Settings
        $('#form-submit3').click(function () {
            // Assign button to ladda button
            ladda = Ladda.create(this);
            // Submit form
            $('#frmUpdateSOOnlineSettings').submit();
        });

        // Attach click handler to the submit AOS WebAPI Settings
        $('#form-submit4').click(function () {
            // Assign button to ladda button
            ladda = Ladda.create(this);
            // Submit form
            $('#frmUpdateAOSWebAPISettings').submit();
        });

        // Hide alert boxes
        $("#success-alert-endpointsettings").hide();
        $("#error-alert-endpointsettings").hide();

        $("#success-alert-notificationsettings").hide();
        $("#error-alert-notificationsettings").hide();

        $("#success-alert-soonlinesettings").hide();
        $("#error-alert-soonlinesettings").hide();

        $("#success-alert-aoswebapisettings").hide();
        $("#error-alert-aoswebapisettings").hide();

        // Submit form - endpoint settings
        $("#frmUpdateEndpointSettings").on("submit", function (event) {
            event.preventDefault();

            var url = $(this).attr("action");
            var formData = $(this).serialize();
            // Start loading. Turn on spinner
            ladda.start();

            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                dataType: "json",
                success: function (resp) {
                    // Check if we should redirect
                    if (resp.Redirect) {
                        window.location = "@Url.Action("Login", "Account")";
                    };

                    if (resp.IsOK) {
                        // Show success alert box
                        $("#success-alert-endpointsettings").show();
                        // Remove success alert-box after a few seconds
                        $("#success-alert-endpointsettings").fadeTo(2000, 1000).slideUp(1000, function () {
                            $("#success-alert-endpointsettings").hide();
                        });
                    }
                    else {
                        // Show error alert box
                        $("#error-alert-endpointsettings").html(resp.ErrorMsg);
                        $("#error-alert-endpointsettings").show();
                        // Remove error alert-box after a few seconds
                        $("#error-alert-endpointsettings").fadeTo(2000, 500).slideUp(500, function () {
                            $("#error-alert-endpointsettings").hide();
                        });
                    }
                }
            })
          .done(function () {
              console.log("second success");
          })
          .fail(function () {
              console.log("error");
          })
          .always(function () {
              console.log("complete");
              ladda.stop();
          });
            return false;
        });

        // Submit form - notification settings
        $("#frmUpdateNotificationSettings").on("submit", function (event) {
            event.preventDefault();

            var url = $(this).attr("action");
            var formData = $(this).serialize();
            // Start loading. Turn on spinner
            ladda.start();

            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                dataType: "json",
                success: function (resp) {
                    // Check if we should redirect
                    if (resp.Redirect) {
                        window.location = "@Url.Action("Login", "Account")";
                    };

                    if (resp.IsOK) {
                        // Show success alert box
                        $("#success-alert-notificationsettings").show();
                        // Remove success alert-box after a few seconds
                        $("#success-alert-notificationsettings").fadeTo(2000, 1000).slideUp(1000, function () {
                            $("#success-alert-notificationsettings").hide();
                        });
                    }
                    else {
                        // Show error alert box
                        $("#error-alert-notificationsettings").html(resp.ErrorMsg);
                        $("#error-alert-notificationsettings").show();
                        // Remove error alert-box after a few seconds
                        $("#error-alert-notificationsettings").fadeTo(2000, 500).slideUp(500, function () {
                            $("#error-alert-notificationsettings").hide();
                        });
                    }
                }
            })
          .done(function () {
              console.log("second success");
          })
          .fail(function () {
              console.log("error");
          })
          .always(function () {
              console.log("complete");
              ladda.stop();
          });
            return false;
        });

        // Submit form - soonline settings
        $("#frmUpdateSOOnlineSettings").on("submit", function (event) {
            event.preventDefault();

            var url = $(this).attr("action");

            var formData = $(this).serialize();
            // Start loading. Turn on spinner
            ladda.start();

            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                dataType: "json",
                success: function (resp) {
                    // Check if we should redirect
                    if (resp.Redirect) {
                        window.location = "@Url.Action("Login", "Account")";
                    };

                    if (resp.IsOK) {
                        // Show success alert box
                        $("#success-alert-soonlinesettings").show();
                        // Remove success alert-box after a few seconds
                        $("#success-alert-soonlinesettings").fadeTo(2000, 1000).slideUp(1000, function () {
                            $("#success-alert-soonlinesettings").hide();
                        });
                    }
                    else {
                        // Show error alert box
                        $("#error-alert-soonlinesettings").html(resp.ErrorMsg);
                        $("#error-alert-soonlinesettings").show();
                        // Remove error alert-box after a few seconds
                        $("#error-alert-soonlinesettings").fadeTo(2000, 500).slideUp(500, function () {
                            $("#error-alert-soonlinesettings").hide();
                        });
                    }
                }
            })
          .done(function () {
              console.log("second success");
          })
          .fail(function () {
              console.log("error");
          })
          .always(function () {
              console.log("complete");
              ladda.stop();
          });
            return false;
        });

        // Submit form - soonline settings
        $("#frmUpdateAOSWebAPISettings").on("submit", function (event) {
            event.preventDefault();

            var url = $(this).attr("action");

            var formData = $(this).serialize();
            // Start loading. Turn on spinner
            ladda.start();

            $.ajax({
                url: url,
                type: "POST",
                data: formData,
                dataType: "json",
                success: function (resp) {
                    // Check if we should redirect
                    if (resp.Redirect) {
                        window.location = "@Url.Action("Login", "Account")";
                    };

                    if (resp.IsOK) {
                        // Show success alert box
                        $("#success-alert-aoswebapisettings").show();
                        // Remove success alert-box after a few seconds
                        $("#success-alert-aoswebapisettings").fadeTo(2000, 1000).slideUp(1000, function () {
                            $("#success-alert-aoswebapisettings").hide();
                        });
                    }
                    else {
                        // Show error alert box
                        $("#error-alert-aoswebapisettings").html(resp.ErrorMsg);
                        $("#error-alert-aoswebapisettings").show();
                        // Remove error alert-box after a few seconds
                        $("#error-alert-aoswebapisettings").fadeTo(2000, 500).slideUp(500, function () {
                            $("#error-alert-aoswebapisettings").hide();
                        });
                    }
                }
            })
          .done(function () {
              console.log("second success");
          })
          .fail(function () {
              console.log("error");
          })
          .always(function () {
              console.log("complete");
              ladda.stop();
          });
            return false;
        });

    });

    // Automatically trigger the loading animation on click
    Ladda.bind('input[type=submit]');

    //$("#appEnabled").bootstrapSwitch();
    $(".switch").bootstrapSwitch();

    $("#privateKeyPRODx").fileinput({
        language: "uk",
        allowedFileExtensions: ["xml"]
    });

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}