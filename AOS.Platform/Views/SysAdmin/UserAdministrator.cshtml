@model AOS.Platform.Models.UserAdministratorViewModel
@{
    ViewBag.Title = "User Administrator";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml";

    var currUserId = string.Empty;
    var currUserName = string.Empty;
    var currRoleId = string.Empty;

}
<div class="row">
    <div class="col-md-12">
        <!-- My AOS panel-->
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title sysuserfg"><strong>User Administrator</strong></h4>
            </div>
            <div class="panel-body">
                <div class="aoswell">
                    <div class="form-group">
                        This is your user administrator page. From here you can adjust various settings for a specific user.
                    </div>
                </div>
            </div>
        </div>
        <!-- Apps panel-->
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title sysuserfg"><strong>Users for current account</strong></h4>
            </div>
            <div class="panel-body">
                <div class="aoswell">
                    <table class="table table-condensed table-hover">
                        <tr>
                            <th>Username</th>
                            <th>User status</th>
                            <th>Role</th>
                            <th></th>
                            <th></th>
                        </tr>
                        <tbody>
                            @{
                                var indx = 0;
                                foreach (var item in Model.ListOfUsers)
                                {
                                    indx++;

                                    currUserId = item.UserId;
                                    currUserName = item.UserName;
                                    currRoleId = item.CurrentRoleId;

                                    var collapseDivName = "collapseEditUser" + indx;
                                    var collapseTargetName = "#collapseEditUser" + indx;
                                    var ajaxLoaderId = "ajaxLoader" + indx;
                                    var collapseId = "collapse" + indx;

                                    var radioUserId = "radioUser_" + item.UserId + "_" + item.AccountName;
                                    var radioAdminId = "radioAdmin_" + item.UserId + "_" + item.AccountName;
                                    var radioSysUserId = "radioSysUser_" + item.UserId + "_" + item.AccountName;
                                    var enabledId = item.UserId;
                                    var checkedUser = string.Empty;
                                    var checkedAdmin = string.Empty;
                                    var checkedSysUser = string.Empty;
                                    var switchUserEnabled = (item.UserEnabled) ? "checked" : "";


                                    if (item.CurrentRole.ToLower() == "user")
                                    {
                                        checkedUser = "active";
                                    }

                                    if (item.CurrentRole.ToLower() == "administrator")
                                    {
                                        checkedAdmin = "active";
                                    }

                                    if (item.CurrentRole.ToLower() == "system user")
                                    {
                                        checkedSysUser = "active";
                                    }

                                    var unlockText = string.Format("Are you sure you want to unlock user {0} ?<br /><br />No. of failed attempts: {1}", item.UserName, item.UserLockedOutFailedCount);

                                    var routeValues = new RouteValueDictionary();
                                    routeValues.Add("UserId", item.UserId);

                                    <tr>
                                        <td class="form-control-static">@item.UserName</td>
                                        <td class="form-control-static">
                                            <input type="checkbox" id=@enabledId class="switch" data-size="mini" data-on-text="Enabled" data-off-text="Disabled" @switchUserEnabled name=@ajaxLoaderId>
                                        </td>
                                        <td class="form-control-static">
                                            <div class="btn-group" data-toggle="buttons">
                                                <label class="btn btn-default btn-xs btnrole @checkedUser">
                                                    <input type="radio" name="options" id="@radioUserId"> User
                                                </label>
                                                <label class="btn btn-default btn-xs btnrole @checkedAdmin">
                                                    <input type="radio" name="options" id="@radioAdminId"> Administrator
                                                </label>
                                                <label class="btn btn-default btn-xs btnrole @checkedSysUser">
                                                    <input type="radio" name="options" id="@radioSysUserId"> System user
                                                </label>
                                            </div>
                                        </td>
                                        <td class="form-control-static">
                                        </td>
                                        <td>
                                            <div class="frame"><span class="spinnerhelper"></span><img src="~/Content/Images/ajax-loader.gif" id="@ajaxLoaderId" hidden="hidden" style="width:30px" /></div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="alert alert-success" role="alert" id="success-alert">User successfully updated...</div>
                            </div>
                            <div class="form-group">
                                <div class="alert alert-danger" role="alert" id="error-alert"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.Partial("Confirm")
</div>
<script>
    $(document).ready(function () {

        // Click event to handle radiobutton clicks for role
        $('.btnrole').on('click', function () {
            console.log($(this).find('input').attr('id'));
        });

        // Ajax call to enable/disable user
        $(".switch").on('switchChange.bootstrapSwitch', function (event, state) {

            // Get ajaxloader for current line
            var $e = $('#' + this.name);

            // Show ajaxloader
            $e.show();

            var url = "@Url.Action("ChangeUserStatus", "SysAdmin")";

            // Assign handlers immediately after making the request,
            // and remember the jqxhr object for this request
            var jqxhr = $.getJSON(url, { userId: this.id, userStatus: state }, function (resp) {

                if (resp.IsOK) {
                    // Show success alert box
                    $("#success-alert").html(resp.ErrorMsg);
                    $("#success-alert").show();
                    // Remove success alert-box after a few seconds
                    $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                        $("#success-alert").hide();
                    });
                }
                else {
                    // Show error alert box
                    $("#error-alert").html(resp.ErrorMsg);
                    $("#error-alert").show();
                    // Remove error alert-box after a few seconds
                    $("#error-alert").fadeTo(2000, 500).slideUp(500, function () {
                        $("#error-alert").hide();
                    });
                }

                console.log("success");

                // Hide ajaxloader again
                $e.hide();
            })
              .done(function () {
                  console.log("second success");
              })
              .fail(function () {
                  console.log("error");
              })
              .always(function () {
                  console.log("complete");
              });

        });

        // Ajax call to change user role
        $('.btnrole').on('click', function () {

            // Get userkey
            var $userkey = $(this).find('input').attr('id');

            // Get ajaxloader for current line
            var $e = $('#' + this.name);

            // Show ajaxloader
            $e.show();

            var url = "@Url.Action("UpdateUserRole", "SysAdmin")";

            // Assign handlers immediately after making the request,
            // and remember the jqxhr object for this request
            var jqxhr = $.getJSON(url, { userKey: $userkey }, function (resp) {

                if (resp.IsOK) {
                    // Show success alert box
                    $("#success-alert").html(resp.ErrorMsg);
                    $("#success-alert").show();
                    // Remove success alert-box after a few seconds
                    $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                        $("#success-alert").hide();
                    });
                }
                else {
                    // Show error alert box
                    $("#error-alert").html(resp.ErrorMsg);
                    $("#error-alert").show();
                    // Remove error alert-box after a few seconds
                    $("#error-alert").fadeTo(2000, 500).slideUp(500, function () {
                        $("#error-alert").hide();
                    });
                }

                console.log("success");

                // Hide ajaxloader again
                $e.hide();
            })
              .done(function () {
                  console.log("second success");
              })
              .fail(function () {
                  console.log("error");
              })
              .always(function () {
                  console.log("complete");
              });

        });

        $(".dropdown-toggle").on('click', 'li a', function () {
            $(".btn:first-child").text($(this).text());
            $(".btn:first-child").val($(this).text());
        });

        // The ladda button (button with spinner)
        var ladda = null;

        // Attach click handler to the submit button:
        $('#form-submit').click(function () {
            // Assign button to ladda button
            ladda = Ladda.create(this);
            // Submit form
            $('#frmUpdateAccount').submit();
        });

        // Hide alert boxes
        $("#success-alert").hide();
        $("#error-alert").hide();

        // Submit form
        $("#frmUpdateAccount").on("submit", function (event) {
            event.preventDefault();

            debugger;
            var url = $(this).attr("action");
            var account = $("#selAccounts option:selected").text();
            var formData = $(this).serializeArray();

            var sList = "";
            var obj = {};
            $('input[type=checkbox]').each(function () {
                var sThisId = (this.id);
                var sThisVal = (this.checked ? sThisId + "1" : sThisId + "0");
                sList += (sList == "" ? sThisVal : "," + sThisVal);
                obj[$(this).attr('id')] = sThisVal;
            });
            console.log(sList);
            console.log(obj);

            // Start loading. Turn on spinner
            ladda.start();

            $.ajax({
                url: url,
                type: "POST",
                data: { xxx: sList },
                dataType: "json",
                success: function (resp) {

                    if (resp.IsOK) {
                        // Show success alert box
                        $("#success-alert").show();
                        // Remove success alert-box after a few seconds
                        $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                            $("#success-alert").hide();
                        });

                        $("#currentUser").html("Hello " + resp.RedirectAction + "!");
                    }
                    else {
                        // Show error alert box
                        $("#error-alert").html(resp.ErrorMsg);
                        $("#error-alert").show();
                        // Remove error alert-box after a few seconds
                        $("#error-alert").fadeTo(2000, 500).slideUp(500, function () {
                            $("#error-alert").hide();
                        });
                    }
                }
            })
            .always(function () {
                // Stop loading. Turn off spinner
                ladda.stop();
            });
            return false;
        }); // Form submit

    });

    // Automatically trigger the loading animation on click
    Ladda.bind('input[type=submit]');

    // Wire all checkboxes to be displayed as switches
    $(".switch").bootstrapSwitch();

    $('.typeahead.input-sm').siblings('input.tt-hint').addClass('hint-small');
    $('.typeahead.input-lg').siblings('input.tt-hint').addClass('hint-large');

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}