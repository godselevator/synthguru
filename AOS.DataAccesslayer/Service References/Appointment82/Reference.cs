//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AOS.DataAccessLayer.Appointment82 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoCredentials", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class SoCredentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoTimeZone", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class SoTimeZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoTimeZoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoTimeZoneLocationCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoTimeZoneId {
            get {
                return this.SoTimeZoneIdField;
            }
            set {
                if ((this.SoTimeZoneIdField.Equals(value) != true)) {
                    this.SoTimeZoneIdField = value;
                    this.RaisePropertyChanged("SoTimeZoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoTimeZoneLocationCode {
            get {
                return this.SoTimeZoneLocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SoTimeZoneLocationCodeField, value) != true)) {
                    this.SoTimeZoneLocationCodeField = value;
                    this.RaisePropertyChanged("SoTimeZoneLocationCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoExceptionInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class SoExceptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.SoExceptionInfo InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.SoExceptionInfoParameters ParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string FriendlyText {
            get {
                return this.FriendlyTextField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyTextField, value) != true)) {
                    this.FriendlyTextField = value;
                    this.RaisePropertyChanged("FriendlyText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfoParameters Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SoExceptionInfoParameters", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", ItemName="SoExceptionInfoParametersKeyValuePair", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class SoExceptionInfoParameters : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SoExtraInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", ItemName="ExtraInfoNameValuePair", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class SoExtraInfo : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Carrier", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Associate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Contact))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.LocalizedField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Priority))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Project))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Link))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.TaskListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Sale))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.VisibleFor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.ProjectTypeStatusLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.SaleTypeStageLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Task))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.Appointment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.AppointmentSyncData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.ParticipantSyncData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.AddressSyncData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.EMailConnectionInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.SuggestedAppointment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.DayInformationListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.ActivitySummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.RedLetterSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.ActivityInformationListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.RedLetterInformationListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.RedLetterDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.MultiAlarmData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.AlarmData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.SalesActivity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.Appointment82.AppointmentEntity))]
    public partial class Carrier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.TableRight TableRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.FieldPropertyDictionary FieldPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.TableRight TableRight {
            get {
                return this.TableRightField;
            }
            set {
                if ((object.ReferenceEquals(this.TableRightField, value) != true)) {
                    this.TableRightField = value;
                    this.RaisePropertyChanged("TableRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public AOS.DataAccessLayer.Appointment82.FieldPropertyDictionary FieldProperties {
            get {
                return this.FieldPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldPropertiesField, value) != true)) {
                    this.FieldPropertiesField = value;
                    this.RaisePropertyChanged("FieldProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class TableRight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ETableRight MaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.ETableRight Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((this.MaskField.Equals(value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Associate", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Associate : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.UserType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIdxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EjUserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssociateId {
            get {
                return this.AssociateIdField;
            }
            set {
                if ((this.AssociateIdField.Equals(value) != true)) {
                    this.AssociateIdField = value;
                    this.RaisePropertyChanged("AssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.UserType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int GroupIdx {
            get {
                return this.GroupIdxField;
            }
            set {
                if ((this.GroupIdxField.Equals(value) != true)) {
                    this.GroupIdxField = value;
                    this.RaisePropertyChanged("GroupIdx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string FormalName {
            get {
                return this.FormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormalNameField, value) != true)) {
                    this.FormalNameField = value;
                    this.RaisePropertyChanged("FormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int EjUserId {
            get {
                return this.EjUserIdField;
            }
            set {
                if ((this.EjUserIdField.Equals(value) != true)) {
                    this.EjUserIdField = value;
                    this.RaisePropertyChanged("EjUserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Contact : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KananameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormattedAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOwnerContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveErpLinksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgNr {
            get {
                return this.OrgNrField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNrField, value) != true)) {
                    this.OrgNrField = value;
                    this.RaisePropertyChanged("OrgNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string DirectPhone {
            get {
                return this.DirectPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectPhoneField, value) != true)) {
                    this.DirectPhoneField = value;
                    this.RaisePropertyChanged("DirectPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int AssociateId {
            get {
                return this.AssociateIdField;
            }
            set {
                if ((this.AssociateIdField.Equals(value) != true)) {
                    this.AssociateIdField = value;
                    this.RaisePropertyChanged("AssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Kananame {
            get {
                return this.KananameField;
            }
            set {
                if ((object.ReferenceEquals(this.KananameField, value) != true)) {
                    this.KananameField = value;
                    this.RaisePropertyChanged("Kananame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string EmailAddressName {
            get {
                return this.EmailAddressNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressNameField, value) != true)) {
                    this.EmailAddressNameField = value;
                    this.RaisePropertyChanged("EmailAddressName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string URLName {
            get {
                return this.URLNameField;
            }
            set {
                if ((object.ReferenceEquals(this.URLNameField, value) != true)) {
                    this.URLNameField = value;
                    this.RaisePropertyChanged("URLName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string AssociateFullName {
            get {
                return this.AssociateFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateFullNameField, value) != true)) {
                    this.AssociateFullNameField = value;
                    this.RaisePropertyChanged("AssociateFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string BusinessName {
            get {
                return this.BusinessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessNameField, value) != true)) {
                    this.BusinessNameField = value;
                    this.RaisePropertyChanged("BusinessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public AOS.DataAccessLayer.Appointment82.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string FormattedAddress {
            get {
                return this.FormattedAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FormattedAddressField, value) != true)) {
                    this.FormattedAddressField = value;
                    this.RaisePropertyChanged("FormattedAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public bool IsOwnerContact {
            get {
                return this.IsOwnerContactField;
            }
            set {
                if ((this.IsOwnerContactField.Equals(value) != true)) {
                    this.IsOwnerContactField = value;
                    this.RaisePropertyChanged("IsOwnerContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public int ActiveErpLinks {
            get {
                return this.ActiveErpLinksField;
            }
            set {
                if ((this.ActiveErpLinksField.Equals(value) != true)) {
                    this.ActiveErpLinksField = value;
                    this.RaisePropertyChanged("ActiveErpLinks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Address : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Wgs84LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Wgs84LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.LocalizedField[][] LocalizedAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Wgs84Latitude {
            get {
                return this.Wgs84LatitudeField;
            }
            set {
                if ((this.Wgs84LatitudeField.Equals(value) != true)) {
                    this.Wgs84LatitudeField = value;
                    this.RaisePropertyChanged("Wgs84Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Wgs84Longitude {
            get {
                return this.Wgs84LongitudeField;
            }
            set {
                if ((this.Wgs84LongitudeField.Equals(value) != true)) {
                    this.Wgs84LongitudeField = value;
                    this.RaisePropertyChanged("Wgs84Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public AOS.DataAccessLayer.Appointment82.LocalizedField[][] LocalizedAddress {
            get {
                return this.LocalizedAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalizedAddressField, value) != true)) {
                    this.LocalizedAddressField = value;
                    this.RaisePropertyChanged("LocalizedAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalizedField", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class LocalizedField : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int ValueLength {
            get {
                return this.ValueLengthField;
            }
            set {
                if ((this.ValueLengthField.Equals(value) != true)) {
                    this.ValueLengthField = value;
                    this.RaisePropertyChanged("ValueLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Person : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrmrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RetiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ActiveInterestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactCountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactOrgNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsePersonAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KanafnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KanalnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Post1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Post2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Post3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveErpLinksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Mrmrs {
            get {
                return this.MrmrsField;
            }
            set {
                if ((object.ReferenceEquals(this.MrmrsField, value) != true)) {
                    this.MrmrsField = value;
                    this.RaisePropertyChanged("Mrmrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string DirectPhone {
            get {
                return this.DirectPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectPhoneField, value) != true)) {
                    this.DirectPhoneField = value;
                    this.RaisePropertyChanged("DirectPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string FormalName {
            get {
                return this.FormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormalNameField, value) != true)) {
                    this.FormalNameField = value;
                    this.RaisePropertyChanged("FormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public short Retired {
            get {
                return this.RetiredField;
            }
            set {
                if ((this.RetiredField.Equals(value) != true)) {
                    this.RetiredField = value;
                    this.RaisePropertyChanged("Retired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public short Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public short ActiveInterests {
            get {
                return this.ActiveInterestsField;
            }
            set {
                if ((this.ActiveInterestsField.Equals(value) != true)) {
                    this.ActiveInterestsField = value;
                    this.RaisePropertyChanged("ActiveInterests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string ContactDepartment {
            get {
                return this.ContactDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactDepartmentField, value) != true)) {
                    this.ContactDepartmentField = value;
                    this.RaisePropertyChanged("ContactDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public int ContactCountryId {
            get {
                return this.ContactCountryIdField;
            }
            set {
                if ((this.ContactCountryIdField.Equals(value) != true)) {
                    this.ContactCountryIdField = value;
                    this.RaisePropertyChanged("ContactCountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string ContactOrgNr {
            get {
                return this.ContactOrgNrField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactOrgNrField, value) != true)) {
                    this.ContactOrgNrField = value;
                    this.RaisePropertyChanged("ContactOrgNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string FaxPhone {
            get {
                return this.FaxPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxPhoneField, value) != true)) {
                    this.FaxPhoneField = value;
                    this.RaisePropertyChanged("FaxPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public string AssociateName {
            get {
                return this.AssociateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateNameField, value) != true)) {
                    this.AssociateNameField = value;
                    this.RaisePropertyChanged("AssociateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public int AssociateId {
            get {
                return this.AssociateIdField;
            }
            set {
                if ((this.AssociateIdField.Equals(value) != true)) {
                    this.AssociateIdField = value;
                    this.RaisePropertyChanged("AssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public bool UsePersonAddress {
            get {
                return this.UsePersonAddressField;
            }
            set {
                if ((this.UsePersonAddressField.Equals(value) != true)) {
                    this.UsePersonAddressField = value;
                    this.RaisePropertyChanged("UsePersonAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public string ContactFax {
            get {
                return this.ContactFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFaxField, value) != true)) {
                    this.ContactFaxField = value;
                    this.RaisePropertyChanged("ContactFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public string Kanafname {
            get {
                return this.KanafnameField;
            }
            set {
                if ((object.ReferenceEquals(this.KanafnameField, value) != true)) {
                    this.KanafnameField = value;
                    this.RaisePropertyChanged("Kanafname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public string Kanalname {
            get {
                return this.KanalnameField;
            }
            set {
                if ((object.ReferenceEquals(this.KanalnameField, value) != true)) {
                    this.KanalnameField = value;
                    this.RaisePropertyChanged("Kanalname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public string Post1 {
            get {
                return this.Post1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Post1Field, value) != true)) {
                    this.Post1Field = value;
                    this.RaisePropertyChanged("Post1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public string Post2 {
            get {
                return this.Post2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Post2Field, value) != true)) {
                    this.Post2Field = value;
                    this.RaisePropertyChanged("Post2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public string Post3 {
            get {
                return this.Post3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Post3Field, value) != true)) {
                    this.Post3Field = value;
                    this.RaisePropertyChanged("Post3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=33)]
        public string EmailName {
            get {
                return this.EmailNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailNameField, value) != true)) {
                    this.EmailNameField = value;
                    this.RaisePropertyChanged("EmailName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=34)]
        public string ContactFullName {
            get {
                return this.ContactFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFullNameField, value) != true)) {
                    this.ContactFullNameField = value;
                    this.RaisePropertyChanged("ContactFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=35)]
        public int ActiveErpLinks {
            get {
                return this.ActiveErpLinksField;
            }
            set {
                if ((this.ActiveErpLinksField.Equals(value) != true)) {
                    this.ActiveErpLinksField = value;
                    this.RaisePropertyChanged("ActiveErpLinks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Priority", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Priority : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Project : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TextIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveErpLinksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int AssociateId {
            get {
                return this.AssociateIdField;
            }
            set {
                if ((this.AssociateIdField.Equals(value) != true)) {
                    this.AssociateIdField = value;
                    this.RaisePropertyChanged("AssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string AssociateFullName {
            get {
                return this.AssociateFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateFullNameField, value) != true)) {
                    this.AssociateFullNameField = value;
                    this.RaisePropertyChanged("AssociateFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.DateTime Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int TextId {
            get {
                return this.TextIdField;
            }
            set {
                if ((this.TextIdField.Equals(value) != true)) {
                    this.TextIdField = value;
                    this.RaisePropertyChanged("TextId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public System.DateTime PublishTo {
            get {
                return this.PublishToField;
            }
            set {
                if ((this.PublishToField.Equals(value) != true)) {
                    this.PublishToField = value;
                    this.RaisePropertyChanged("PublishTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public System.DateTime PublishFrom {
            get {
                return this.PublishFromField;
            }
            set {
                if ((this.PublishFromField.Equals(value) != true)) {
                    this.PublishFromField = value;
                    this.RaisePropertyChanged("PublishFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string URLName {
            get {
                return this.URLNameField;
            }
            set {
                if ((object.ReferenceEquals(this.URLNameField, value) != true)) {
                    this.URLNameField = value;
                    this.RaisePropertyChanged("URLName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string ProjectNumber {
            get {
                return this.ProjectNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNumberField, value) != true)) {
                    this.ProjectNumberField = value;
                    this.RaisePropertyChanged("ProjectNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public int ActiveErpLinks {
            get {
                return this.ActiveErpLinksField;
            }
            set {
                if ((this.ActiveErpLinksField.Equals(value) != true)) {
                    this.ActiveErpLinksField = value;
                    this.RaisePropertyChanged("ActiveErpLinks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Link", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Link : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ExtraInfo {
            get {
                return this.ExtraInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInfoField, value) != true)) {
                    this.ExtraInfoField = value;
                    this.RaisePropertyChanged("ExtraInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int LinkId {
            get {
                return this.LinkIdField;
            }
            set {
                if ((this.LinkIdField.Equals(value) != true)) {
                    this.LinkIdField = value;
                    this.RaisePropertyChanged("LinkId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskListItem", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class TaskListItem : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskListItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.TaskDirection DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.TaskType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultAlldayEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ColorIndex ColorIndexField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskListItemId {
            get {
                return this.TaskListItemIdField;
            }
            set {
                if ((this.TaskListItemIdField.Equals(value) != true)) {
                    this.TaskListItemIdField = value;
                    this.RaisePropertyChanged("TaskListItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public AOS.DataAccessLayer.Appointment82.TaskDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public AOS.DataAccessLayer.Appointment82.TaskType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int IntentId {
            get {
                return this.IntentIdField;
            }
            set {
                if ((this.IntentIdField.Equals(value) != true)) {
                    this.IntentIdField = value;
                    this.RaisePropertyChanged("IntentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public short Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool IsDefaultAlldayEvent {
            get {
                return this.IsDefaultAlldayEventField;
            }
            set {
                if ((this.IsDefaultAlldayEventField.Equals(value) != true)) {
                    this.IsDefaultAlldayEventField = value;
                    this.RaisePropertyChanged("IsDefaultAlldayEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool IsDefaultFree {
            get {
                return this.IsDefaultFreeField;
            }
            set {
                if ((this.IsDefaultFreeField.Equals(value) != true)) {
                    this.IsDefaultFreeField = value;
                    this.RaisePropertyChanged("IsDefaultFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public bool IsDefaultPublished {
            get {
                return this.IsDefaultPublishedField;
            }
            set {
                if ((this.IsDefaultPublishedField.Equals(value) != true)) {
                    this.IsDefaultPublishedField = value;
                    this.RaisePropertyChanged("IsDefaultPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public AOS.DataAccessLayer.Appointment82.ColorIndex ColorIndex {
            get {
                return this.ColorIndexField;
            }
            set {
                if ((this.ColorIndexField.Equals(value) != true)) {
                    this.ColorIndexField = value;
                    this.RaisePropertyChanged("ColorIndex");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sale", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Sale : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SaleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProbabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.SaleStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EarningPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EarningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaleTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ActivityStatus CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveErpLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NextDueDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SaleDate {
            get {
                return this.SaleDateField;
            }
            set {
                if ((this.SaleDateField.Equals(value) != true)) {
                    this.SaleDateField = value;
                    this.RaisePropertyChanged("SaleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SaleId {
            get {
                return this.SaleIdField;
            }
            set {
                if ((this.SaleIdField.Equals(value) != true)) {
                    this.SaleIdField = value;
                    this.RaisePropertyChanged("SaleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public short Probability {
            get {
                return this.ProbabilityField;
            }
            set {
                if ((this.ProbabilityField.Equals(value) != true)) {
                    this.ProbabilityField = value;
                    this.RaisePropertyChanged("Probability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string AssociateFullName {
            get {
                return this.AssociateFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateFullNameField, value) != true)) {
                    this.AssociateFullNameField = value;
                    this.RaisePropertyChanged("AssociateFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public AOS.DataAccessLayer.Appointment82.SaleStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public double WeightedAmount {
            get {
                return this.WeightedAmountField;
            }
            set {
                if ((this.WeightedAmountField.Equals(value) != true)) {
                    this.WeightedAmountField = value;
                    this.RaisePropertyChanged("WeightedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public double EarningPercent {
            get {
                return this.EarningPercentField;
            }
            set {
                if ((this.EarningPercentField.Equals(value) != true)) {
                    this.EarningPercentField = value;
                    this.RaisePropertyChanged("EarningPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public double Earning {
            get {
                return this.EarningField;
            }
            set {
                if ((this.EarningField.Equals(value) != true)) {
                    this.EarningField = value;
                    this.RaisePropertyChanged("Earning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int AssociateId {
            get {
                return this.AssociateIdField;
            }
            set {
                if ((this.AssociateIdField.Equals(value) != true)) {
                    this.AssociateIdField = value;
                    this.RaisePropertyChanged("AssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public int SaleTypeId {
            get {
                return this.SaleTypeIdField;
            }
            set {
                if ((this.SaleTypeIdField.Equals(value) != true)) {
                    this.SaleTypeIdField = value;
                    this.RaisePropertyChanged("SaleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string SaleTypeName {
            get {
                return this.SaleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleTypeNameField, value) != true)) {
                    this.SaleTypeNameField = value;
                    this.RaisePropertyChanged("SaleTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string PersonFullName {
            get {
                return this.PersonFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFullNameField, value) != true)) {
                    this.PersonFullNameField = value;
                    this.RaisePropertyChanged("PersonFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public AOS.DataAccessLayer.Appointment82.ActivityStatus Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int ActiveErpLinks {
            get {
                return this.ActiveErpLinksField;
            }
            set {
                if ((this.ActiveErpLinksField.Equals(value) != true)) {
                    this.ActiveErpLinksField = value;
                    this.RaisePropertyChanged("ActiveErpLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public System.DateTime NextDueDate {
            get {
                return this.NextDueDateField;
            }
            set {
                if ((this.NextDueDateField.Equals(value) != true)) {
                    this.NextDueDateField = value;
                    this.RaisePropertyChanged("NextDueDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisibleFor", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class VisibleFor : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisibleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Visibility VisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisibleId {
            get {
                return this.VisibleIdField;
            }
            set {
                if ((this.VisibleIdField.Equals(value) != true)) {
                    this.VisibleIdField = value;
                    this.RaisePropertyChanged("VisibleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public AOS.DataAccessLayer.Appointment82.Visibility Visibility {
            get {
                return this.VisibilityField;
            }
            set {
                if ((this.VisibilityField.Equals(value) != true)) {
                    this.VisibilityField = value;
                    this.RaisePropertyChanged("Visibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string DisplayValue {
            get {
                return this.DisplayValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayValueField, value) != true)) {
                    this.DisplayValueField = value;
                    this.RaisePropertyChanged("DisplayValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuggestedAppointmentEntity", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class SuggestedAppointmentEntity : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuggestedAppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DaysFutureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoSuggestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMilestoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AssignToMemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ProjectTypeStatusLink ProjectTypeStatusLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.SaleTypeStageLink SaleTypeStageLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Task TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuggestedAppointmentId {
            get {
                return this.SuggestedAppointmentIdField;
            }
            set {
                if ((this.SuggestedAppointmentIdField.Equals(value) != true)) {
                    this.SuggestedAppointmentIdField = value;
                    this.RaisePropertyChanged("SuggestedAppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public short Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public short DaysFuture {
            get {
                return this.DaysFutureField;
            }
            set {
                if ((this.DaysFutureField.Equals(value) != true)) {
                    this.DaysFutureField = value;
                    this.RaisePropertyChanged("DaysFuture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool AutoSuggest {
            get {
                return this.AutoSuggestField;
            }
            set {
                if ((this.AutoSuggestField.Equals(value) != true)) {
                    this.AutoSuggestField = value;
                    this.RaisePropertyChanged("AutoSuggest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool IsMilestone {
            get {
                return this.IsMilestoneField;
            }
            set {
                if ((this.IsMilestoneField.Equals(value) != true)) {
                    this.IsMilestoneField = value;
                    this.RaisePropertyChanged("IsMilestone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool AssignToMember {
            get {
                return this.AssignToMemberField;
            }
            set {
                if ((this.AssignToMemberField.Equals(value) != true)) {
                    this.AssignToMemberField = value;
                    this.RaisePropertyChanged("AssignToMember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public AOS.DataAccessLayer.Appointment82.ProjectTypeStatusLink ProjectTypeStatusLink {
            get {
                return this.ProjectTypeStatusLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectTypeStatusLinkField, value) != true)) {
                    this.ProjectTypeStatusLinkField = value;
                    this.RaisePropertyChanged("ProjectTypeStatusLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public AOS.DataAccessLayer.Appointment82.SaleTypeStageLink SaleTypeStageLink {
            get {
                return this.SaleTypeStageLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleTypeStageLinkField, value) != true)) {
                    this.SaleTypeStageLinkField = value;
                    this.RaisePropertyChanged("SaleTypeStageLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public AOS.DataAccessLayer.Appointment82.Task Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectTypeStatusLink", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class ProjectTypeStatusLink : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectTypeStatusLinkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjTypeTooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjStatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjStatusTooltipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectTypeStatusLinkId {
            get {
                return this.ProjectTypeStatusLinkIdField;
            }
            set {
                if ((this.ProjectTypeStatusLinkIdField.Equals(value) != true)) {
                    this.ProjectTypeStatusLinkIdField = value;
                    this.RaisePropertyChanged("ProjectTypeStatusLinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int ProjTypeId {
            get {
                return this.ProjTypeIdField;
            }
            set {
                if ((this.ProjTypeIdField.Equals(value) != true)) {
                    this.ProjTypeIdField = value;
                    this.RaisePropertyChanged("ProjTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ProjTypeName {
            get {
                return this.ProjTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjTypeNameField, value) != true)) {
                    this.ProjTypeNameField = value;
                    this.RaisePropertyChanged("ProjTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ProjTypeTooltip {
            get {
                return this.ProjTypeTooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjTypeTooltipField, value) != true)) {
                    this.ProjTypeTooltipField = value;
                    this.RaisePropertyChanged("ProjTypeTooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int ProjStatusId {
            get {
                return this.ProjStatusIdField;
            }
            set {
                if ((this.ProjStatusIdField.Equals(value) != true)) {
                    this.ProjStatusIdField = value;
                    this.RaisePropertyChanged("ProjStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string ProjStatusName {
            get {
                return this.ProjStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjStatusNameField, value) != true)) {
                    this.ProjStatusNameField = value;
                    this.RaisePropertyChanged("ProjStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string ProjStatusTooltip {
            get {
                return this.ProjStatusTooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjStatusTooltipField, value) != true)) {
                    this.ProjStatusTooltipField = value;
                    this.RaisePropertyChanged("ProjStatusTooltip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaleTypeStageLink", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class SaleTypeStageLink : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleTypeStageLinkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaleTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaleTypeTooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProbIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProbNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProbTooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ProbabilityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SaleTypeStageLinkId {
            get {
                return this.SaleTypeStageLinkIdField;
            }
            set {
                if ((this.SaleTypeStageLinkIdField.Equals(value) != true)) {
                    this.SaleTypeStageLinkIdField = value;
                    this.RaisePropertyChanged("SaleTypeStageLinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int SaleTypeId {
            get {
                return this.SaleTypeIdField;
            }
            set {
                if ((this.SaleTypeIdField.Equals(value) != true)) {
                    this.SaleTypeIdField = value;
                    this.RaisePropertyChanged("SaleTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string SaleTypeName {
            get {
                return this.SaleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleTypeNameField, value) != true)) {
                    this.SaleTypeNameField = value;
                    this.RaisePropertyChanged("SaleTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string SaleTypeTooltip {
            get {
                return this.SaleTypeTooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleTypeTooltipField, value) != true)) {
                    this.SaleTypeTooltipField = value;
                    this.RaisePropertyChanged("SaleTypeTooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int ProbId {
            get {
                return this.ProbIdField;
            }
            set {
                if ((this.ProbIdField.Equals(value) != true)) {
                    this.ProbIdField = value;
                    this.RaisePropertyChanged("ProbId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string ProbName {
            get {
                return this.ProbNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProbNameField, value) != true)) {
                    this.ProbNameField = value;
                    this.RaisePropertyChanged("ProbName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string ProbTooltip {
            get {
                return this.ProbTooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.ProbTooltipField, value) != true)) {
                    this.ProbTooltipField = value;
                    this.RaisePropertyChanged("ProbTooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public short Probability {
            get {
                return this.ProbabilityField;
            }
            set {
                if ((this.ProbabilityField.Equals(value) != true)) {
                    this.ProbabilityField = value;
                    this.RaisePropertyChanged("Probability");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Task : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class Appointment : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AppointmentType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ColorIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlldayEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AppointmentPrivate PrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.TaskType TaskTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBookingMainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecurrenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBookingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AssignmentStatus AssignmentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.BookingType BookingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ActivityStatus CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrencePattern RecurringPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecurringStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecurringEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MotherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedByFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AlarmLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByAssociateIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppointmentId {
            get {
                return this.AppointmentIdField;
            }
            set {
                if ((this.AppointmentIdField.Equals(value) != true)) {
                    this.AppointmentIdField = value;
                    this.RaisePropertyChanged("AppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public AOS.DataAccessLayer.Appointment82.AppointmentType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string AssociateFullName {
            get {
                return this.AssociateFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateFullNameField, value) != true)) {
                    this.AssociateFullNameField = value;
                    this.RaisePropertyChanged("AssociateFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string PersonFullName {
            get {
                return this.PersonFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFullNameField, value) != true)) {
                    this.PersonFullNameField = value;
                    this.RaisePropertyChanged("PersonFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int AssociateId {
            get {
                return this.AssociateIdField;
            }
            set {
                if ((this.AssociateIdField.Equals(value) != true)) {
                    this.AssociateIdField = value;
                    this.RaisePropertyChanged("AssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public short ColorIndex {
            get {
                return this.ColorIndexField;
            }
            set {
                if ((this.ColorIndexField.Equals(value) != true)) {
                    this.ColorIndexField = value;
                    this.RaisePropertyChanged("ColorIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public bool IsFree {
            get {
                return this.IsFreeField;
            }
            set {
                if ((this.IsFreeField.Equals(value) != true)) {
                    this.IsFreeField = value;
                    this.RaisePropertyChanged("IsFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public bool HasAlarm {
            get {
                return this.HasAlarmField;
            }
            set {
                if ((this.HasAlarmField.Equals(value) != true)) {
                    this.HasAlarmField = value;
                    this.RaisePropertyChanged("HasAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public bool IsAlldayEvent {
            get {
                return this.IsAlldayEventField;
            }
            set {
                if ((this.IsAlldayEventField.Equals(value) != true)) {
                    this.IsAlldayEventField = value;
                    this.RaisePropertyChanged("IsAlldayEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public AOS.DataAccessLayer.Appointment82.AppointmentPrivate Private {
            get {
                return this.PrivateField;
            }
            set {
                if ((this.PrivateField.Equals(value) != true)) {
                    this.PrivateField = value;
                    this.RaisePropertyChanged("Private");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public int PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string PriorityName {
            get {
                return this.PriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityNameField, value) != true)) {
                    this.PriorityNameField = value;
                    this.RaisePropertyChanged("PriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public AOS.DataAccessLayer.Appointment82.TaskType TaskType {
            get {
                return this.TaskTypeField;
            }
            set {
                if ((this.TaskTypeField.Equals(value) != true)) {
                    this.TaskTypeField = value;
                    this.RaisePropertyChanged("TaskType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public bool IsBookingMain {
            get {
                return this.IsBookingMainField;
            }
            set {
                if ((this.IsBookingMainField.Equals(value) != true)) {
                    this.IsBookingMainField = value;
                    this.RaisePropertyChanged("IsBookingMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public bool IsRecurrence {
            get {
                return this.IsRecurrenceField;
            }
            set {
                if ((this.IsRecurrenceField.Equals(value) != true)) {
                    this.IsRecurrenceField = value;
                    this.RaisePropertyChanged("IsRecurrence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public bool IsBooking {
            get {
                return this.IsBookingField;
            }
            set {
                if ((this.IsBookingField.Equals(value) != true)) {
                    this.IsBookingField = value;
                    this.RaisePropertyChanged("IsBooking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public System.DateTime ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public AOS.DataAccessLayer.Appointment82.AssignmentStatus AssignmentStatus {
            get {
                return this.AssignmentStatusField;
            }
            set {
                if ((this.AssignmentStatusField.Equals(value) != true)) {
                    this.AssignmentStatusField = value;
                    this.RaisePropertyChanged("AssignmentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatus {
            get {
                return this.InvitationStatusField;
            }
            set {
                if ((this.InvitationStatusField.Equals(value) != true)) {
                    this.InvitationStatusField = value;
                    this.RaisePropertyChanged("InvitationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public AOS.DataAccessLayer.Appointment82.BookingType BookingType {
            get {
                return this.BookingTypeField;
            }
            set {
                if ((this.BookingTypeField.Equals(value) != true)) {
                    this.BookingTypeField = value;
                    this.RaisePropertyChanged("BookingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public AOS.DataAccessLayer.Appointment82.ActivityStatus Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public AOS.DataAccessLayer.Appointment82.RecurrencePattern RecurringPattern {
            get {
                return this.RecurringPatternField;
            }
            set {
                if ((this.RecurringPatternField.Equals(value) != true)) {
                    this.RecurringPatternField = value;
                    this.RaisePropertyChanged("RecurringPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public System.DateTime RecurringStartDate {
            get {
                return this.RecurringStartDateField;
            }
            set {
                if ((this.RecurringStartDateField.Equals(value) != true)) {
                    this.RecurringStartDateField = value;
                    this.RaisePropertyChanged("RecurringStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=33)]
        public System.DateTime RecurringEndDate {
            get {
                return this.RecurringEndDateField;
            }
            set {
                if ((this.RecurringEndDateField.Equals(value) != true)) {
                    this.RecurringEndDateField = value;
                    this.RaisePropertyChanged("RecurringEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=34)]
        public int MotherId {
            get {
                return this.MotherIdField;
            }
            set {
                if ((this.MotherIdField.Equals(value) != true)) {
                    this.MotherIdField = value;
                    this.RaisePropertyChanged("MotherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=35)]
        public int AssignedBy {
            get {
                return this.AssignedByField;
            }
            set {
                if ((this.AssignedByField.Equals(value) != true)) {
                    this.AssignedByField = value;
                    this.RaisePropertyChanged("AssignedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=36)]
        public string AssignedByFullName {
            get {
                return this.AssignedByFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedByFullNameField, value) != true)) {
                    this.AssignedByFullNameField = value;
                    this.RaisePropertyChanged("AssignedByFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=37)]
        public string RejectReason {
            get {
                return this.RejectReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectReasonField, value) != true)) {
                    this.RejectReasonField = value;
                    this.RaisePropertyChanged("RejectReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=38)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=39)]
        public System.TimeSpan AlarmLeadTime {
            get {
                return this.AlarmLeadTimeField;
            }
            set {
                if ((this.AlarmLeadTimeField.Equals(value) != true)) {
                    this.AlarmLeadTimeField = value;
                    this.RaisePropertyChanged("AlarmLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=40)]
        public int SaleId {
            get {
                return this.SaleIdField;
            }
            set {
                if ((this.SaleIdField.Equals(value) != true)) {
                    this.SaleIdField = value;
                    this.RaisePropertyChanged("SaleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=41)]
        public string SaleName {
            get {
                return this.SaleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleNameField, value) != true)) {
                    this.SaleNameField = value;
                    this.RaisePropertyChanged("SaleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=42)]
        public string AssociateName {
            get {
                return this.AssociateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateNameField, value) != true)) {
                    this.AssociateNameField = value;
                    this.RaisePropertyChanged("AssociateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=43)]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=44)]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=45)]
        public string CreatedByFullName {
            get {
                return this.CreatedByFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByFullNameField, value) != true)) {
                    this.CreatedByFullNameField = value;
                    this.RaisePropertyChanged("CreatedByFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=46)]
        public int CreatedByAssociateId {
            get {
                return this.CreatedByAssociateIdField;
            }
            set {
                if ((this.CreatedByAssociateIdField.Equals(value) != true)) {
                    this.CreatedByAssociateIdField = value;
                    this.RaisePropertyChanged("CreatedByAssociateId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentSyncData", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class AppointmentSyncData : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlarmTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAllDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAssignmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBusyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInvitationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTentativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ParticipantSyncData[] ParticipantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFormalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmTime {
            get {
                return this.AlarmTimeField;
            }
            set {
                if ((this.AlarmTimeField.Equals(value) != true)) {
                    this.AlarmTimeField = value;
                    this.RaisePropertyChanged("AlarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppointmentId {
            get {
                return this.AppointmentIdField;
            }
            set {
                if ((this.AppointmentIdField.Equals(value) != true)) {
                    this.AppointmentIdField = value;
                    this.RaisePropertyChanged("AppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppointmentText {
            get {
                return this.AppointmentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentTextField, value) != true)) {
                    this.AppointmentTextField = value;
                    this.RaisePropertyChanged("AppointmentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactDepartment {
            get {
                return this.ContactDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactDepartmentField, value) != true)) {
                    this.ContactDepartmentField = value;
                    this.RaisePropertyChanged("ContactDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactFullName {
            get {
                return this.ContactFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFullNameField, value) != true)) {
                    this.ContactFullNameField = value;
                    this.RaisePropertyChanged("ContactFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool HasAlarm {
            get {
                return this.HasAlarmField;
            }
            set {
                if ((this.HasAlarmField.Equals(value) != true)) {
                    this.HasAlarmField = value;
                    this.RaisePropertyChanged("HasAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool IsAllDay {
            get {
                return this.IsAllDayField;
            }
            set {
                if ((this.IsAllDayField.Equals(value) != true)) {
                    this.IsAllDayField = value;
                    this.RaisePropertyChanged("IsAllDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public bool IsAssignment {
            get {
                return this.IsAssignmentField;
            }
            set {
                if ((this.IsAssignmentField.Equals(value) != true)) {
                    this.IsAssignmentField = value;
                    this.RaisePropertyChanged("IsAssignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public bool IsBusy {
            get {
                return this.IsBusyField;
            }
            set {
                if ((this.IsBusyField.Equals(value) != true)) {
                    this.IsBusyField = value;
                    this.RaisePropertyChanged("IsBusy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool IsCompleted {
            get {
                return this.IsCompletedField;
            }
            set {
                if ((this.IsCompletedField.Equals(value) != true)) {
                    this.IsCompletedField = value;
                    this.RaisePropertyChanged("IsCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public bool IsInvitation {
            get {
                return this.IsInvitationField;
            }
            set {
                if ((this.IsInvitationField.Equals(value) != true)) {
                    this.IsInvitationField = value;
                    this.RaisePropertyChanged("IsInvitation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public bool IsTentative {
            get {
                return this.IsTentativeField;
            }
            set {
                if ((this.IsTentativeField.Equals(value) != true)) {
                    this.IsTentativeField = value;
                    this.RaisePropertyChanged("IsTentative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public AOS.DataAccessLayer.Appointment82.ParticipantSyncData[] Participants {
            get {
                return this.ParticipantsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantsField, value) != true)) {
                    this.ParticipantsField = value;
                    this.RaisePropertyChanged("Participants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string PersonFormalName {
            get {
                return this.PersonFormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFormalNameField, value) != true)) {
                    this.PersonFormalNameField = value;
                    this.RaisePropertyChanged("PersonFormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string PersonFullName {
            get {
                return this.PersonFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFullNameField, value) != true)) {
                    this.PersonFullNameField = value;
                    this.RaisePropertyChanged("PersonFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public int SaleId {
            get {
                return this.SaleIdField;
            }
            set {
                if ((this.SaleIdField.Equals(value) != true)) {
                    this.SaleIdField = value;
                    this.RaisePropertyChanged("SaleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public string SaleName {
            get {
                return this.SaleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleNameField, value) != true)) {
                    this.SaleNameField = value;
                    this.RaisePropertyChanged("SaleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipantSyncData", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class ParticipantSyncData : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonLastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonMrmrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonAcademicTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFormalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactBusinessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PhonePrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PhoneFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PhoneMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PhoneDirectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PhoneContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MessengerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] VoipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ContactUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AddressSyncData StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AddressSyncData PostalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AddressSyncData PersonAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AppointmentStatus ParticipantStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string PersonFirstName {
            get {
                return this.PersonFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFirstNameField, value) != true)) {
                    this.PersonFirstNameField = value;
                    this.RaisePropertyChanged("PersonFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string PersonMiddleName {
            get {
                return this.PersonMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonMiddleNameField, value) != true)) {
                    this.PersonMiddleNameField = value;
                    this.RaisePropertyChanged("PersonMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string PersonLastname {
            get {
                return this.PersonLastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonLastnameField, value) != true)) {
                    this.PersonLastnameField = value;
                    this.RaisePropertyChanged("PersonLastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string PersonMrmrs {
            get {
                return this.PersonMrmrsField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonMrmrsField, value) != true)) {
                    this.PersonMrmrsField = value;
                    this.RaisePropertyChanged("PersonMrmrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PersonTitle {
            get {
                return this.PersonTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonTitleField, value) != true)) {
                    this.PersonTitleField = value;
                    this.RaisePropertyChanged("PersonTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PersonPosition {
            get {
                return this.PersonPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonPositionField, value) != true)) {
                    this.PersonPositionField = value;
                    this.RaisePropertyChanged("PersonPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string PersonAcademicTitle {
            get {
                return this.PersonAcademicTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonAcademicTitleField, value) != true)) {
                    this.PersonAcademicTitleField = value;
                    this.RaisePropertyChanged("PersonAcademicTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string PersonFormalName {
            get {
                return this.PersonFormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFormalNameField, value) != true)) {
                    this.PersonFormalNameField = value;
                    this.RaisePropertyChanged("PersonFormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string PersonFullName {
            get {
                return this.PersonFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFullNameField, value) != true)) {
                    this.PersonFullNameField = value;
                    this.RaisePropertyChanged("PersonFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string ContactDepartment {
            get {
                return this.ContactDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactDepartmentField, value) != true)) {
                    this.ContactDepartmentField = value;
                    this.RaisePropertyChanged("ContactDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string ContactBusiness {
            get {
                return this.ContactBusinessField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactBusinessField, value) != true)) {
                    this.ContactBusinessField = value;
                    this.RaisePropertyChanged("ContactBusiness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string ContactCountry {
            get {
                return this.ContactCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactCountryField, value) != true)) {
                    this.ContactCountryField = value;
                    this.RaisePropertyChanged("ContactCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string ContactCategory {
            get {
                return this.ContactCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactCategoryField, value) != true)) {
                    this.ContactCategoryField = value;
                    this.RaisePropertyChanged("ContactCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string ContactFullName {
            get {
                return this.ContactFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFullNameField, value) != true)) {
                    this.ContactFullNameField = value;
                    this.RaisePropertyChanged("ContactFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string[] EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string[] PhonePrivate {
            get {
                return this.PhonePrivateField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonePrivateField, value) != true)) {
                    this.PhonePrivateField = value;
                    this.RaisePropertyChanged("PhonePrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string[] PhoneFax {
            get {
                return this.PhoneFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneFaxField, value) != true)) {
                    this.PhoneFaxField = value;
                    this.RaisePropertyChanged("PhoneFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string[] PhoneMobile {
            get {
                return this.PhoneMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneMobileField, value) != true)) {
                    this.PhoneMobileField = value;
                    this.RaisePropertyChanged("PhoneMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string[] PhoneDirect {
            get {
                return this.PhoneDirectField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneDirectField, value) != true)) {
                    this.PhoneDirectField = value;
                    this.RaisePropertyChanged("PhoneDirect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public string[] PhoneContact {
            get {
                return this.PhoneContactField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneContactField, value) != true)) {
                    this.PhoneContactField = value;
                    this.RaisePropertyChanged("PhoneContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public string[] Messenger {
            get {
                return this.MessengerField;
            }
            set {
                if ((object.ReferenceEquals(this.MessengerField, value) != true)) {
                    this.MessengerField = value;
                    this.RaisePropertyChanged("Messenger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public string[] Voip {
            get {
                return this.VoipField;
            }
            set {
                if ((object.ReferenceEquals(this.VoipField, value) != true)) {
                    this.VoipField = value;
                    this.RaisePropertyChanged("Voip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public string[] ContactUrl {
            get {
                return this.ContactUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactUrlField, value) != true)) {
                    this.ContactUrlField = value;
                    this.RaisePropertyChanged("ContactUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public string[] Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public AOS.DataAccessLayer.Appointment82.AddressSyncData StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public AOS.DataAccessLayer.Appointment82.AddressSyncData PostalAddress {
            get {
                return this.PostalAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalAddressField, value) != true)) {
                    this.PostalAddressField = value;
                    this.RaisePropertyChanged("PostalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public AOS.DataAccessLayer.Appointment82.AddressSyncData PersonAddress {
            get {
                return this.PersonAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonAddressField, value) != true)) {
                    this.PersonAddressField = value;
                    this.RaisePropertyChanged("PersonAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public string PersonCountry {
            get {
                return this.PersonCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonCountryField, value) != true)) {
                    this.PersonCountryField = value;
                    this.RaisePropertyChanged("PersonCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public AOS.DataAccessLayer.Appointment82.AppointmentStatus ParticipantStatus {
            get {
                return this.ParticipantStatusField;
            }
            set {
                if ((this.ParticipantStatusField.Equals(value) != true)) {
                    this.ParticipantStatusField = value;
                    this.RaisePropertyChanged("ParticipantStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressSyncData", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class AddressSyncData : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AddressType AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormattedAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.AddressType AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((this.AddressTypeField.Equals(value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string FormattedAddress {
            get {
                return this.FormattedAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FormattedAddressField, value) != true)) {
                    this.FormattedAddressField = value;
                    this.RaisePropertyChanged("FormattedAddress");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMailConnectionInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class EMailConnectionInfo : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseSSLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Folder {
            get {
                return this.FolderField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderField, value) != true)) {
                    this.FolderField = value;
                    this.RaisePropertyChanged("Folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool UseSSL {
            get {
                return this.UseSSLField;
            }
            set {
                if ((this.UseSSLField.Equals(value) != true)) {
                    this.UseSSLField = value;
                    this.RaisePropertyChanged("UseSSL");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuggestedAppointment", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class SuggestedAppointment : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AutoSuggestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DaysFutureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuggestedAppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleTypeStageLinkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegisteredAssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectTypeStatusLinkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Associate AssociateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AutoSuggest {
            get {
                return this.AutoSuggestField;
            }
            set {
                if ((this.AutoSuggestField.Equals(value) != true)) {
                    this.AutoSuggestField = value;
                    this.RaisePropertyChanged("AutoSuggest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public short DaysFuture {
            get {
                return this.DaysFutureField;
            }
            set {
                if ((this.DaysFutureField.Equals(value) != true)) {
                    this.DaysFutureField = value;
                    this.RaisePropertyChanged("DaysFuture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int SuggestedAppointmentId {
            get {
                return this.SuggestedAppointmentIdField;
            }
            set {
                if ((this.SuggestedAppointmentIdField.Equals(value) != true)) {
                    this.SuggestedAppointmentIdField = value;
                    this.RaisePropertyChanged("SuggestedAppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int SaleTypeStageLinkId {
            get {
                return this.SaleTypeStageLinkIdField;
            }
            set {
                if ((this.SaleTypeStageLinkIdField.Equals(value) != true)) {
                    this.SaleTypeStageLinkIdField = value;
                    this.RaisePropertyChanged("SaleTypeStageLinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int RegisteredAssociateId {
            get {
                return this.RegisteredAssociateIdField;
            }
            set {
                if ((this.RegisteredAssociateIdField.Equals(value) != true)) {
                    this.RegisteredAssociateIdField = value;
                    this.RaisePropertyChanged("RegisteredAssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public short Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int ProjectTypeStatusLinkId {
            get {
                return this.ProjectTypeStatusLinkIdField;
            }
            set {
                if ((this.ProjectTypeStatusLinkIdField.Equals(value) != true)) {
                    this.ProjectTypeStatusLinkIdField = value;
                    this.RaisePropertyChanged("ProjectTypeStatusLinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public short Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public AOS.DataAccessLayer.Appointment82.Associate Associate {
            get {
                return this.AssociateField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateField, value) != true)) {
                    this.AssociateField = value;
                    this.RaisePropertyChanged("Associate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayInformationListItem", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class DayInformationListItem : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ActivitySummary ActivityInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RedLetterSummary RedLetterInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.ActivitySummary ActivityInformation {
            get {
                return this.ActivityInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityInformationField, value) != true)) {
                    this.ActivityInformationField = value;
                    this.RaisePropertyChanged("ActivityInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.RedLetterSummary RedLetterInformation {
            get {
                return this.RedLetterInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.RedLetterInformationField, value) != true)) {
                    this.RedLetterInformationField = value;
                    this.RaisePropertyChanged("RedLetterInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivitySummary", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class ActivitySummary : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumBusyActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumFreeActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentageBusyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumBusyActivities {
            get {
                return this.NumBusyActivitiesField;
            }
            set {
                if ((this.NumBusyActivitiesField.Equals(value) != true)) {
                    this.NumBusyActivitiesField = value;
                    this.RaisePropertyChanged("NumBusyActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumFreeActivities {
            get {
                return this.NumFreeActivitiesField;
            }
            set {
                if ((this.NumFreeActivitiesField.Equals(value) != true)) {
                    this.NumFreeActivitiesField = value;
                    this.RaisePropertyChanged("NumFreeActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentageBusy {
            get {
                return this.PercentageBusyField;
            }
            set {
                if ((this.PercentageBusyField.Equals(value) != true)) {
                    this.PercentageBusyField = value;
                    this.RaisePropertyChanged("PercentageBusy");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RedLetterSummary", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RedLetterSummary : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOwnCountryHolidayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOtherCountryHolidayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOwnCountryHoliday {
            get {
                return this.IsOwnCountryHolidayField;
            }
            set {
                if ((this.IsOwnCountryHolidayField.Equals(value) != true)) {
                    this.IsOwnCountryHolidayField = value;
                    this.RaisePropertyChanged("IsOwnCountryHoliday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool IsOtherCountryHoliday {
            get {
                return this.IsOtherCountryHolidayField;
            }
            set {
                if ((this.IsOtherCountryHolidayField.Equals(value) != true)) {
                    this.IsOtherCountryHolidayField = value;
                    this.RaisePropertyChanged("IsOtherCountryHoliday");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityInformationListItem", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class ActivityInformationListItem : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ActivitySummary ActivityInformationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public AOS.DataAccessLayer.Appointment82.ActivitySummary ActivityInformation {
            get {
                return this.ActivityInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityInformationField, value) != true)) {
                    this.ActivityInformationField = value;
                    this.RaisePropertyChanged("ActivityInformation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RedLetterInformationListItem", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RedLetterInformationListItem : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RedLetterSummary RedLetterInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RedLetterDetails RedLetterDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.RedLetterSummary RedLetterInformation {
            get {
                return this.RedLetterInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.RedLetterInformationField, value) != true)) {
                    this.RedLetterInformationField = value;
                    this.RaisePropertyChanged("RedLetterInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public AOS.DataAccessLayer.Appointment82.RedLetterDetails RedLetterDetails {
            get {
                return this.RedLetterDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RedLetterDetailsField, value) != true)) {
                    this.RedLetterDetailsField = value;
                    this.RaisePropertyChanged("RedLetterDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RedLetterDetails", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RedLetterDetails : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OwnCountryDayTextsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OtherCountryDayTextsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] OwnCountryDayTexts {
            get {
                return this.OwnCountryDayTextsField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnCountryDayTextsField, value) != true)) {
                    this.OwnCountryDayTextsField = value;
                    this.RaisePropertyChanged("OwnCountryDayTexts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string[] OtherCountryDayTexts {
            get {
                return this.OtherCountryDayTextsField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherCountryDayTextsField, value) != true)) {
                    this.OtherCountryDayTextsField = value;
                    this.RaisePropertyChanged("OtherCountryDayTexts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiAlarmData", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class MultiAlarmData : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AlarmData[] AlarmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PollingIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SilentAfterField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.AlarmData[] Alarms {
            get {
                return this.AlarmsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmsField, value) != true)) {
                    this.AlarmsField = value;
                    this.RaisePropertyChanged("Alarms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PollingInterval {
            get {
                return this.PollingIntervalField;
            }
            set {
                if ((this.PollingIntervalField.Equals(value) != true)) {
                    this.PollingIntervalField = value;
                    this.RaisePropertyChanged("PollingInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SilentAfter {
            get {
                return this.SilentAfterField;
            }
            set {
                if ((this.SilentAfterField.Equals(value) != true)) {
                    this.SilentAfterField = value;
                    this.RaisePropertyChanged("SilentAfter");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmData", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class AlarmData : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlarmTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppointmentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AssignmentStatus AssignmentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.BookingType BookingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactDepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFullNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AppointmentId {
            get {
                return this.AppointmentIdField;
            }
            set {
                if ((this.AppointmentIdField.Equals(value) != true)) {
                    this.AppointmentIdField = value;
                    this.RaisePropertyChanged("AppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime AlarmTime {
            get {
                return this.AlarmTimeField;
            }
            set {
                if ((this.AlarmTimeField.Equals(value) != true)) {
                    this.AlarmTimeField = value;
                    this.RaisePropertyChanged("AlarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PersonFullName {
            get {
                return this.PersonFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonFullNameField, value) != true)) {
                    this.PersonFullNameField = value;
                    this.RaisePropertyChanged("PersonFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string AppointmentText {
            get {
                return this.AppointmentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentTextField, value) != true)) {
                    this.AppointmentTextField = value;
                    this.RaisePropertyChanged("AppointmentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int SaleId {
            get {
                return this.SaleIdField;
            }
            set {
                if ((this.SaleIdField.Equals(value) != true)) {
                    this.SaleIdField = value;
                    this.RaisePropertyChanged("SaleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string SaleName {
            get {
                return this.SaleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleNameField, value) != true)) {
                    this.SaleNameField = value;
                    this.RaisePropertyChanged("SaleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType {
            get {
                return this.AppointmentTypeField;
            }
            set {
                if ((this.AppointmentTypeField.Equals(value) != true)) {
                    this.AppointmentTypeField = value;
                    this.RaisePropertyChanged("AppointmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public AOS.DataAccessLayer.Appointment82.AssignmentStatus AssignmentStatus {
            get {
                return this.AssignmentStatusField;
            }
            set {
                if ((this.AssignmentStatusField.Equals(value) != true)) {
                    this.AssignmentStatusField = value;
                    this.RaisePropertyChanged("AssignmentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatus {
            get {
                return this.InvitationStatusField;
            }
            set {
                if ((this.InvitationStatusField.Equals(value) != true)) {
                    this.InvitationStatusField = value;
                    this.RaisePropertyChanged("InvitationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public AOS.DataAccessLayer.Appointment82.BookingType BookingType {
            get {
                return this.BookingTypeField;
            }
            set {
                if ((this.BookingTypeField.Equals(value) != true)) {
                    this.BookingTypeField = value;
                    this.RaisePropertyChanged("BookingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string FormalName {
            get {
                return this.FormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormalNameField, value) != true)) {
                    this.FormalNameField = value;
                    this.RaisePropertyChanged("FormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public string ContactDepartment {
            get {
                return this.ContactDepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactDepartmentField, value) != true)) {
                    this.ContactDepartmentField = value;
                    this.RaisePropertyChanged("ContactDepartment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public string ContactFullName {
            get {
                return this.ContactFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFullNameField, value) != true)) {
                    this.ContactFullNameField = value;
                    this.RaisePropertyChanged("ContactFullName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesActivity", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class SalesActivity : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Contact[] RequestedContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Person RequestedPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Person SalesRepField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Contact[] RequestedContacts {
            get {
                return this.RequestedContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedContactsField, value) != true)) {
                    this.RequestedContactsField = value;
                    this.RaisePropertyChanged("RequestedContacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Person RequestedPerson {
            get {
                return this.RequestedPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedPersonField, value) != true)) {
                    this.RequestedPersonField = value;
                    this.RaisePropertyChanged("RequestedPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Person SalesRep {
            get {
                return this.SalesRepField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesRepField, value) != true)) {
                    this.SalesRepField = value;
                    this.RaisePropertyChanged("SalesRep");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentEntity", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class AppointmentEntity : AOS.DataAccessLayer.Appointment82.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Associate AssociateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Contact ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Associate CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Associate UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Person InvitedPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MotherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Priority PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AppointmentPrivate PrivateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Project ProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AppointmentType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ActivityStatus CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveLinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Link[] LinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AlarmLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAlarmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ColorIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlldayEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan LagTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan LeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RejectCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceInfo RecurrenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.ParticipantInfo[] ParticipantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.AssignmentStatus AssignmentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.BookingType BookingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasConflictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Associate AssignedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Associate MotherAssociateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.TaskListItem TaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreferredTZLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Sale SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuggestedAppointmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMileStoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.StringDictionary UserDefinedFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.StringDictionary ExtraFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishEventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.VisibleFor[] VisibleForField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Associate Associate {
            get {
                return this.AssociateField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociateField, value) != true)) {
                    this.AssociateField = value;
                    this.RaisePropertyChanged("Associate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Contact Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Associate CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Associate UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int AppointmentId {
            get {
                return this.AppointmentIdField;
            }
            set {
                if ((this.AppointmentIdField.Equals(value) != true)) {
                    this.AppointmentIdField = value;
                    this.RaisePropertyChanged("AppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public AOS.DataAccessLayer.Appointment82.Person InvitedPerson {
            get {
                return this.InvitedPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.InvitedPersonField, value) != true)) {
                    this.InvitedPersonField = value;
                    this.RaisePropertyChanged("InvitedPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public AOS.DataAccessLayer.Appointment82.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int MotherId {
            get {
                return this.MotherIdField;
            }
            set {
                if ((this.MotherIdField.Equals(value) != true)) {
                    this.MotherIdField = value;
                    this.RaisePropertyChanged("MotherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public AOS.DataAccessLayer.Appointment82.Priority Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public AOS.DataAccessLayer.Appointment82.AppointmentPrivate Private {
            get {
                return this.PrivateField;
            }
            set {
                if ((this.PrivateField.Equals(value) != true)) {
                    this.PrivateField = value;
                    this.RaisePropertyChanged("Private");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public AOS.DataAccessLayer.Appointment82.Project Project {
            get {
                return this.ProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectField, value) != true)) {
                    this.ProjectField = value;
                    this.RaisePropertyChanged("Project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public AOS.DataAccessLayer.Appointment82.AppointmentType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.DateTime UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public AOS.DataAccessLayer.Appointment82.ActivityStatus Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public int ActiveLinks {
            get {
                return this.ActiveLinksField;
            }
            set {
                if ((this.ActiveLinksField.Equals(value) != true)) {
                    this.ActiveLinksField = value;
                    this.RaisePropertyChanged("ActiveLinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public AOS.DataAccessLayer.Appointment82.Link[] Links {
            get {
                return this.LinksField;
            }
            set {
                if ((object.ReferenceEquals(this.LinksField, value) != true)) {
                    this.LinksField = value;
                    this.RaisePropertyChanged("Links");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.TimeSpan AlarmLeadTime {
            get {
                return this.AlarmLeadTimeField;
            }
            set {
                if ((this.AlarmLeadTimeField.Equals(value) != true)) {
                    this.AlarmLeadTimeField = value;
                    this.RaisePropertyChanged("AlarmLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public bool HasAlarm {
            get {
                return this.HasAlarmField;
            }
            set {
                if ((this.HasAlarmField.Equals(value) != true)) {
                    this.HasAlarmField = value;
                    this.RaisePropertyChanged("HasAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public short ColorIndex {
            get {
                return this.ColorIndexField;
            }
            set {
                if ((this.ColorIndexField.Equals(value) != true)) {
                    this.ColorIndexField = value;
                    this.RaisePropertyChanged("ColorIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public bool IsFree {
            get {
                return this.IsFreeField;
            }
            set {
                if ((this.IsFreeField.Equals(value) != true)) {
                    this.IsFreeField = value;
                    this.RaisePropertyChanged("IsFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public bool IsAlldayEvent {
            get {
                return this.IsAlldayEventField;
            }
            set {
                if ((this.IsAlldayEventField.Equals(value) != true)) {
                    this.IsAlldayEventField = value;
                    this.RaisePropertyChanged("IsAlldayEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public System.TimeSpan LagTime {
            get {
                return this.LagTimeField;
            }
            set {
                if ((this.LagTimeField.Equals(value) != true)) {
                    this.LagTimeField = value;
                    this.RaisePropertyChanged("LagTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public System.TimeSpan LeadTime {
            get {
                return this.LeadTimeField;
            }
            set {
                if ((this.LeadTimeField.Equals(value) != true)) {
                    this.LeadTimeField = value;
                    this.RaisePropertyChanged("LeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public short RejectCounter {
            get {
                return this.RejectCounterField;
            }
            set {
                if ((this.RejectCounterField.Equals(value) != true)) {
                    this.RejectCounterField = value;
                    this.RaisePropertyChanged("RejectCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=29)]
        public string RejectReason {
            get {
                return this.RejectReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectReasonField, value) != true)) {
                    this.RejectReasonField = value;
                    this.RaisePropertyChanged("RejectReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=30)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceInfo Recurrence {
            get {
                return this.RecurrenceField;
            }
            set {
                if ((object.ReferenceEquals(this.RecurrenceField, value) != true)) {
                    this.RecurrenceField = value;
                    this.RaisePropertyChanged("Recurrence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=31)]
        public AOS.DataAccessLayer.Appointment82.ParticipantInfo[] Participants {
            get {
                return this.ParticipantsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantsField, value) != true)) {
                    this.ParticipantsField = value;
                    this.RaisePropertyChanged("Participants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=32)]
        public AOS.DataAccessLayer.Appointment82.AssignmentStatus AssignmentStatus {
            get {
                return this.AssignmentStatusField;
            }
            set {
                if ((this.AssignmentStatusField.Equals(value) != true)) {
                    this.AssignmentStatusField = value;
                    this.RaisePropertyChanged("AssignmentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=33)]
        public AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatus {
            get {
                return this.InvitationStatusField;
            }
            set {
                if ((this.InvitationStatusField.Equals(value) != true)) {
                    this.InvitationStatusField = value;
                    this.RaisePropertyChanged("InvitationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=34)]
        public AOS.DataAccessLayer.Appointment82.BookingType BookingType {
            get {
                return this.BookingTypeField;
            }
            set {
                if ((this.BookingTypeField.Equals(value) != true)) {
                    this.BookingTypeField = value;
                    this.RaisePropertyChanged("BookingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=35)]
        public System.DateTime ActiveDate {
            get {
                return this.ActiveDateField;
            }
            set {
                if ((this.ActiveDateField.Equals(value) != true)) {
                    this.ActiveDateField = value;
                    this.RaisePropertyChanged("ActiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=36)]
        public bool HasConflict {
            get {
                return this.HasConflictField;
            }
            set {
                if ((this.HasConflictField.Equals(value) != true)) {
                    this.HasConflictField = value;
                    this.RaisePropertyChanged("HasConflict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=37)]
        public AOS.DataAccessLayer.Appointment82.Associate AssignedBy {
            get {
                return this.AssignedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedByField, value) != true)) {
                    this.AssignedByField = value;
                    this.RaisePropertyChanged("AssignedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=38)]
        public AOS.DataAccessLayer.Appointment82.Associate MotherAssociate {
            get {
                return this.MotherAssociateField;
            }
            set {
                if ((object.ReferenceEquals(this.MotherAssociateField, value) != true)) {
                    this.MotherAssociateField = value;
                    this.RaisePropertyChanged("MotherAssociate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=39)]
        public AOS.DataAccessLayer.Appointment82.TaskListItem Task {
            get {
                return this.TaskField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskField, value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=40)]
        public int PreferredTZLocation {
            get {
                return this.PreferredTZLocationField;
            }
            set {
                if ((this.PreferredTZLocationField.Equals(value) != true)) {
                    this.PreferredTZLocationField = value;
                    this.RaisePropertyChanged("PreferredTZLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=41)]
        public AOS.DataAccessLayer.Appointment82.Sale Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleField, value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=42)]
        public int SuggestedAppointmentId {
            get {
                return this.SuggestedAppointmentIdField;
            }
            set {
                if ((this.SuggestedAppointmentIdField.Equals(value) != true)) {
                    this.SuggestedAppointmentIdField = value;
                    this.RaisePropertyChanged("SuggestedAppointmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=43)]
        public bool IsMileStone {
            get {
                return this.IsMileStoneField;
            }
            set {
                if ((this.IsMileStoneField.Equals(value) != true)) {
                    this.IsMileStoneField = value;
                    this.RaisePropertyChanged("IsMileStone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=44)]
        public AOS.DataAccessLayer.Appointment82.StringDictionary UserDefinedFields {
            get {
                return this.UserDefinedFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedFieldsField, value) != true)) {
                    this.UserDefinedFieldsField = value;
                    this.RaisePropertyChanged("UserDefinedFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=45)]
        public AOS.DataAccessLayer.Appointment82.StringDictionary ExtraFields {
            get {
                return this.ExtraFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraFieldsField, value) != true)) {
                    this.ExtraFieldsField = value;
                    this.RaisePropertyChanged("ExtraFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=46)]
        public System.DateTime PublishEventDate {
            get {
                return this.PublishEventDateField;
            }
            set {
                if ((this.PublishEventDateField.Equals(value) != true)) {
                    this.PublishEventDateField = value;
                    this.RaisePropertyChanged("PublishEventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=47)]
        public System.DateTime PublishTo {
            get {
                return this.PublishToField;
            }
            set {
                if ((this.PublishToField.Equals(value) != true)) {
                    this.PublishToField = value;
                    this.RaisePropertyChanged("PublishTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=48)]
        public System.DateTime PublishFrom {
            get {
                return this.PublishFromField;
            }
            set {
                if ((this.PublishFromField.Equals(value) != true)) {
                    this.PublishFromField = value;
                    this.RaisePropertyChanged("PublishFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=49)]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=50)]
        public AOS.DataAccessLayer.Appointment82.VisibleFor[] VisibleFor {
            get {
                return this.VisibleForField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibleForField, value) != true)) {
                    this.VisibleForField = value;
                    this.RaisePropertyChanged("VisibleFor");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FieldPropertyDictionary", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", ItemName="FieldPropertyDictionaryKeyValuePair", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class FieldPropertyDictionary : System.Collections.Generic.Dictionary<string, AOS.DataAccessLayer.Appointment82.FieldProperty> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RecurrenceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecurrenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceEndType RecurrenceEndTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrencePattern PatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceDayPattern DayPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceWeekPattern WeekPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceMonthPattern MonthPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceYearPattern YearPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceDate[] DatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecurrenceCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecurrenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecurrenceId {
            get {
                return this.RecurrenceIdField;
            }
            set {
                if ((this.RecurrenceIdField.Equals(value) != true)) {
                    this.RecurrenceIdField = value;
                    this.RaisePropertyChanged("RecurrenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceEndType RecurrenceEndType {
            get {
                return this.RecurrenceEndTypeField;
            }
            set {
                if ((this.RecurrenceEndTypeField.Equals(value) != true)) {
                    this.RecurrenceEndTypeField = value;
                    this.RaisePropertyChanged("RecurrenceEndType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public AOS.DataAccessLayer.Appointment82.RecurrencePattern Pattern {
            get {
                return this.PatternField;
            }
            set {
                if ((this.PatternField.Equals(value) != true)) {
                    this.PatternField = value;
                    this.RaisePropertyChanged("Pattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceDayPattern DayPattern {
            get {
                return this.DayPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.DayPatternField, value) != true)) {
                    this.DayPatternField = value;
                    this.RaisePropertyChanged("DayPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceWeekPattern WeekPattern {
            get {
                return this.WeekPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.WeekPatternField, value) != true)) {
                    this.WeekPatternField = value;
                    this.RaisePropertyChanged("WeekPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceMonthPattern MonthPattern {
            get {
                return this.MonthPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.MonthPatternField, value) != true)) {
                    this.MonthPatternField = value;
                    this.RaisePropertyChanged("MonthPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceYearPattern YearPattern {
            get {
                return this.YearPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.YearPatternField, value) != true)) {
                    this.YearPatternField = value;
                    this.RaisePropertyChanged("YearPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceDate[] Dates {
            get {
                return this.DatesField;
            }
            set {
                if ((object.ReferenceEquals(this.DatesField, value) != true)) {
                    this.DatesField = value;
                    this.RaisePropertyChanged("Dates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int RecurrenceCounter {
            get {
                return this.RecurrenceCounterField;
            }
            set {
                if ((this.RecurrenceCounterField.Equals(value) != true)) {
                    this.RecurrenceCounterField = value;
                    this.RaisePropertyChanged("RecurrenceCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public bool IsRecurrence {
            get {
                return this.IsRecurrenceField;
            }
            set {
                if ((this.IsRecurrenceField.Equals(value) != true)) {
                    this.IsRecurrenceField = value;
                    this.RaisePropertyChanged("IsRecurrence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentPrivate", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum AppointmentPrivate : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Public = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateUser = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrivateGroup = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum AppointmentType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        inDiary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        inChecklist = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Note = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedReport = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingForDiary = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingForChecklist = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeDraft = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MergeFinal = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityStatus", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum ActivityStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipantInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class ParticipantInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssociateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssociateId {
            get {
                return this.AssociateIdField;
            }
            set {
                if ((this.AssociateIdField.Equals(value) != true)) {
                    this.AssociateIdField = value;
                    this.RaisePropertyChanged("AssociateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((this.EmailIdField.Equals(value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool SendEmail {
            get {
                return this.SendEmailField;
            }
            set {
                if ((this.SendEmailField.Equals(value) != true)) {
                    this.SendEmailField = value;
                    this.RaisePropertyChanged("SendEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public AOS.DataAccessLayer.Appointment82.InvitationStatus InvitationStatus {
            get {
                return this.InvitationStatusField;
            }
            set {
                if ((this.InvitationStatusField.Equals(value) != true)) {
                    this.InvitationStatusField = value;
                    this.RaisePropertyChanged("InvitationStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignmentStatus", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum AssignmentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assigning = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Seen = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvitationStatus", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum InvitationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accepted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invitation = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Moved = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Seen = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovedSeen = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookingType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum BookingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Owner = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Participant = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="StringDictionary", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", ItemName="StringKeyValuePair", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class StringDictionary : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETableRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum ETableRight : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Select = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insert = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Filtering = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictedUpdate = 32,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldProperty", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class FieldProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.FieldRight FieldRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldLengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.FieldRight FieldRight {
            get {
                return this.FieldRightField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldRightField, value) != true)) {
                    this.FieldRightField = value;
                    this.RaisePropertyChanged("FieldRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldTypeField, value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int FieldLength {
            get {
                return this.FieldLengthField;
            }
            set {
                if ((this.FieldLengthField.Equals(value) != true)) {
                    this.FieldLengthField = value;
                    this.RaisePropertyChanged("FieldLength");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalAssociate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceAssociate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalAssociate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnonymousAssociate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAssociate = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class FieldRight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.EFieldRight MaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.EFieldRight Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((this.MaskField.Equals(value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFieldRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum EFieldRight : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Write = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused1 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused2 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused3 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused4 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UIHintMandatory = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UIHintReadOnly = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndefinedValue256 = 256,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskDirection", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum TaskDirection : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Incoming = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outgoing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaintAll = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum TaskType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Appointment = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fax = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToDo = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MailMergeDraft = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MailMergeFinal = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Report = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaintAll = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColorIndex", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum ColorIndex : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LightBlue = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DarkBlue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LightGray = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DarkGray = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LightGreen = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DarkGreen = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LightYellow = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DarkYellow = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LightRed = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DarkRed = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaleStatus", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum SaleStatus : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sold = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lost = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stalled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaintAll = 1000,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Visibility", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum Visibility : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Associate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Group = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrencePattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum RecurrencePattern : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Daily = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yearly = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Custom = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentStatus", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum AppointmentStatus : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownOrPostIt = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Booking = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingMoved = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingSeen = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingMovedSeen = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingDeclined = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingDeleted = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assignment = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssignmentSeen = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssignmentDeclined = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum AddressType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactPostalAddress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactStreetAddress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PersonPrivateAddress = 16387,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteBillingAddress = 8196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuoteShippingAddress = 8197,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceDayPattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RecurrenceDayPattern : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceDailyPattern PatternField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cycle {
            get {
                return this.CycleField;
            }
            set {
                if ((this.CycleField.Equals(value) != true)) {
                    this.CycleField = value;
                    this.RaisePropertyChanged("Cycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.RecurrenceDailyPattern Pattern {
            get {
                return this.PatternField;
            }
            set {
                if ((this.PatternField.Equals(value) != true)) {
                    this.PatternField = value;
                    this.RaisePropertyChanged("Pattern");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceWeekPattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RecurrenceWeekPattern : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Weekday WeekdaysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cycle {
            get {
                return this.CycleField;
            }
            set {
                if ((this.CycleField.Equals(value) != true)) {
                    this.CycleField = value;
                    this.RaisePropertyChanged("Cycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Weekday Weekdays {
            get {
                return this.WeekdaysField;
            }
            set {
                if ((this.WeekdaysField.Equals(value) != true)) {
                    this.WeekdaysField = value;
                    this.RaisePropertyChanged("Weekdays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceMonthPattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RecurrenceMonthPattern : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Weekday WeekdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.WeekOfMonth WeekOfMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceMonthlyPattern PatternField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cycle {
            get {
                return this.CycleField;
            }
            set {
                if ((this.CycleField.Equals(value) != true)) {
                    this.CycleField = value;
                    this.RaisePropertyChanged("Cycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Weekday Weekday {
            get {
                return this.WeekdayField;
            }
            set {
                if ((this.WeekdayField.Equals(value) != true)) {
                    this.WeekdayField = value;
                    this.RaisePropertyChanged("Weekday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public AOS.DataAccessLayer.Appointment82.WeekOfMonth WeekOfMonth {
            get {
                return this.WeekOfMonthField;
            }
            set {
                if ((this.WeekOfMonthField.Equals(value) != true)) {
                    this.WeekOfMonthField = value;
                    this.RaisePropertyChanged("WeekOfMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceMonthlyPattern Pattern {
            get {
                return this.PatternField;
            }
            set {
                if ((this.PatternField.Equals(value) != true)) {
                    this.PatternField = value;
                    this.RaisePropertyChanged("Pattern");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceYearPattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RecurrenceYearPattern : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CycleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.Weekday WeekdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.WeekOfMonth WeekOfMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.Appointment82.RecurrenceYearlyPattern PatternField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cycle {
            get {
                return this.CycleField;
            }
            set {
                if ((this.CycleField.Equals(value) != true)) {
                    this.CycleField = value;
                    this.RaisePropertyChanged("Cycle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.Appointment82.Weekday Weekday {
            get {
                return this.WeekdayField;
            }
            set {
                if ((this.WeekdayField.Equals(value) != true)) {
                    this.WeekdayField = value;
                    this.RaisePropertyChanged("Weekday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public AOS.DataAccessLayer.Appointment82.WeekOfMonth WeekOfMonth {
            get {
                return this.WeekOfMonthField;
            }
            set {
                if ((this.WeekOfMonthField.Equals(value) != true)) {
                    this.WeekOfMonthField = value;
                    this.RaisePropertyChanged("WeekOfMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceYearlyPattern Pattern {
            get {
                return this.PatternField;
            }
            set {
                if ((this.PatternField.Equals(value) != true)) {
                    this.PatternField = value;
                    this.RaisePropertyChanged("Pattern");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceEndType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum RecurrenceEndType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Counter = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceDate", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    [System.SerializableAttribute()]
    public partial class RecurrenceDate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConflictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionStyleHintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConflict {
            get {
                return this.IsConflictField;
            }
            set {
                if ((this.IsConflictField.Equals(value) != true)) {
                    this.IsConflictField = value;
                    this.RaisePropertyChanged("IsConflict");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string DescriptionStyleHint {
            get {
                return this.DescriptionStyleHintField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionStyleHintField, value) != true)) {
                    this.DescriptionStyleHintField = value;
                    this.RaisePropertyChanged("DescriptionStyleHint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceDailyPattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum RecurrenceDailyPattern : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EveryWorkday = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EveryWeekday = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EveryCyclicDay = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weekday", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum Weekday : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monday = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tuesday = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wednesday = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thursday = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Friday = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturday = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunday = 64,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeekOfMonth", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum WeekOfMonth : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        First = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Second = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Third = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fourth = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Last = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceMonthlyPattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum RecurrenceMonthlyPattern : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayOfMonth = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeekdayOfMonth = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceYearlyPattern", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum RecurrenceYearlyPattern : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayOfMonth = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeekdayOfMonth = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecurrenceUpdateMode", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
    public enum RecurrenceUpdateMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnlyThis = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisAndForward = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StopRecurrence = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="Appointment", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", ConfigurationName="Appointment82.Appointment1")]
    public interface Appointment1 {
        
        // CODEGEN: Generating message contract since message CreateDefaultAppointmentEntityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityResponse CreateDefaultAppointmentEntity(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityResponse> CreateDefaultAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest request);
        
        // CODEGEN: Generating message contract since message SaveAppointmentEntityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveAppointmen" +
            "tEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveAppointmen" +
            "tEntityResponse")]
        AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityResponse SaveAppointmentEntity(AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveAppointmen" +
            "tEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveAppointmen" +
            "tEntityResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityResponse> SaveAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest request);
        
        // CODEGEN: Generating message contract since message DeleteAppointmentEntityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/DeleteAppointm" +
            "entEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/DeleteAppointm" +
            "entEntityResponse")]
        AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityResponse DeleteAppointmentEntity(AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/DeleteAppointm" +
            "entEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/DeleteAppointm" +
            "entEntityResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityResponse> DeleteAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultSuggestedAppointmentEntityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultS" +
            "uggestedAppointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultS" +
            "uggestedAppointmentEntityResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityResponse CreateDefaultSuggestedAppointmentEntity(AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultS" +
            "uggestedAppointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultS" +
            "uggestedAppointmentEntityResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityResponse> CreateDefaultSuggestedAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest request);
        
        // CODEGEN: Generating message contract since message SaveSuggestedAppointmentEntityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveSuggestedA" +
            "ppointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveSuggestedA" +
            "ppointmentEntityResponse")]
        AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityResponse SaveSuggestedAppointmentEntity(AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveSuggestedA" +
            "ppointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveSuggestedA" +
            "ppointmentEntityResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityResponse> SaveSuggestedAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultTaskListItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultT" +
            "askListItem", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultT" +
            "askListItemResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemResponse CreateDefaultTaskListItem(AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultT" +
            "askListItem", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultT" +
            "askListItemResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemResponse> CreateDefaultTaskListItemAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest request);
        
        // CODEGEN: Generating message contract since message SaveTaskListItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveTaskListIt" +
            "em", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveTaskListIt" +
            "emResponse")]
        AOS.DataAccessLayer.Appointment82.SaveTaskListItemResponse SaveTaskListItem(AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveTaskListIt" +
            "em", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveTaskListIt" +
            "emResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveTaskListItemResponse> SaveTaskListItemAsync(AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest request);
        
        // CODEGEN: Generating message contract since message GetAppointmentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "Response")]
        AOS.DataAccessLayer.Appointment82.GetAppointmentResponse GetAppointment(AOS.DataAccessLayer.Appointment82.GetAppointmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentResponse> GetAppointmentAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentRequest request);
        
        // CODEGEN: Generating message contract since message ToggleAppointmentStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAppointm" +
            "entStatus", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAppointm" +
            "entStatusResponse")]
        AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusResponse ToggleAppointmentStatus(AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAppointm" +
            "entStatus", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAppointm" +
            "entStatusResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusResponse> ToggleAppointmentStatusAsync(AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest request);
        
        // CODEGEN: Generating message contract since message ToggleActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActivity" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActivity" +
            "Response")]
        AOS.DataAccessLayer.Appointment82.ToggleActivityResponse ToggleActivity(AOS.DataAccessLayer.Appointment82.ToggleActivityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActivity" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActivity" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleActivityResponse> ToggleActivityAsync(AOS.DataAccessLayer.Appointment82.ToggleActivityRequest request);
        
        // CODEGEN: Generating message contract since message ToggleActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActiviti" +
            "es", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActiviti" +
            "esResponse")]
        AOS.DataAccessLayer.Appointment82.ToggleActivitiesResponse ToggleActivities(AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActiviti" +
            "es", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleActiviti" +
            "esResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleActivitiesResponse> ToggleActivitiesAsync(AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message SetActivityStatusRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetActivitySta" +
            "tus", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetActivitySta" +
            "tusResponse")]
        AOS.DataAccessLayer.Appointment82.SetActivityStatusResponse SetActivityStatus(AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetActivitySta" +
            "tus", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetActivitySta" +
            "tusResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SetActivityStatusResponse> SetActivityStatusAsync(AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest request);
        
        // CODEGEN: Generating message contract since message ToggleAndSetActivitiesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAndSetAc" +
            "tivities", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAndSetAc" +
            "tivitiesResponse")]
        AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesResponse ToggleAndSetActivities(AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAndSetAc" +
            "tivities", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ToggleAndSetAc" +
            "tivitiesResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesResponse> ToggleAndSetActivitiesAsync(AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest request);
        
        // CODEGEN: Generating message contract since message GetMySyncAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMySyncAppoi" +
            "ntments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMySyncAppoi" +
            "ntmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsResponse GetMySyncAppointments(AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMySyncAppoi" +
            "ntments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMySyncAppoi" +
            "ntmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsResponse> GetMySyncAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetAppointmentEntityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "Entity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "EntityResponse")]
        AOS.DataAccessLayer.Appointment82.GetAppointmentEntityResponse GetAppointmentEntity(AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "Entity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "EntityResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentEntityResponse> GetAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultAppointmentEntityByTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByTypeResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeResponse CreateDefaultAppointmentEntityByType(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByTypeResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeResponse> CreateDefaultAppointmentEntityByTypeAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest request);
        
        // CODEGEN: Generating message contract since message AcceptRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Accept", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AcceptResponse" +
            "")]
        AOS.DataAccessLayer.Appointment82.AcceptResponse Accept(AOS.DataAccessLayer.Appointment82.AcceptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Accept", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AcceptResponse" +
            "")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AcceptResponse> AcceptAsync(AOS.DataAccessLayer.Appointment82.AcceptRequest request);
        
        // CODEGEN: Generating message contract since message RejectRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Reject", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/RejectResponse" +
            "")]
        AOS.DataAccessLayer.Appointment82.RejectResponse Reject(AOS.DataAccessLayer.Appointment82.RejectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Reject", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/RejectResponse" +
            "")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.RejectResponse> RejectAsync(AOS.DataAccessLayer.Appointment82.RejectRequest request);
        
        // CODEGEN: Generating message contract since message SaveRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Save", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveResponse")]
        AOS.DataAccessLayer.Appointment82.SaveResponse Save(AOS.DataAccessLayer.Appointment82.SaveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Save", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SaveResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveResponse> SaveAsync(AOS.DataAccessLayer.Appointment82.SaveRequest request);
        
        // CODEGEN: Generating message contract since message DeleteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Delete", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/DeleteResponse" +
            "")]
        AOS.DataAccessLayer.Appointment82.DeleteResponse Delete(AOS.DataAccessLayer.Appointment82.DeleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Delete", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/DeleteResponse" +
            "")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.DeleteResponse> DeleteAsync(AOS.DataAccessLayer.Appointment82.DeleteRequest request);
        
        // CODEGEN: Generating message contract since message CalculateDaysRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CalculateDays", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CalculateDaysR" +
            "esponse")]
        AOS.DataAccessLayer.Appointment82.CalculateDaysResponse CalculateDays(AOS.DataAccessLayer.Appointment82.CalculateDaysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CalculateDays", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CalculateDaysR" +
            "esponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CalculateDaysResponse> CalculateDaysAsync(AOS.DataAccessLayer.Appointment82.CalculateDaysRequest request);
        
        // CODEGEN: Generating message contract since message ValidateDaysRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ValidateDays", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ValidateDaysRe" +
            "sponse")]
        AOS.DataAccessLayer.Appointment82.ValidateDaysResponse ValidateDays(AOS.DataAccessLayer.Appointment82.ValidateDaysRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ValidateDays", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/ValidateDaysRe" +
            "sponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ValidateDaysResponse> ValidateDaysAsync(AOS.DataAccessLayer.Appointment82.ValidateDaysRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultRecurrenceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrence", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrenceResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceResponse CreateDefaultRecurrence(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrence", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrenceResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceResponse> CreateDefaultRecurrenceAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest request);
        
        // CODEGEN: Generating message contract since message AssignToRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AssignTo", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AssignToRespon" +
            "se")]
        AOS.DataAccessLayer.Appointment82.AssignToResponse AssignTo(AOS.DataAccessLayer.Appointment82.AssignToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AssignTo", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AssignToRespon" +
            "se")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AssignToResponse> AssignToAsync(AOS.DataAccessLayer.Appointment82.AssignToRequest request);
        
        // CODEGEN: Generating message contract since message SetSeenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetSeen", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetSeenRespons" +
            "e")]
        AOS.DataAccessLayer.Appointment82.SetSeenResponse SetSeen(AOS.DataAccessLayer.Appointment82.SetSeenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetSeen", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/SetSeenRespons" +
            "e")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SetSeenResponse> SetSeenAsync(AOS.DataAccessLayer.Appointment82.SetSeenRequest request);
        
        // CODEGEN: Generating message contract since message MoveRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Move", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/MoveResponse")]
        AOS.DataAccessLayer.Appointment82.MoveResponse Move(AOS.DataAccessLayer.Appointment82.MoveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/Move", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/MoveResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.MoveResponse> MoveAsync(AOS.DataAccessLayer.Appointment82.MoveRequest request);
        
        // CODEGEN: Generating message contract since message AcceptRejectedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AcceptRejected" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AcceptRejected" +
            "Response")]
        AOS.DataAccessLayer.Appointment82.AcceptRejectedResponse AcceptRejected(AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AcceptRejected" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/AcceptRejected" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AcceptRejectedResponse> AcceptRejectedAsync(AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultRecurrenceByDateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrenceByDate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrenceByDateResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateResponse CreateDefaultRecurrenceByDate(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrenceByDate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "ecurrenceByDateResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateResponse> CreateDefaultRecurrenceByDateAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest request);
        
        // CODEGEN: Generating message contract since message CleanUpBookingDeletedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpBooking" +
            "Deleted", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpBooking" +
            "DeletedResponse")]
        AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedResponse CleanUpBookingDeleted(AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpBooking" +
            "Deleted", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpBooking" +
            "DeletedResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedResponse> CleanUpBookingDeletedAsync(AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest request);
        
        // CODEGEN: Generating message contract since message CleanUpRecurringBookingDeletedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpRecurri" +
            "ngBookingDeleted", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpRecurri" +
            "ngBookingDeletedResponse")]
        AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedResponse CleanUpRecurringBookingDeleted(AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpRecurri" +
            "ngBookingDeleted", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CleanUpRecurri" +
            "ngBookingDeletedResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedResponse> CleanUpRecurringBookingDeletedAsync(AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultAppointmentEntityByTypeAndAssociateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByTypeAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByTypeAndAssociateResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateResponse CreateDefaultAppointmentEntityByTypeAndAssociate(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByTypeAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityByTypeAndAssociateResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateResponse> CreateDefaultAppointmentEntityByTypeAndAssociateAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest request);
        
        // CODEGEN: Generating message contract since message GetCanInsertForAssociatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetCanInsertFo" +
            "rAssociates", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetCanInsertFo" +
            "rAssociatesResponse")]
        AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesResponse GetCanInsertForAssociates(AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetCanInsertFo" +
            "rAssociates", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetCanInsertFo" +
            "rAssociatesResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesResponse> GetCanInsertForAssociatesAsync(AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest request);
        
        // CODEGEN: Generating message contract since message GetAppointmentHaveParticipantsWithEmailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "HaveParticipantsWithEmail", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "HaveParticipantsWithEmailResponse")]
        AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailResponse GetAppointmentHaveParticipantsWithEmail(AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "HaveParticipantsWithEmail", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "HaveParticipantsWithEmailResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailResponse> GetAppointmentHaveParticipantsWithEmailAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultAppointmentEntityFromSaleSuggestionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromSaleSuggestion", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromSaleSuggestionResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionResponse CreateDefaultAppointmentEntityFromSaleSuggestion(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromSaleSuggestion", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromSaleSuggestionResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionResponse> CreateDefaultAppointmentEntityFromSaleSuggestionAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest request);
        
        // CODEGEN: Generating message contract since message GetNextSuggestedAppointmentBySaleRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetNextSuggest" +
            "edAppointmentBySale", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetNextSuggest" +
            "edAppointmentBySaleResponse")]
        AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleResponse GetNextSuggestedAppointmentBySale(AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetNextSuggest" +
            "edAppointmentBySale", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetNextSuggest" +
            "edAppointmentBySaleResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleResponse> GetNextSuggestedAppointmentBySaleAsync(AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultReOpenAppointmentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "eOpenAppointment", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "eOpenAppointmentResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentResponse CreateDefaultReOpenAppointment(AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "eOpenAppointment", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultR" +
            "eOpenAppointmentResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentResponse> CreateDefaultReOpenAppointmentAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest request);
        
        // CODEGEN: Generating message contract since message CreateDefaultAppointmentEntityFromProjectSuggestionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromProjectSuggestion", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromProjectSuggestionResponse")]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionResponse CreateDefaultAppointmentEntityFromProjectSuggestion(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromProjectSuggestion", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CreateDefaultA" +
            "ppointmentEntityFromProjectSuggestionResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionResponse> CreateDefaultAppointmentEntityFromProjectSuggestionAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest request);
        
        // CODEGEN: Generating message contract since message CanAssignToProjectMemberRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CanAssignToPro" +
            "jectMember", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CanAssignToPro" +
            "jectMemberResponse")]
        AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberResponse CanAssignToProjectMember(AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CanAssignToPro" +
            "jectMember", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/CanAssignToPro" +
            "jectMemberResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberResponse> CanAssignToProjectMemberAsync(AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest request);
        
        // CODEGEN: Generating message contract since message GetAppointmentListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "List", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "ListResponse")]
        AOS.DataAccessLayer.Appointment82.GetAppointmentListResponse GetAppointmentList(AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "List", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "ListResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentListResponse> GetAppointmentListAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest request);
        
        // CODEGEN: Generating message contract since message GetMyAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyAppointme" +
            "nts", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyAppointme" +
            "ntsResponse")]
        AOS.DataAccessLayer.Appointment82.GetMyAppointmentsResponse GetMyAppointments(AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyAppointme" +
            "nts", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyAppointme" +
            "ntsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyAppointmentsResponse> GetMyAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetPersonAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsResponse GetPersonAppointments(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsResponse> GetPersonAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetMyDiaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyDiary", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyDiaryResp" +
            "onse")]
        AOS.DataAccessLayer.Appointment82.GetMyDiaryResponse GetMyDiary(AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyDiary", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyDiaryResp" +
            "onse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyDiaryResponse> GetMyDiaryAsync(AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest request);
        
        // CODEGEN: Generating message contract since message GetMyTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyTasksResp" +
            "onse")]
        AOS.DataAccessLayer.Appointment82.GetMyTasksResponse GetMyTasks(AOS.DataAccessLayer.Appointment82.GetMyTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyTasksResp" +
            "onse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyTasksResponse> GetMyTasksAsync(AOS.DataAccessLayer.Appointment82.GetMyTasksRequest request);
        
        // CODEGEN: Generating message contract since message GetPersonDiaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonDiary" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonDiary" +
            "Response")]
        AOS.DataAccessLayer.Appointment82.GetPersonDiaryResponse GetPersonDiary(AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonDiary" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonDiary" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonDiaryResponse> GetPersonDiaryAsync(AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest request);
        
        // CODEGEN: Generating message contract since message GetPersonTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonTasks" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonTasks" +
            "Response")]
        AOS.DataAccessLayer.Appointment82.GetPersonTasksResponse GetPersonTasks(AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonTasks" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonTasks" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonTasksResponse> GetPersonTasksAsync(AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest request);
        
        // CODEGEN: Generating message contract since message GetPersonAppointmentsByTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTypeResponse")]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeResponse GetPersonAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTypeResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeResponse> GetPersonAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsResponse GetProjectAppointments(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsResponse> GetProjectAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectAppointmentsByTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTypeResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeResponse GetProjectAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTypeResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeResponse> GetProjectAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest request);
        
        // CODEGEN: Generating message contract since message GetContactAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsResponse GetContactAppointments(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsResponse> GetContactAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetContactAppointmentsByTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTypeResponse")]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeResponse GetContactAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTypeResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeResponse> GetContactAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectMemberAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsResponse GetProjectMemberAppointments(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsResponse> GetProjectMemberAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectMemberAppointmentsByTypeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTypeResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeResponse GetProjectMemberAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByType", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTypeResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeResponse> GetProjectMemberAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest request);
        
        // CODEGEN: Generating message contract since message GetPersonAppointmentsByTaskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTaskResponse")]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskResponse GetPersonAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTaskResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskResponse> GetPersonAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest request);
        
        // CODEGEN: Generating message contract since message GetPersonAppointmentsByTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTasksResponse")]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksResponse GetPersonAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTasksResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksResponse> GetPersonAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest request);
        
        // CODEGEN: Generating message contract since message GetPersonAppointmentsByTaskHeadingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTaskHeadingResponse")]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingResponse GetPersonAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPersonAppoi" +
            "ntmentsByTaskHeadingResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingResponse> GetPersonAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectAppointmentsByTaskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTaskResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskResponse GetProjectAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTaskResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskResponse> GetProjectAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectAppointmentsByTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTasksResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksResponse GetProjectAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTasksResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksResponse> GetProjectAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectAppointmentsByTaskHeadingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTaskHeadingResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingResponse GetProjectAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectAppo" +
            "intmentsByTaskHeadingResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingResponse> GetProjectAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectMemberAppointmentsByTaskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTaskResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskResponse GetProjectMemberAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTaskResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskResponse> GetProjectMemberAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectMemberAppointmentsByTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTasksResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksResponse GetProjectMemberAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTasksResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksResponse> GetProjectMemberAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest request);
        
        // CODEGEN: Generating message contract since message GetProjectMemberAppointmentsByTaskHeadingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTaskHeadingResponse")]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingResponse GetProjectMemberAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetProjectMemb" +
            "erAppointmentsByTaskHeadingResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingResponse> GetProjectMemberAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest request);
        
        // CODEGEN: Generating message contract since message GetContactAppointmentsByTaskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTaskResponse")]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskResponse GetContactAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTask", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTaskResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskResponse> GetContactAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest request);
        
        // CODEGEN: Generating message contract since message GetContactAppointmentsByTasksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTasksResponse")]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksResponse GetContactAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTasks", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTasksResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksResponse> GetContactAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest request);
        
        // CODEGEN: Generating message contract since message GetContactAppointmentsByTaskHeadingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTaskHeadingResponse")]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingResponse GetContactAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetContactAppo" +
            "intmentsByTaskHeadingResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingResponse> GetContactAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest request);
        
        // CODEGEN: Generating message contract since message GetPublishedAppointmentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointment", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointmentResponse")]
        AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentResponse GetPublishedAppointment(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointment", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointmentResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentResponse> GetPublishedAppointmentAsync(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest request);
        
        // CODEGEN: Generating message contract since message GetPublishedAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsResponse GetPublishedAppointments(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedAp" +
            "pointmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsResponse> GetPublishedAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetMyPublishedAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyPublished" +
            "Appointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyPublished" +
            "AppointmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsResponse GetMyPublishedAppointments(AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyPublished" +
            "Appointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetMyPublished" +
            "AppointmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsResponse> GetMyPublishedAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetPublishedProjectAppointmentsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedPr" +
            "ojectAppointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedPr" +
            "ojectAppointmentsResponse")]
        AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsResponse GetPublishedProjectAppointments(AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedPr" +
            "ojectAppointments", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetPublishedPr" +
            "ojectAppointmentsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsResponse> GetPublishedProjectAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest request);
        
        // CODEGEN: Generating message contract since message GetAppointmentsByTaskHeadingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "sByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "sByTaskHeadingResponse")]
        AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingResponse GetAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "sByTaskHeading", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "sByTaskHeadingResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingResponse> GetAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest request);
        
        // CODEGEN: Generating message contract since message GetAssociateDiaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociateDi" +
            "ary", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociateDi" +
            "aryResponse")]
        AOS.DataAccessLayer.Appointment82.GetAssociateDiaryResponse GetAssociateDiary(AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociateDi" +
            "ary", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociateDi" +
            "aryResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAssociateDiaryResponse> GetAssociateDiaryAsync(AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest request);
        
        // CODEGEN: Generating message contract since message GetDiaryByGroupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDiaryByGrou" +
            "p", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDiaryByGrou" +
            "pResponse")]
        AOS.DataAccessLayer.Appointment82.GetDiaryByGroupResponse GetDiaryByGroup(AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDiaryByGrou" +
            "p", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDiaryByGrou" +
            "pResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetDiaryByGroupResponse> GetDiaryByGroupAsync(AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest request);
        
        // CODEGEN: Generating message contract since message UpdateAppointmentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/UpdateAppointm" +
            "ent", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/UpdateAppointm" +
            "entResponse")]
        AOS.DataAccessLayer.Appointment82.UpdateAppointmentResponse UpdateAppointment(AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/UpdateAppointm" +
            "ent", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/UpdateAppointm" +
            "entResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.UpdateAppointmentResponse> UpdateAppointmentAsync(AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest request);
        
        // CODEGEN: Generating message contract since message GetAssociatesDiaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociatesD" +
            "iary", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociatesD" +
            "iaryResponse")]
        AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryResponse GetAssociatesDiary(AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociatesD" +
            "iary", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAssociatesD" +
            "iaryResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryResponse> GetAssociatesDiaryAsync(AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest request);
        
        // CODEGEN: Generating message contract since message GetAppointmentRecordsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "Records", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "RecordsResponse")]
        AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsResponse GetAppointmentRecords(AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "Records", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAppointment" +
            "RecordsResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsResponse> GetAppointmentRecordsAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest request);
        
        // CODEGEN: Generating message contract since message GetDayInformationListByDatesAndAssociateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDayInformat" +
            "ionListByDatesAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDayInformat" +
            "ionListByDatesAndAssociateResponse")]
        AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateResponse GetDayInformationListByDatesAndAssociate(AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDayInformat" +
            "ionListByDatesAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetDayInformat" +
            "ionListByDatesAndAssociateResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateResponse> GetDayInformationListByDatesAndAssociateAsync(AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityInformationListByDatesAndAssociateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetActivityInf" +
            "ormationListByDatesAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetActivityInf" +
            "ormationListByDatesAndAssociateResponse")]
        AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateResponse GetActivityInformationListByDatesAndAssociate(AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetActivityInf" +
            "ormationListByDatesAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetActivityInf" +
            "ormationListByDatesAndAssociateResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateResponse> GetActivityInformationListByDatesAndAssociateAsync(AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest request);
        
        // CODEGEN: Generating message contract since message GetRedLetterInformationListByDatesAndAssociateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetRedLetterIn" +
            "formationListByDatesAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetRedLetterIn" +
            "formationListByDatesAndAssociateResponse")]
        AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateResponse GetRedLetterInformationListByDatesAndAssociate(AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetRedLetterIn" +
            "formationListByDatesAndAssociate", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetRedLetterIn" +
            "formationListByDatesAndAssociateResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateResponse> GetRedLetterInformationListByDatesAndAssociateAsync(AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest request);
        
        // CODEGEN: Generating message contract since message GetAlarmsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAlarms", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAlarmsRespo" +
            "nse")]
        AOS.DataAccessLayer.Appointment82.GetAlarmsResponse GetAlarms(AOS.DataAccessLayer.Appointment82.GetAlarmsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAlarms", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetAlarmsRespo" +
            "nse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAlarmsResponse> GetAlarmsAsync(AOS.DataAccessLayer.Appointment82.GetAlarmsRequest request);
        
        // CODEGEN: Generating message contract since message GenerateLeadRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GenerateLead", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GenerateLeadRe" +
            "sponse")]
        AOS.DataAccessLayer.Appointment82.GenerateLeadResponse GenerateLead(AOS.DataAccessLayer.Appointment82.GenerateLeadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GenerateLead", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GenerateLeadRe" +
            "sponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GenerateLeadResponse> GenerateLeadAsync(AOS.DataAccessLayer.Appointment82.GenerateLeadRequest request);
        
        // CODEGEN: Generating message contract since message RequestForInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/RequestForInfo" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/RequestForInfo" +
            "Response")]
        AOS.DataAccessLayer.Appointment82.RequestForInfoResponse RequestForInfo(AOS.DataAccessLayer.Appointment82.RequestForInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/RequestForInfo" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/RequestForInfo" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.RequestForInfoResponse> RequestForInfoAsync(AOS.DataAccessLayer.Appointment82.RequestForInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetSuggestedAppointmentRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointment", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointmentResponse")]
        AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentResponse GetSuggestedAppointment(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointment", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointmentResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentResponse> GetSuggestedAppointmentAsync(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest request);
        
        // CODEGEN: Generating message contract since message GetSuggestedAppointmentEntityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointmentEntityResponse")]
        AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityResponse GetSuggestedAppointmentEntity(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointmentEntity", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetSuggestedAp" +
            "pointmentEntityResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityResponse> GetSuggestedAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest request);
        
        // CODEGEN: Generating message contract since message GetTaskListItemRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "m", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "mResponse")]
        AOS.DataAccessLayer.Appointment82.GetTaskListItemResponse GetTaskListItem(AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "m", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "mResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetTaskListItemResponse> GetTaskListItemAsync(AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest request);
        
        // CODEGEN: Generating message contract since message GetTaskListItemsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "ms", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "msResponse")]
        AOS.DataAccessLayer.Appointment82.GetTaskListItemsResponse GetTaskListItems(AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "ms", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services82/Appointment/GetTaskListIte" +
            "msResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetTaskListItemsResponse> GetTaskListItemsAsync(AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public CreateDefaultAppointmentEntityRequest() {
        }
        
        public CreateDefaultAppointmentEntityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public CreateDefaultAppointmentEntityResponse() {
        }
        
        public CreateDefaultAppointmentEntityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveAppointmentEntity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveAppointmentEntityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity;
        
        public SaveAppointmentEntityRequest() {
        }
        
        public SaveAppointmentEntityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentEntity = AppointmentEntity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveAppointmentEntityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveAppointmentEntityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public SaveAppointmentEntityResponse() {
        }
        
        public SaveAppointmentEntityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAppointmentEntity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class DeleteAppointmentEntityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentEntityId;
        
        public DeleteAppointmentEntityRequest() {
        }
        
        public DeleteAppointmentEntityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentEntityId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentEntityId = AppointmentEntityId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteAppointmentEntityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class DeleteAppointmentEntityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public DeleteAppointmentEntityResponse() {
        }
        
        public DeleteAppointmentEntityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultSuggestedAppointmentEntity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultSuggestedAppointmentEntityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public CreateDefaultSuggestedAppointmentEntityRequest() {
        }
        
        public CreateDefaultSuggestedAppointmentEntityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultSuggestedAppointmentEntityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultSuggestedAppointmentEntityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response;
        
        public CreateDefaultSuggestedAppointmentEntityResponse() {
        }
        
        public CreateDefaultSuggestedAppointmentEntityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveSuggestedAppointmentEntity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveSuggestedAppointmentEntityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity SuggestedAppointmentEntity;
        
        public SaveSuggestedAppointmentEntityRequest() {
        }
        
        public SaveSuggestedAppointmentEntityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity SuggestedAppointmentEntity) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SuggestedAppointmentEntity = SuggestedAppointmentEntity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveSuggestedAppointmentEntityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveSuggestedAppointmentEntityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response;
        
        public SaveSuggestedAppointmentEntityResponse() {
        }
        
        public SaveSuggestedAppointmentEntityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultTaskListItem", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultTaskListItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public CreateDefaultTaskListItemRequest() {
        }
        
        public CreateDefaultTaskListItemRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultTaskListItemResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultTaskListItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.TaskListItem Response;
        
        public CreateDefaultTaskListItemResponse() {
        }
        
        public CreateDefaultTaskListItemResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskListItem Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveTaskListItem", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveTaskListItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.TaskListItem TaskListItem;
        
        public SaveTaskListItemRequest() {
        }
        
        public SaveTaskListItemRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskListItem TaskListItem) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.TaskListItem = TaskListItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveTaskListItemResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveTaskListItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.TaskListItem Response;
        
        public SaveTaskListItemResponse() {
        }
        
        public SaveTaskListItemResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskListItem Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointment", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        public GetAppointmentRequest() {
        }
        
        public GetAppointmentRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment Response;
        
        public GetAppointmentResponse() {
        }
        
        public GetAppointmentResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleAppointmentStatus", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleAppointmentStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        public ToggleAppointmentStatusRequest() {
        }
        
        public ToggleAppointmentStatusRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleAppointmentStatusResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleAppointmentStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentStatus Response;
        
        public ToggleAppointmentStatusResponse() {
        }
        
        public ToggleAppointmentStatusResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentStatus Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleActivity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public string ActivityIdentifier;
        
        public ToggleActivityRequest() {
        }
        
        public ToggleActivityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string ActivityIdentifier) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ActivityIdentifier = ActivityIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleActivityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.ActivityStatus Response;
        
        public ToggleActivityResponse() {
        }
        
        public ToggleActivityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.ActivityStatus Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleActivities", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public string[] ActivityIdentifier;
        
        public ToggleActivitiesRequest() {
        }
        
        public ToggleActivitiesRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifier) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ActivityIdentifier = ActivityIdentifier;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleActivitiesResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.ActivityStatus Response;
        
        public ToggleActivitiesResponse() {
        }
        
        public ToggleActivitiesResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.ActivityStatus Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetActivityStatus", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SetActivityStatusRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public string[] ActivityIdentifier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public AOS.DataAccessLayer.Appointment82.ActivityStatus ActivityStatus;
        
        public SetActivityStatusRequest() {
        }
        
        public SetActivityStatusRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifier, AOS.DataAccessLayer.Appointment82.ActivityStatus ActivityStatus) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ActivityIdentifier = ActivityIdentifier;
            this.ActivityStatus = ActivityStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetActivityStatusResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SetActivityStatusResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public SetActivityStatusResponse() {
        }
        
        public SetActivityStatusResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleAndSetActivities", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleAndSetActivitiesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public string[] ActivityIdentifiers;
        
        public ToggleAndSetActivitiesRequest() {
        }
        
        public ToggleAndSetActivitiesRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifiers) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ActivityIdentifiers = ActivityIdentifiers;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ToggleAndSetActivitiesResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ToggleAndSetActivitiesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public string[] Response;
        
        public ToggleAndSetActivitiesResponse() {
        }
        
        public ToggleAndSetActivitiesResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMySyncAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMySyncAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime EndTime;
        
        public GetMySyncAppointmentsRequest() {
        }
        
        public GetMySyncAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMySyncAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMySyncAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentSyncData[] Response;
        
        public GetMySyncAppointmentsResponse() {
        }
        
        public GetMySyncAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentSyncData[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentEntity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentEntityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentEntityId;
        
        public GetAppointmentEntityRequest() {
        }
        
        public GetAppointmentEntityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentEntityId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentEntityId = AppointmentEntityId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentEntityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentEntityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public GetAppointmentEntityResponse() {
        }
        
        public GetAppointmentEntityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityByType", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityByTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.TaskType Type;
        
        public CreateDefaultAppointmentEntityByTypeRequest() {
        }
        
        public CreateDefaultAppointmentEntityByTypeRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskType Type) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.Type = Type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityByTypeResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityByTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public CreateDefaultAppointmentEntityByTypeResponse() {
        }
        
        public CreateDefaultAppointmentEntityByTypeResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Accept", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class AcceptRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        public AcceptRequest() {
        }
        
        public AcceptRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
            this.UpdateMode = UpdateMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class AcceptResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public AcceptResponse() {
        }
        
        public AcceptResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Reject", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class RejectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public string RejectReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        public RejectRequest() {
        }
        
        public RejectRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, string RejectReason, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
            this.RejectReason = RejectReason;
            this.UpdateMode = UpdateMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RejectResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class RejectResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public RejectResponse() {
        }
        
        public RejectResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Save", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public bool SendEmailToParticipants;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo;
        
        public SaveRequest() {
        }
        
        public SaveRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, bool SendEmailToParticipants, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentEntity = AppointmentEntity;
            this.UpdateMode = UpdateMode;
            this.SendEmailToParticipants = SendEmailToParticipants;
            this.SmtpEMailConnectionInfo = SmtpEMailConnectionInfo;
            this.ImapEMailConnectionInfo = ImapEMailConnectionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SaveResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public SaveResponse() {
        }
        
        public SaveResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Delete", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class DeleteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public bool SendEmailToParticipants;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo;
        
        public DeleteRequest() {
        }
        
        public DeleteRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, bool SendEmailToParticipants, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
            this.UpdateMode = UpdateMode;
            this.SendEmailToParticipants = SendEmailToParticipants;
            this.SmtpEMailConnectionInfo = SmtpEMailConnectionInfo;
            this.ImapEMailConnectionInfo = ImapEMailConnectionInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class DeleteResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public DeleteResponse() {
        }
        
        public DeleteResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateDays", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CalculateDaysRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity;
        
        public CalculateDaysRequest() {
        }
        
        public CalculateDaysRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentEntity = AppointmentEntity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateDaysResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CalculateDaysResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response;
        
        public CalculateDaysResponse() {
        }
        
        public CalculateDaysResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateDays", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ValidateDaysRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime[] Dates;
        
        public ValidateDaysRequest() {
        }
        
        public ValidateDaysRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, System.DateTime[] Dates) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentEntity = AppointmentEntity;
            this.Dates = Dates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateDaysResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class ValidateDaysResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceDate[] Response;
        
        public ValidateDaysResponse() {
        }
        
        public ValidateDaysResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.RecurrenceDate[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultRecurrence", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultRecurrenceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public CreateDefaultRecurrenceRequest() {
        }
        
        public CreateDefaultRecurrenceRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultRecurrenceResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultRecurrenceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response;
        
        public CreateDefaultRecurrenceResponse() {
        }
        
        public CreateDefaultRecurrenceResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignTo", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class AssignToRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public AOS.DataAccessLayer.Appointment82.ParticipantInfo Participant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        public AssignToRequest() {
        }
        
        public AssignToRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.ParticipantInfo Participant, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
            this.Participant = Participant;
            this.UpdateMode = UpdateMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignToResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class AssignToResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public AssignToResponse() {
        }
        
        public AssignToResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSeen", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SetSeenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        public SetSeenRequest() {
        }
        
        public SetSeenRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
            this.UpdateMode = UpdateMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetSeenResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class SetSeenResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public SetSeenResponse() {
        }
        
        public SetSeenResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Move", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class MoveRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime NewStartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        public MoveRequest() {
        }
        
        public MoveRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, System.DateTime NewStartTime, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
            this.NewStartTime = NewStartTime;
            this.UpdateMode = UpdateMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class MoveResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public MoveResponse() {
        }
        
        public MoveResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptRejected", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class AcceptRejectedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode;
        
        public AcceptRejectedRequest() {
        }
        
        public AcceptRejectedRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
            this.UpdateMode = UpdateMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptRejectedResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class AcceptRejectedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public AcceptRejectedResponse() {
        }
        
        public AcceptRejectedResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultRecurrenceByDate", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultRecurrenceByDateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public System.DateTime StartDate;
        
        public CreateDefaultRecurrenceByDateRequest() {
        }
        
        public CreateDefaultRecurrenceByDateRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.StartDate = StartDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultRecurrenceByDateResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultRecurrenceByDateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response;
        
        public CreateDefaultRecurrenceByDateResponse() {
        }
        
        public CreateDefaultRecurrenceByDateResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanUpBookingDeleted", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CleanUpBookingDeletedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int[] AppointmentIds;
        
        public CleanUpBookingDeletedRequest() {
        }
        
        public CleanUpBookingDeletedRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentIds = AppointmentIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanUpBookingDeletedResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CleanUpBookingDeletedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int Response;
        
        public CleanUpBookingDeletedResponse() {
        }
        
        public CleanUpBookingDeletedResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanUpRecurringBookingDeleted", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CleanUpRecurringBookingDeletedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public CleanUpRecurringBookingDeletedRequest() {
        }
        
        public CleanUpRecurringBookingDeletedRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CleanUpRecurringBookingDeletedResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CleanUpRecurringBookingDeletedResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int Response;
        
        public CleanUpRecurringBookingDeletedResponse() {
        }
        
        public CleanUpRecurringBookingDeletedResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityByTypeAndAssociate", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityByTypeAndAssociateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.TaskType Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int AssociateId;
        
        public CreateDefaultAppointmentEntityByTypeAndAssociateRequest() {
        }
        
        public CreateDefaultAppointmentEntityByTypeAndAssociateRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskType Type, int AssociateId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.Type = Type;
            this.AssociateId = AssociateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityByTypeAndAssociateResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityByTypeAndAssociateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public CreateDefaultAppointmentEntityByTypeAndAssociateResponse() {
        }
        
        public CreateDefaultAppointmentEntityByTypeAndAssociateResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCanInsertForAssociates", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetCanInsertForAssociatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int[] AssociateIds;
        
        public GetCanInsertForAssociatesRequest() {
        }
        
        public GetCanInsertForAssociatesRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AssociateIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AssociateIds = AssociateIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCanInsertForAssociatesResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetCanInsertForAssociatesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public bool[] Response;
        
        public GetCanInsertForAssociatesResponse() {
        }
        
        public GetCanInsertForAssociatesResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentHaveParticipantsWithEmail", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentHaveParticipantsWithEmailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        public GetAppointmentHaveParticipantsWithEmailRequest() {
        }
        
        public GetAppointmentHaveParticipantsWithEmailRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentHaveParticipantsWithEmailResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentHaveParticipantsWithEmailResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public bool Response;
        
        public GetAppointmentHaveParticipantsWithEmailResponse() {
        }
        
        public GetAppointmentHaveParticipantsWithEmailResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityFromSaleSuggestion", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityFromSaleSuggestionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int SuggestedAppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int SaleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public bool CreateNow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int OwnerId;
        
        public CreateDefaultAppointmentEntityFromSaleSuggestionRequest() {
        }
        
        public CreateDefaultAppointmentEntityFromSaleSuggestionRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId, int SaleId, bool CreateNow, int OwnerId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SuggestedAppointmentId = SuggestedAppointmentId;
            this.SaleId = SaleId;
            this.CreateNow = CreateNow;
            this.OwnerId = OwnerId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityFromSaleSuggestionResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityFromSaleSuggestionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public CreateDefaultAppointmentEntityFromSaleSuggestionResponse() {
        }
        
        public CreateDefaultAppointmentEntityFromSaleSuggestionResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextSuggestedAppointmentBySale", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetNextSuggestedAppointmentBySaleRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int SaleId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int CurrentAppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public bool SkipCompleteCheck;
        
        public GetNextSuggestedAppointmentBySaleRequest() {
        }
        
        public GetNextSuggestedAppointmentBySaleRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SaleId, int CurrentAppointmentId, bool SkipCompleteCheck) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SaleId = SaleId;
            this.CurrentAppointmentId = CurrentAppointmentId;
            this.SkipCompleteCheck = SkipCompleteCheck;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextSuggestedAppointmentBySaleResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetNextSuggestedAppointmentBySaleResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SuggestedAppointment Response;
        
        public GetNextSuggestedAppointmentBySaleResponse() {
        }
        
        public GetNextSuggestedAppointmentBySaleResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointment Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultReOpenAppointment", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultReOpenAppointmentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int SaleId;
        
        public CreateDefaultReOpenAppointmentRequest() {
        }
        
        public CreateDefaultReOpenAppointmentRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SaleId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SaleId = SaleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultReOpenAppointmentResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultReOpenAppointmentResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public CreateDefaultReOpenAppointmentResponse() {
        }
        
        public CreateDefaultReOpenAppointmentResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityFromProjectSuggestion", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityFromProjectSuggestionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int SuggestedAppointmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int ProjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public bool CreateNow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int OwnerId;
        
        public CreateDefaultAppointmentEntityFromProjectSuggestionRequest() {
        }
        
        public CreateDefaultAppointmentEntityFromProjectSuggestionRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId, int ProjectId, bool CreateNow, int OwnerId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SuggestedAppointmentId = SuggestedAppointmentId;
            this.ProjectId = ProjectId;
            this.CreateNow = CreateNow;
            this.OwnerId = OwnerId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDefaultAppointmentEntityFromProjectSuggestionResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CreateDefaultAppointmentEntityFromProjectSuggestionResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.AppointmentEntity Response;
        
        public CreateDefaultAppointmentEntityFromProjectSuggestionResponse() {
        }
        
        public CreateDefaultAppointmentEntityFromProjectSuggestionResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanAssignToProjectMember", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CanAssignToProjectMemberRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ProjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int SuggestedAppointmentId;
        
        public CanAssignToProjectMemberRequest() {
        }
        
        public CanAssignToProjectMemberRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, int SuggestedAppointmentId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ProjectId = ProjectId;
            this.SuggestedAppointmentId = SuggestedAppointmentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanAssignToProjectMemberResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class CanAssignToProjectMemberResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public bool Response;
        
        public CanAssignToProjectMemberResponse() {
        }
        
        public CanAssignToProjectMemberResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentList", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int[] AppointmentIds;
        
        public GetAppointmentListRequest() {
        }
        
        public GetAppointmentListRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentIds = AppointmentIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentListResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetAppointmentListResponse() {
        }
        
        public GetAppointmentListResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public int Count;
        
        public GetMyAppointmentsRequest() {
        }
        
        public GetMyAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetMyAppointmentsResponse() {
        }
        
        public GetMyAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public bool IncludeProjectAppointments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int Count;
        
        public GetPersonAppointmentsRequest() {
        }
        
        public GetPersonAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.IncludeProjectAppointments = IncludeProjectAppointments;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPersonAppointmentsResponse() {
        }
        
        public GetPersonAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyDiary", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyDiaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public int Count;
        
        public GetMyDiaryRequest() {
        }
        
        public GetMyDiaryRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyDiaryResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyDiaryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetMyDiaryResponse() {
        }
        
        public GetMyDiaryResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyTasks", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyTasksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int Count;
        
        public GetMyTasksRequest() {
        }
        
        public GetMyTasksRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyTasksResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyTasksResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetMyTasksResponse() {
        }
        
        public GetMyTasksResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonDiary", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonDiaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        public GetPersonDiaryRequest() {
        }
        
        public GetPersonDiaryRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonDiaryResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonDiaryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPersonDiaryResponse() {
        }
        
        public GetPersonDiaryResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonTasks", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonTasksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int Count;
        
        public GetPersonTasksRequest() {
        }
        
        public GetPersonTasksRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonTasksResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonTasksResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPersonTasksResponse() {
        }
        
        public GetPersonTasksResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByType", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public bool IncludeProjectAppointments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=5)]
        public AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType;
        
        public GetPersonAppointmentsByTypeRequest() {
        }
        
        public GetPersonAppointmentsByTypeRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.IncludeProjectAppointments = IncludeProjectAppointments;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.AppointmentType = AppointmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByTypeResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPersonAppointmentsByTypeResponse() {
        }
        
        public GetPersonAppointmentsByTypeResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ProjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        public GetProjectAppointmentsRequest() {
        }
        
        public GetProjectAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ProjectId = ProjectId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectAppointmentsResponse() {
        }
        
        public GetProjectAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByType", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ProjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType;
        
        public GetProjectAppointmentsByTypeRequest() {
        }
        
        public GetProjectAppointmentsByTypeRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ProjectId = ProjectId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.AppointmentType = AppointmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByTypeResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectAppointmentsByTypeResponse() {
        }
        
        public GetProjectAppointmentsByTypeResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ContactId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        public GetContactAppointmentsRequest() {
        }
        
        public GetContactAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ContactId = ContactId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetContactAppointmentsResponse() {
        }
        
        public GetContactAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByType", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ContactId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType;
        
        public GetContactAppointmentsByTypeRequest() {
        }
        
        public GetContactAppointmentsByTypeRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ContactId = ContactId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.AppointmentType = AppointmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByTypeResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetContactAppointmentsByTypeResponse() {
        }
        
        public GetContactAppointmentsByTypeResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        public GetProjectMemberAppointmentsRequest() {
        }
        
        public GetProjectMemberAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectMemberAppointmentsResponse() {
        }
        
        public GetProjectMemberAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByType", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTypeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType;
        
        public GetProjectMemberAppointmentsByTypeRequest() {
        }
        
        public GetProjectMemberAppointmentsByTypeRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.AppointmentType = AppointmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByTypeResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTypeResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectMemberAppointmentsByTypeResponse() {
        }
        
        public GetProjectMemberAppointmentsByTypeResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByTask", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTaskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public bool IncludeProjectAppointments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=5)]
        public int TaskId;
        
        public GetPersonAppointmentsByTaskRequest() {
        }
        
        public GetPersonAppointmentsByTaskRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.IncludeProjectAppointments = IncludeProjectAppointments;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskId = TaskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByTaskResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTaskResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPersonAppointmentsByTaskResponse() {
        }
        
        public GetPersonAppointmentsByTaskResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByTasks", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTasksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public bool IncludeProjectAppointments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=5)]
        public int[] TaskIds;
        
        public GetPersonAppointmentsByTasksRequest() {
        }
        
        public GetPersonAppointmentsByTasksRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.IncludeProjectAppointments = IncludeProjectAppointments;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskIds = TaskIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByTasksResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTasksResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPersonAppointmentsByTasksResponse() {
        }
        
        public GetPersonAppointmentsByTasksResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByTaskHeading", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTaskHeadingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public bool IncludeProjectAppointments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=5)]
        public int TaskHeadingId;
        
        public GetPersonAppointmentsByTaskHeadingRequest() {
        }
        
        public GetPersonAppointmentsByTaskHeadingRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.IncludeProjectAppointments = IncludeProjectAppointments;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskHeadingId = TaskHeadingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPersonAppointmentsByTaskHeadingResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPersonAppointmentsByTaskHeadingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPersonAppointmentsByTaskHeadingResponse() {
        }
        
        public GetPersonAppointmentsByTaskHeadingResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByTask", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTaskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ProjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int TaskId;
        
        public GetProjectAppointmentsByTaskRequest() {
        }
        
        public GetProjectAppointmentsByTaskRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ProjectId = ProjectId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskId = TaskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByTaskResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTaskResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectAppointmentsByTaskResponse() {
        }
        
        public GetProjectAppointmentsByTaskResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByTasks", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTasksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ProjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int[] TaskIds;
        
        public GetProjectAppointmentsByTasksRequest() {
        }
        
        public GetProjectAppointmentsByTasksRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ProjectId = ProjectId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskIds = TaskIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByTasksResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTasksResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectAppointmentsByTasksResponse() {
        }
        
        public GetProjectAppointmentsByTasksResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByTaskHeading", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTaskHeadingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ProjectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int TaskHeadingId;
        
        public GetProjectAppointmentsByTaskHeadingRequest() {
        }
        
        public GetProjectAppointmentsByTaskHeadingRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ProjectId = ProjectId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskHeadingId = TaskHeadingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectAppointmentsByTaskHeadingResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectAppointmentsByTaskHeadingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectAppointmentsByTaskHeadingResponse() {
        }
        
        public GetProjectAppointmentsByTaskHeadingResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByTask", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTaskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int TaskId;
        
        public GetProjectMemberAppointmentsByTaskRequest() {
        }
        
        public GetProjectMemberAppointmentsByTaskRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskId = TaskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByTaskResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTaskResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectMemberAppointmentsByTaskResponse() {
        }
        
        public GetProjectMemberAppointmentsByTaskResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByTasks", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTasksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int[] TaskIds;
        
        public GetProjectMemberAppointmentsByTasksRequest() {
        }
        
        public GetProjectMemberAppointmentsByTasksRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskIds = TaskIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByTasksResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTasksResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectMemberAppointmentsByTasksResponse() {
        }
        
        public GetProjectMemberAppointmentsByTasksResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByTaskHeading", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTaskHeadingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int PersonId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int TaskHeadingId;
        
        public GetProjectMemberAppointmentsByTaskHeadingRequest() {
        }
        
        public GetProjectMemberAppointmentsByTaskHeadingRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.PersonId = PersonId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskHeadingId = TaskHeadingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectMemberAppointmentsByTaskHeadingResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetProjectMemberAppointmentsByTaskHeadingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetProjectMemberAppointmentsByTaskHeadingResponse() {
        }
        
        public GetProjectMemberAppointmentsByTaskHeadingResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByTask", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTaskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ContactId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int TaskId;
        
        public GetContactAppointmentsByTaskRequest() {
        }
        
        public GetContactAppointmentsByTaskRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ContactId = ContactId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskId = TaskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByTaskResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTaskResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetContactAppointmentsByTaskResponse() {
        }
        
        public GetContactAppointmentsByTaskResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByTasks", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTasksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ContactId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int[] TaskIds;
        
        public GetContactAppointmentsByTasksRequest() {
        }
        
        public GetContactAppointmentsByTasksRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ContactId = ContactId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskIds = TaskIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByTasksResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTasksResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetContactAppointmentsByTasksResponse() {
        }
        
        public GetContactAppointmentsByTasksResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByTaskHeading", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTaskHeadingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ContactId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int TaskHeadingId;
        
        public GetContactAppointmentsByTaskHeadingRequest() {
        }
        
        public GetContactAppointmentsByTaskHeadingRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ContactId = ContactId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
            this.TaskHeadingId = TaskHeadingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetContactAppointmentsByTaskHeadingResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetContactAppointmentsByTaskHeadingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetContactAppointmentsByTaskHeadingResponse() {
        }
        
        public GetContactAppointmentsByTaskHeadingResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishedAppointment", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPublishedAppointmentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AppointmentId;
        
        public GetPublishedAppointmentRequest() {
        }
        
        public GetPublishedAppointmentRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentId = AppointmentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishedAppointmentResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPublishedAppointmentResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment Response;
        
        public GetPublishedAppointmentResponse() {
        }
        
        public GetPublishedAppointmentResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishedAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPublishedAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int[] AppointmentIds;
        
        public GetPublishedAppointmentsRequest() {
        }
        
        public GetPublishedAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AppointmentIds = AppointmentIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishedAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPublishedAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPublishedAppointmentsResponse() {
        }
        
        public GetPublishedAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyPublishedAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyPublishedAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        public GetMyPublishedAppointmentsRequest() {
        }
        
        public GetMyPublishedAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyPublishedAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetMyPublishedAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetMyPublishedAppointmentsResponse() {
        }
        
        public GetMyPublishedAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishedProjectAppointments", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPublishedProjectAppointmentsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int ProjectId;
        
        public GetPublishedProjectAppointmentsRequest() {
        }
        
        public GetPublishedProjectAppointmentsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ProjectId = ProjectId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPublishedProjectAppointmentsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetPublishedProjectAppointmentsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetPublishedProjectAppointmentsResponse() {
        }
        
        public GetPublishedProjectAppointmentsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentsByTaskHeading", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentsByTaskHeadingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int TaskHeadingId;
        
        public GetAppointmentsByTaskHeadingRequest() {
        }
        
        public GetAppointmentsByTaskHeadingRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int TaskHeadingId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.TaskHeadingId = TaskHeadingId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentsByTaskHeadingResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentsByTaskHeadingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetAppointmentsByTaskHeadingResponse() {
        }
        
        public GetAppointmentsByTaskHeadingResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAssociateDiary", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAssociateDiaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AssociateId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Count;
        
        public GetAssociateDiaryRequest() {
        }
        
        public GetAssociateDiaryRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AssociateId = AssociateId;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAssociateDiaryResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAssociateDiaryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetAssociateDiaryResponse() {
        }
        
        public GetAssociateDiaryResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiaryByGroup", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetDiaryByGroupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int GroupId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int GroupType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int Count;
        
        public GetDiaryByGroupRequest() {
        }
        
        public GetDiaryByGroupRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int GroupId, int GroupType, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.GroupId = GroupId;
            this.GroupType = GroupType;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Count = Count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDiaryByGroupResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetDiaryByGroupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetDiaryByGroupResponse() {
        }
        
        public GetDiaryByGroupResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAppointment", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class UpdateAppointmentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public int Type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=5)]
        public int AssociateId;
        
        public UpdateAppointmentRequest() {
        }
        
        public UpdateAppointmentRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Id, System.DateTime StartTime, System.DateTime EndTime, int Status, int Type, int AssociateId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.Id = Id;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.Status = Status;
            this.Type = Type;
            this.AssociateId = AssociateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAppointmentResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class UpdateAppointmentResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment Response;
        
        public UpdateAppointmentResponse() {
        }
        
        public UpdateAppointmentResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAssociatesDiary", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAssociatesDiaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int[] AssociateIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public System.DateTime EndTime;
        
        public GetAssociatesDiaryRequest() {
        }
        
        public GetAssociatesDiaryRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AssociateIds, System.DateTime StartTime, System.DateTime EndTime) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AssociateIds = AssociateIds;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAssociatesDiaryResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAssociatesDiaryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetAssociatesDiaryResponse() {
        }
        
        public GetAssociatesDiaryResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentRecords", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentRecordsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int MotherId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public int RecurrenceRuleId;
        
        public GetAppointmentRecordsRequest() {
        }
        
        public GetAppointmentRecordsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int MotherId, int RecurrenceRuleId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.MotherId = MotherId;
            this.RecurrenceRuleId = RecurrenceRuleId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAppointmentRecordsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAppointmentRecordsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.Appointment[] Response;
        
        public GetAppointmentRecordsResponse() {
        }
        
        public GetAppointmentRecordsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDayInformationListByDatesAndAssociate", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetDayInformationListByDatesAndAssociateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public int AssociateId;
        
        public GetDayInformationListByDatesAndAssociateRequest() {
        }
        
        public GetDayInformationListByDatesAndAssociateRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.AssociateId = AssociateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDayInformationListByDatesAndAssociateResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetDayInformationListByDatesAndAssociateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.DayInformationListItem[] Response;
        
        public GetDayInformationListByDatesAndAssociateResponse() {
        }
        
        public GetDayInformationListByDatesAndAssociateResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.DayInformationListItem[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityInformationListByDatesAndAssociate", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetActivityInformationListByDatesAndAssociateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public int AssociateId;
        
        public GetActivityInformationListByDatesAndAssociateRequest() {
        }
        
        public GetActivityInformationListByDatesAndAssociateRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.AssociateId = AssociateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityInformationListByDatesAndAssociateResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetActivityInformationListByDatesAndAssociateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.ActivityInformationListItem[] Response;
        
        public GetActivityInformationListByDatesAndAssociateResponse() {
        }
        
        public GetActivityInformationListByDatesAndAssociateResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.ActivityInformationListItem[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRedLetterInformationListByDatesAndAssociate", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetRedLetterInformationListByDatesAndAssociateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public int AssociateId;
        
        public GetRedLetterInformationListByDatesAndAssociateRequest() {
        }
        
        public GetRedLetterInformationListByDatesAndAssociateRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.AssociateId = AssociateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRedLetterInformationListByDatesAndAssociateResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetRedLetterInformationListByDatesAndAssociateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.RedLetterInformationListItem[] Response;
        
        public GetRedLetterInformationListByDatesAndAssociateResponse() {
        }
        
        public GetRedLetterInformationListByDatesAndAssociateResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.RedLetterInformationListItem[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAlarms", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAlarmsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public bool IncludeInvitations;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public bool IncludeAllAppointments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public int DefaultAlarmLeadTimeInMinutes;
        
        public GetAlarmsRequest() {
        }
        
        public GetAlarmsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool IncludeInvitations, bool IncludeAllAppointments, int DefaultAlarmLeadTimeInMinutes) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.IncludeInvitations = IncludeInvitations;
            this.IncludeAllAppointments = IncludeAllAppointments;
            this.DefaultAlarmLeadTimeInMinutes = DefaultAlarmLeadTimeInMinutes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAlarmsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetAlarmsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.MultiAlarmData Response;
        
        public GetAlarmsResponse() {
        }
        
        public GetAlarmsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.MultiAlarmData Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateLead", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GenerateLeadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AssociateIdForNewContact;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public string LeadDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public string Relation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public int RelationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public string LeadContact;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=5)]
        public string LeadPersonFirstname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=6)]
        public string LeadPersonLastname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=7)]
        public string LeadPersonEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=8)]
        public string LeadPhoneNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=9)]
        public string CreatorsContact;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=10)]
        public string CreatorsFirstname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=11)]
        public string CreatorsLastname;
        
        public GenerateLeadRequest() {
        }
        
        public GenerateLeadRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateIdForNewContact, string LeadDescription, string Relation, int RelationId, string LeadContact, string LeadPersonFirstname, string LeadPersonLastname, string LeadPersonEmail, string LeadPhoneNumber, string CreatorsContact, string CreatorsFirstname, string CreatorsLastname) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AssociateIdForNewContact = AssociateIdForNewContact;
            this.LeadDescription = LeadDescription;
            this.Relation = Relation;
            this.RelationId = RelationId;
            this.LeadContact = LeadContact;
            this.LeadPersonFirstname = LeadPersonFirstname;
            this.LeadPersonLastname = LeadPersonLastname;
            this.LeadPersonEmail = LeadPersonEmail;
            this.LeadPhoneNumber = LeadPhoneNumber;
            this.CreatorsContact = CreatorsContact;
            this.CreatorsFirstname = CreatorsFirstname;
            this.CreatorsLastname = CreatorsLastname;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateLeadResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GenerateLeadResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SalesActivity Response;
        
        public GenerateLeadResponse() {
        }
        
        public GenerateLeadResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SalesActivity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestForInfo", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class RequestForInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int AssociateIdForNewContact;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=1)]
        public string Channel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=2)]
        public string Regarding;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=3)]
        public string ContactName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=4)]
        public string PersonFirstname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=5)]
        public string PersonLastname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=6)]
        public string EmailAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=7)]
        public string PhoneNumber;
        
        public RequestForInfoRequest() {
        }
        
        public RequestForInfoRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateIdForNewContact, string Channel, string Regarding, string ContactName, string PersonFirstname, string PersonLastname, string EmailAddress, string PhoneNumber) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AssociateIdForNewContact = AssociateIdForNewContact;
            this.Channel = Channel;
            this.Regarding = Regarding;
            this.ContactName = ContactName;
            this.PersonFirstname = PersonFirstname;
            this.PersonLastname = PersonLastname;
            this.EmailAddress = EmailAddress;
            this.PhoneNumber = PhoneNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RequestForInfoResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class RequestForInfoResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SalesActivity Response;
        
        public RequestForInfoResponse() {
        }
        
        public RequestForInfoResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SalesActivity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSuggestedAppointment", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetSuggestedAppointmentRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int SuggestedAppointmentId;
        
        public GetSuggestedAppointmentRequest() {
        }
        
        public GetSuggestedAppointmentRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SuggestedAppointmentId = SuggestedAppointmentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSuggestedAppointmentResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetSuggestedAppointmentResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SuggestedAppointment Response;
        
        public GetSuggestedAppointmentResponse() {
        }
        
        public GetSuggestedAppointmentResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointment Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSuggestedAppointmentEntity", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetSuggestedAppointmentEntityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int SuggestedAppointmentEntityId;
        
        public GetSuggestedAppointmentEntityRequest() {
        }
        
        public GetSuggestedAppointmentEntityRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentEntityId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SuggestedAppointmentEntityId = SuggestedAppointmentEntityId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSuggestedAppointmentEntityResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetSuggestedAppointmentEntityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response;
        
        public GetSuggestedAppointmentEntityResponse() {
        }
        
        public GetSuggestedAppointmentEntityResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListItem", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetTaskListItemRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public int TaskListItemId;
        
        public GetTaskListItemRequest() {
        }
        
        public GetTaskListItemRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int TaskListItemId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.TaskListItemId = TaskListItemId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListItemResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetTaskListItemResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.TaskListItem Response;
        
        public GetTaskListItemResponse() {
        }
        
        public GetTaskListItemResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskListItem Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListItems", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetTaskListItemsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public bool IncludeDeleted;
        
        public GetTaskListItemsRequest() {
        }
        
        public GetTaskListItemsRequest(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool IncludeDeleted) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.IncludeDeleted = IncludeDeleted;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListItemsResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services82", IsWrapped=true)]
    public partial class GetTaskListItemsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82")]
        public AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services82", Order=0)]
        public AOS.DataAccessLayer.Appointment82.TaskListItem[] Response;
        
        public GetTaskListItemsResponse() {
        }
        
        public GetTaskListItemsResponse(AOS.DataAccessLayer.Appointment82.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskListItem[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Appointment1Channel : AOS.DataAccessLayer.Appointment82.Appointment1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Appointment1Client : System.ServiceModel.ClientBase<AOS.DataAccessLayer.Appointment82.Appointment1>, AOS.DataAccessLayer.Appointment82.Appointment1 {
        
        public Appointment1Client() {
        }
        
        public Appointment1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Appointment1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Appointment1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Appointment1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntity(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest request) {
            return base.Channel.CreateDefaultAppointmentEntity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultAppointmentEntity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityResponse> CreateDefaultAppointmentEntityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityResponse AOS.DataAccessLayer.Appointment82.Appointment1.SaveAppointmentEntity(AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest request) {
            return base.Channel.SaveAppointmentEntity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo SaveAppointmentEntity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SaveAppointmentEntity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.SaveAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest request) {
            return base.Channel.SaveAppointmentEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityResponse> SaveAppointmentEntityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity) {
            AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SaveAppointmentEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityResponse AOS.DataAccessLayer.Appointment82.Appointment1.DeleteAppointmentEntity(AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest request) {
            return base.Channel.DeleteAppointmentEntity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo DeleteAppointmentEntity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentEntityId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded) {
            AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntityId = AppointmentEntityId;
            AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).DeleteAppointmentEntity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.DeleteAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest request) {
            return base.Channel.DeleteAppointmentEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityResponse> DeleteAppointmentEntityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentEntityId) {
            AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.DeleteAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntityId = AppointmentEntityId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).DeleteAppointmentEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultSuggestedAppointmentEntity(AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest request) {
            return base.Channel.CreateDefaultSuggestedAppointmentEntity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultSuggestedAppointmentEntity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultSuggestedAppointmentEntity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultSuggestedAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest request) {
            return base.Channel.CreateDefaultSuggestedAppointmentEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityResponse> CreateDefaultSuggestedAppointmentEntityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultSuggestedAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultSuggestedAppointmentEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityResponse AOS.DataAccessLayer.Appointment82.Appointment1.SaveSuggestedAppointmentEntity(AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest request) {
            return base.Channel.SaveSuggestedAppointmentEntity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo SaveSuggestedAppointmentEntity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity SuggestedAppointmentEntity, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentEntity = SuggestedAppointmentEntity;
            AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SaveSuggestedAppointmentEntity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.SaveSuggestedAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest request) {
            return base.Channel.SaveSuggestedAppointmentEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityResponse> SaveSuggestedAppointmentEntityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity SuggestedAppointmentEntity) {
            AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveSuggestedAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentEntity = SuggestedAppointmentEntity;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SaveSuggestedAppointmentEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultTaskListItem(AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest request) {
            return base.Channel.CreateDefaultTaskListItem(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultTaskListItem(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.TaskListItem Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultTaskListItem(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultTaskListItemAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest request) {
            return base.Channel.CreateDefaultTaskListItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemResponse> CreateDefaultTaskListItemAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultTaskListItemRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultTaskListItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.SaveTaskListItemResponse AOS.DataAccessLayer.Appointment82.Appointment1.SaveTaskListItem(AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest request) {
            return base.Channel.SaveTaskListItem(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo SaveTaskListItem(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskListItem TaskListItem, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.TaskListItem Response) {
            AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.TaskListItem = TaskListItem;
            AOS.DataAccessLayer.Appointment82.SaveTaskListItemResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SaveTaskListItem(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveTaskListItemResponse> AOS.DataAccessLayer.Appointment82.Appointment1.SaveTaskListItemAsync(AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest request) {
            return base.Channel.SaveTaskListItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveTaskListItemResponse> SaveTaskListItemAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskListItem TaskListItem) {
            AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveTaskListItemRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.TaskListItem = TaskListItem;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SaveTaskListItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAppointmentResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointment(AOS.DataAccessLayer.Appointment82.GetAppointmentRequest request) {
            return base.Channel.GetAppointment(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAppointment(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment Response) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            AOS.DataAccessLayer.Appointment82.GetAppointmentResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointment(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentRequest request) {
            return base.Channel.GetAppointmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentResponse> GetAppointmentAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusResponse AOS.DataAccessLayer.Appointment82.Appointment1.ToggleAppointmentStatus(AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest request) {
            return base.Channel.ToggleAppointmentStatus(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ToggleAppointmentStatus(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentStatus Response) {
            AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleAppointmentStatus(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusResponse> AOS.DataAccessLayer.Appointment82.Appointment1.ToggleAppointmentStatusAsync(AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest request) {
            return base.Channel.ToggleAppointmentStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusResponse> ToggleAppointmentStatusAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleAppointmentStatusRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleAppointmentStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.ToggleActivityResponse AOS.DataAccessLayer.Appointment82.Appointment1.ToggleActivity(AOS.DataAccessLayer.Appointment82.ToggleActivityRequest request) {
            return base.Channel.ToggleActivity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ToggleActivity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string ActivityIdentifier, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.ActivityStatus Response) {
            AOS.DataAccessLayer.Appointment82.ToggleActivityRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleActivityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifier = ActivityIdentifier;
            AOS.DataAccessLayer.Appointment82.ToggleActivityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleActivity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleActivityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.ToggleActivityAsync(AOS.DataAccessLayer.Appointment82.ToggleActivityRequest request) {
            return base.Channel.ToggleActivityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleActivityResponse> ToggleActivityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string ActivityIdentifier) {
            AOS.DataAccessLayer.Appointment82.ToggleActivityRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleActivityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifier = ActivityIdentifier;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleActivityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.ToggleActivitiesResponse AOS.DataAccessLayer.Appointment82.Appointment1.ToggleActivities(AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest request) {
            return base.Channel.ToggleActivities(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ToggleActivities(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifier, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.ActivityStatus Response) {
            AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifier = ActivityIdentifier;
            AOS.DataAccessLayer.Appointment82.ToggleActivitiesResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleActivities(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleActivitiesResponse> AOS.DataAccessLayer.Appointment82.Appointment1.ToggleActivitiesAsync(AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest request) {
            return base.Channel.ToggleActivitiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleActivitiesResponse> ToggleActivitiesAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifier) {
            AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleActivitiesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifier = ActivityIdentifier;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleActivitiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.SetActivityStatusResponse AOS.DataAccessLayer.Appointment82.Appointment1.SetActivityStatus(AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest request) {
            return base.Channel.SetActivityStatus(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo SetActivityStatus(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifier, AOS.DataAccessLayer.Appointment82.ActivityStatus ActivityStatus, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded) {
            AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest inValue = new AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifier = ActivityIdentifier;
            inValue.ActivityStatus = ActivityStatus;
            AOS.DataAccessLayer.Appointment82.SetActivityStatusResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SetActivityStatus(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SetActivityStatusResponse> AOS.DataAccessLayer.Appointment82.Appointment1.SetActivityStatusAsync(AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest request) {
            return base.Channel.SetActivityStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SetActivityStatusResponse> SetActivityStatusAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifier, AOS.DataAccessLayer.Appointment82.ActivityStatus ActivityStatus) {
            AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest inValue = new AOS.DataAccessLayer.Appointment82.SetActivityStatusRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifier = ActivityIdentifier;
            inValue.ActivityStatus = ActivityStatus;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SetActivityStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesResponse AOS.DataAccessLayer.Appointment82.Appointment1.ToggleAndSetActivities(AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest request) {
            return base.Channel.ToggleAndSetActivities(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ToggleAndSetActivities(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifiers, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out string[] Response) {
            AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifiers = ActivityIdentifiers;
            AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleAndSetActivities(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesResponse> AOS.DataAccessLayer.Appointment82.Appointment1.ToggleAndSetActivitiesAsync(AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest request) {
            return base.Channel.ToggleAndSetActivitiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesResponse> ToggleAndSetActivitiesAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, string[] ActivityIdentifiers) {
            AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest inValue = new AOS.DataAccessLayer.Appointment82.ToggleAndSetActivitiesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ActivityIdentifiers = ActivityIdentifiers;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ToggleAndSetActivitiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetMySyncAppointments(AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest request) {
            return base.Channel.GetMySyncAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetMySyncAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentSyncData[] Response) {
            AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMySyncAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetMySyncAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest request) {
            return base.Channel.GetMySyncAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsResponse> GetMySyncAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime) {
            AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMySyncAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMySyncAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAppointmentEntityResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentEntity(AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest request) {
            return base.Channel.GetAppointmentEntity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAppointmentEntity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentEntityId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntityId = AppointmentEntityId;
            AOS.DataAccessLayer.Appointment82.GetAppointmentEntityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentEntity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentEntityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest request) {
            return base.Channel.GetAppointmentEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentEntityResponse> GetAppointmentEntityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentEntityId) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntityId = AppointmentEntityId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityByType(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityByType(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultAppointmentEntityByType(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskType Type, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Type = Type;
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityByType(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityByTypeAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityByTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeResponse> CreateDefaultAppointmentEntityByTypeAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskType Type) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Type = Type;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityByTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.AcceptResponse AOS.DataAccessLayer.Appointment82.Appointment1.Accept(AOS.DataAccessLayer.Appointment82.AcceptRequest request) {
            return base.Channel.Accept(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo Accept(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded) {
            AOS.DataAccessLayer.Appointment82.AcceptRequest inValue = new AOS.DataAccessLayer.Appointment82.AcceptRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            AOS.DataAccessLayer.Appointment82.AcceptResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).Accept(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AcceptResponse> AOS.DataAccessLayer.Appointment82.Appointment1.AcceptAsync(AOS.DataAccessLayer.Appointment82.AcceptRequest request) {
            return base.Channel.AcceptAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AcceptResponse> AcceptAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            AOS.DataAccessLayer.Appointment82.AcceptRequest inValue = new AOS.DataAccessLayer.Appointment82.AcceptRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).AcceptAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.RejectResponse AOS.DataAccessLayer.Appointment82.Appointment1.Reject(AOS.DataAccessLayer.Appointment82.RejectRequest request) {
            return base.Channel.Reject(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo Reject(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, string RejectReason, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded) {
            AOS.DataAccessLayer.Appointment82.RejectRequest inValue = new AOS.DataAccessLayer.Appointment82.RejectRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.RejectReason = RejectReason;
            inValue.UpdateMode = UpdateMode;
            AOS.DataAccessLayer.Appointment82.RejectResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).Reject(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.RejectResponse> AOS.DataAccessLayer.Appointment82.Appointment1.RejectAsync(AOS.DataAccessLayer.Appointment82.RejectRequest request) {
            return base.Channel.RejectAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.RejectResponse> RejectAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, string RejectReason, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            AOS.DataAccessLayer.Appointment82.RejectRequest inValue = new AOS.DataAccessLayer.Appointment82.RejectRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.RejectReason = RejectReason;
            inValue.UpdateMode = UpdateMode;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).RejectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.SaveResponse AOS.DataAccessLayer.Appointment82.Appointment1.Save(AOS.DataAccessLayer.Appointment82.SaveRequest request) {
            return base.Channel.Save(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo Save(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, bool SendEmailToParticipants, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.SaveRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            inValue.UpdateMode = UpdateMode;
            inValue.SendEmailToParticipants = SendEmailToParticipants;
            inValue.SmtpEMailConnectionInfo = SmtpEMailConnectionInfo;
            inValue.ImapEMailConnectionInfo = ImapEMailConnectionInfo;
            AOS.DataAccessLayer.Appointment82.SaveResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).Save(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveResponse> AOS.DataAccessLayer.Appointment82.Appointment1.SaveAsync(AOS.DataAccessLayer.Appointment82.SaveRequest request) {
            return base.Channel.SaveAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SaveResponse> SaveAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, bool SendEmailToParticipants, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo) {
            AOS.DataAccessLayer.Appointment82.SaveRequest inValue = new AOS.DataAccessLayer.Appointment82.SaveRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            inValue.UpdateMode = UpdateMode;
            inValue.SendEmailToParticipants = SendEmailToParticipants;
            inValue.SmtpEMailConnectionInfo = SmtpEMailConnectionInfo;
            inValue.ImapEMailConnectionInfo = ImapEMailConnectionInfo;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SaveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.DeleteResponse AOS.DataAccessLayer.Appointment82.Appointment1.Delete(AOS.DataAccessLayer.Appointment82.DeleteRequest request) {
            return base.Channel.Delete(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo Delete(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, bool SendEmailToParticipants, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded) {
            AOS.DataAccessLayer.Appointment82.DeleteRequest inValue = new AOS.DataAccessLayer.Appointment82.DeleteRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            inValue.SendEmailToParticipants = SendEmailToParticipants;
            inValue.SmtpEMailConnectionInfo = SmtpEMailConnectionInfo;
            inValue.ImapEMailConnectionInfo = ImapEMailConnectionInfo;
            AOS.DataAccessLayer.Appointment82.DeleteResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).Delete(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.DeleteResponse> AOS.DataAccessLayer.Appointment82.Appointment1.DeleteAsync(AOS.DataAccessLayer.Appointment82.DeleteRequest request) {
            return base.Channel.DeleteAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.DeleteResponse> DeleteAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, bool SendEmailToParticipants, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo SmtpEMailConnectionInfo, AOS.DataAccessLayer.Appointment82.EMailConnectionInfo ImapEMailConnectionInfo) {
            AOS.DataAccessLayer.Appointment82.DeleteRequest inValue = new AOS.DataAccessLayer.Appointment82.DeleteRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            inValue.SendEmailToParticipants = SendEmailToParticipants;
            inValue.SmtpEMailConnectionInfo = SmtpEMailConnectionInfo;
            inValue.ImapEMailConnectionInfo = ImapEMailConnectionInfo;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).DeleteAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CalculateDaysResponse AOS.DataAccessLayer.Appointment82.Appointment1.CalculateDays(AOS.DataAccessLayer.Appointment82.CalculateDaysRequest request) {
            return base.Channel.CalculateDays(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CalculateDays(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response) {
            AOS.DataAccessLayer.Appointment82.CalculateDaysRequest inValue = new AOS.DataAccessLayer.Appointment82.CalculateDaysRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            AOS.DataAccessLayer.Appointment82.CalculateDaysResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CalculateDays(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CalculateDaysResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CalculateDaysAsync(AOS.DataAccessLayer.Appointment82.CalculateDaysRequest request) {
            return base.Channel.CalculateDaysAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CalculateDaysResponse> CalculateDaysAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity) {
            AOS.DataAccessLayer.Appointment82.CalculateDaysRequest inValue = new AOS.DataAccessLayer.Appointment82.CalculateDaysRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CalculateDaysAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.ValidateDaysResponse AOS.DataAccessLayer.Appointment82.Appointment1.ValidateDays(AOS.DataAccessLayer.Appointment82.ValidateDaysRequest request) {
            return base.Channel.ValidateDays(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo ValidateDays(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, System.DateTime[] Dates, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.RecurrenceDate[] Response) {
            AOS.DataAccessLayer.Appointment82.ValidateDaysRequest inValue = new AOS.DataAccessLayer.Appointment82.ValidateDaysRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            inValue.Dates = Dates;
            AOS.DataAccessLayer.Appointment82.ValidateDaysResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ValidateDays(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ValidateDaysResponse> AOS.DataAccessLayer.Appointment82.Appointment1.ValidateDaysAsync(AOS.DataAccessLayer.Appointment82.ValidateDaysRequest request) {
            return base.Channel.ValidateDaysAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.ValidateDaysResponse> ValidateDaysAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.AppointmentEntity AppointmentEntity, System.DateTime[] Dates) {
            AOS.DataAccessLayer.Appointment82.ValidateDaysRequest inValue = new AOS.DataAccessLayer.Appointment82.ValidateDaysRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentEntity = AppointmentEntity;
            inValue.Dates = Dates;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).ValidateDaysAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultRecurrence(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest request) {
            return base.Channel.CreateDefaultRecurrence(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultRecurrence(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultRecurrence(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultRecurrenceAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest request) {
            return base.Channel.CreateDefaultRecurrenceAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceResponse> CreateDefaultRecurrenceAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultRecurrenceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.AssignToResponse AOS.DataAccessLayer.Appointment82.Appointment1.AssignTo(AOS.DataAccessLayer.Appointment82.AssignToRequest request) {
            return base.Channel.AssignTo(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo AssignTo(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.ParticipantInfo Participant, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.AssignToRequest inValue = new AOS.DataAccessLayer.Appointment82.AssignToRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.Participant = Participant;
            inValue.UpdateMode = UpdateMode;
            AOS.DataAccessLayer.Appointment82.AssignToResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).AssignTo(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AssignToResponse> AOS.DataAccessLayer.Appointment82.Appointment1.AssignToAsync(AOS.DataAccessLayer.Appointment82.AssignToRequest request) {
            return base.Channel.AssignToAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AssignToResponse> AssignToAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.ParticipantInfo Participant, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            AOS.DataAccessLayer.Appointment82.AssignToRequest inValue = new AOS.DataAccessLayer.Appointment82.AssignToRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.Participant = Participant;
            inValue.UpdateMode = UpdateMode;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).AssignToAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.SetSeenResponse AOS.DataAccessLayer.Appointment82.Appointment1.SetSeen(AOS.DataAccessLayer.Appointment82.SetSeenRequest request) {
            return base.Channel.SetSeen(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo SetSeen(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded) {
            AOS.DataAccessLayer.Appointment82.SetSeenRequest inValue = new AOS.DataAccessLayer.Appointment82.SetSeenRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            AOS.DataAccessLayer.Appointment82.SetSeenResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SetSeen(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SetSeenResponse> AOS.DataAccessLayer.Appointment82.Appointment1.SetSeenAsync(AOS.DataAccessLayer.Appointment82.SetSeenRequest request) {
            return base.Channel.SetSeenAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.SetSeenResponse> SetSeenAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            AOS.DataAccessLayer.Appointment82.SetSeenRequest inValue = new AOS.DataAccessLayer.Appointment82.SetSeenRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).SetSeenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.MoveResponse AOS.DataAccessLayer.Appointment82.Appointment1.Move(AOS.DataAccessLayer.Appointment82.MoveRequest request) {
            return base.Channel.Move(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo Move(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, System.DateTime NewStartTime, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.MoveRequest inValue = new AOS.DataAccessLayer.Appointment82.MoveRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.NewStartTime = NewStartTime;
            inValue.UpdateMode = UpdateMode;
            AOS.DataAccessLayer.Appointment82.MoveResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).Move(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.MoveResponse> AOS.DataAccessLayer.Appointment82.Appointment1.MoveAsync(AOS.DataAccessLayer.Appointment82.MoveRequest request) {
            return base.Channel.MoveAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.MoveResponse> MoveAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, System.DateTime NewStartTime, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            AOS.DataAccessLayer.Appointment82.MoveRequest inValue = new AOS.DataAccessLayer.Appointment82.MoveRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.NewStartTime = NewStartTime;
            inValue.UpdateMode = UpdateMode;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).MoveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.AcceptRejectedResponse AOS.DataAccessLayer.Appointment82.Appointment1.AcceptRejected(AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest request) {
            return base.Channel.AcceptRejected(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo AcceptRejected(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest inValue = new AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            AOS.DataAccessLayer.Appointment82.AcceptRejectedResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).AcceptRejected(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AcceptRejectedResponse> AOS.DataAccessLayer.Appointment82.Appointment1.AcceptRejectedAsync(AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest request) {
            return base.Channel.AcceptRejectedAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.AcceptRejectedResponse> AcceptRejectedAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, AOS.DataAccessLayer.Appointment82.RecurrenceUpdateMode UpdateMode) {
            AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest inValue = new AOS.DataAccessLayer.Appointment82.AcceptRejectedRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            inValue.UpdateMode = UpdateMode;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).AcceptRejectedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultRecurrenceByDate(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest request) {
            return base.Channel.CreateDefaultRecurrenceByDate(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultRecurrenceByDate(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.RecurrenceInfo Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultRecurrenceByDate(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultRecurrenceByDateAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest request) {
            return base.Channel.CreateDefaultRecurrenceByDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateResponse> CreateDefaultRecurrenceByDateAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultRecurrenceByDateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultRecurrenceByDateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedResponse AOS.DataAccessLayer.Appointment82.Appointment1.CleanUpBookingDeleted(AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest request) {
            return base.Channel.CleanUpBookingDeleted(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CleanUpBookingDeleted(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out int Response) {
            AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest inValue = new AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentIds = AppointmentIds;
            AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CleanUpBookingDeleted(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CleanUpBookingDeletedAsync(AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest request) {
            return base.Channel.CleanUpBookingDeletedAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedResponse> CleanUpBookingDeletedAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds) {
            AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest inValue = new AOS.DataAccessLayer.Appointment82.CleanUpBookingDeletedRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentIds = AppointmentIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CleanUpBookingDeletedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedResponse AOS.DataAccessLayer.Appointment82.Appointment1.CleanUpRecurringBookingDeleted(AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest request) {
            return base.Channel.CleanUpRecurringBookingDeleted(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CleanUpRecurringBookingDeleted(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out int Response) {
            AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest inValue = new AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CleanUpRecurringBookingDeleted(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CleanUpRecurringBookingDeletedAsync(AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest request) {
            return base.Channel.CleanUpRecurringBookingDeletedAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedResponse> CleanUpRecurringBookingDeletedAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest inValue = new AOS.DataAccessLayer.Appointment82.CleanUpRecurringBookingDeletedRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CleanUpRecurringBookingDeletedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityByTypeAndAssociate(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityByTypeAndAssociate(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultAppointmentEntityByTypeAndAssociate(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskType Type, int AssociateId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Type = Type;
            inValue.AssociateId = AssociateId;
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityByTypeAndAssociate(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityByTypeAndAssociateAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateResponse> CreateDefaultAppointmentEntityByTypeAndAssociateAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, AOS.DataAccessLayer.Appointment82.TaskType Type, int AssociateId) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityByTypeAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Type = Type;
            inValue.AssociateId = AssociateId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityByTypeAndAssociateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetCanInsertForAssociates(AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest request) {
            return base.Channel.GetCanInsertForAssociates(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetCanInsertForAssociates(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AssociateIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out bool[] Response) {
            AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest inValue = new AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIds = AssociateIds;
            AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetCanInsertForAssociates(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetCanInsertForAssociatesAsync(AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest request) {
            return base.Channel.GetCanInsertForAssociatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesResponse> GetCanInsertForAssociatesAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AssociateIds) {
            AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest inValue = new AOS.DataAccessLayer.Appointment82.GetCanInsertForAssociatesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIds = AssociateIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetCanInsertForAssociatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentHaveParticipantsWithEmail(AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest request) {
            return base.Channel.GetAppointmentHaveParticipantsWithEmail(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAppointmentHaveParticipantsWithEmail(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out bool Response) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentHaveParticipantsWithEmail(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentHaveParticipantsWithEmailAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest request) {
            return base.Channel.GetAppointmentHaveParticipantsWithEmailAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailResponse> GetAppointmentHaveParticipantsWithEmailAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentHaveParticipantsWithEmailRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentHaveParticipantsWithEmailAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityFromSaleSuggestion(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityFromSaleSuggestion(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultAppointmentEntityFromSaleSuggestion(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId, int SaleId, bool CreateNow, int OwnerId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            inValue.SaleId = SaleId;
            inValue.CreateNow = CreateNow;
            inValue.OwnerId = OwnerId;
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityFromSaleSuggestion(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityFromSaleSuggestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionResponse> CreateDefaultAppointmentEntityFromSaleSuggestionAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId, int SaleId, bool CreateNow, int OwnerId) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromSaleSuggestionRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            inValue.SaleId = SaleId;
            inValue.CreateNow = CreateNow;
            inValue.OwnerId = OwnerId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityFromSaleSuggestionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetNextSuggestedAppointmentBySale(AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest request) {
            return base.Channel.GetNextSuggestedAppointmentBySale(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetNextSuggestedAppointmentBySale(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SaleId, int CurrentAppointmentId, bool SkipCompleteCheck, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.SuggestedAppointment Response) {
            AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest inValue = new AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SaleId = SaleId;
            inValue.CurrentAppointmentId = CurrentAppointmentId;
            inValue.SkipCompleteCheck = SkipCompleteCheck;
            AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetNextSuggestedAppointmentBySale(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetNextSuggestedAppointmentBySaleAsync(AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest request) {
            return base.Channel.GetNextSuggestedAppointmentBySaleAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleResponse> GetNextSuggestedAppointmentBySaleAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SaleId, int CurrentAppointmentId, bool SkipCompleteCheck) {
            AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest inValue = new AOS.DataAccessLayer.Appointment82.GetNextSuggestedAppointmentBySaleRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SaleId = SaleId;
            inValue.CurrentAppointmentId = CurrentAppointmentId;
            inValue.SkipCompleteCheck = SkipCompleteCheck;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetNextSuggestedAppointmentBySaleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultReOpenAppointment(AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest request) {
            return base.Channel.CreateDefaultReOpenAppointment(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultReOpenAppointment(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SaleId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SaleId = SaleId;
            AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultReOpenAppointment(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultReOpenAppointmentAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest request) {
            return base.Channel.CreateDefaultReOpenAppointmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentResponse> CreateDefaultReOpenAppointmentAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SaleId) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultReOpenAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SaleId = SaleId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultReOpenAppointmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionResponse AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityFromProjectSuggestion(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityFromProjectSuggestion(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CreateDefaultAppointmentEntityFromProjectSuggestion(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId, int ProjectId, bool CreateNow, int OwnerId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.AppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            inValue.ProjectId = ProjectId;
            inValue.CreateNow = CreateNow;
            inValue.OwnerId = OwnerId;
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityFromProjectSuggestion(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest request) {
            return base.Channel.CreateDefaultAppointmentEntityFromProjectSuggestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionResponse> CreateDefaultAppointmentEntityFromProjectSuggestionAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId, int ProjectId, bool CreateNow, int OwnerId) {
            AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest inValue = new AOS.DataAccessLayer.Appointment82.CreateDefaultAppointmentEntityFromProjectSuggestionRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            inValue.ProjectId = ProjectId;
            inValue.CreateNow = CreateNow;
            inValue.OwnerId = OwnerId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CreateDefaultAppointmentEntityFromProjectSuggestionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberResponse AOS.DataAccessLayer.Appointment82.Appointment1.CanAssignToProjectMember(AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest request) {
            return base.Channel.CanAssignToProjectMember(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo CanAssignToProjectMember(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, int SuggestedAppointmentId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out bool Response) {
            AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest inValue = new AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CanAssignToProjectMember(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberResponse> AOS.DataAccessLayer.Appointment82.Appointment1.CanAssignToProjectMemberAsync(AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest request) {
            return base.Channel.CanAssignToProjectMemberAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberResponse> CanAssignToProjectMemberAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, int SuggestedAppointmentId) {
            AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest inValue = new AOS.DataAccessLayer.Appointment82.CanAssignToProjectMemberRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).CanAssignToProjectMemberAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAppointmentListResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentList(AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest request) {
            return base.Channel.GetAppointmentList(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAppointmentList(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentIds = AppointmentIds;
            AOS.DataAccessLayer.Appointment82.GetAppointmentListResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentList(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentListResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentListAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest request) {
            return base.Channel.GetAppointmentListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentListResponse> GetAppointmentListAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentListRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentIds = AppointmentIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetMyAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetMyAppointments(AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest request) {
            return base.Channel.GetMyAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetMyAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetMyAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetMyAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest request) {
            return base.Channel.GetMyAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyAppointmentsResponse> GetMyAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointments(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest request) {
            return base.Channel.GetPersonAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPersonAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest request) {
            return base.Channel.GetPersonAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsResponse> GetPersonAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetMyDiaryResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetMyDiary(AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest request) {
            return base.Channel.GetMyDiary(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetMyDiary(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetMyDiaryResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyDiary(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyDiaryResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetMyDiaryAsync(AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest request) {
            return base.Channel.GetMyDiaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyDiaryResponse> GetMyDiaryAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyDiaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetMyTasksResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetMyTasks(AOS.DataAccessLayer.Appointment82.GetMyTasksRequest request) {
            return base.Channel.GetMyTasks(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetMyTasks(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetMyTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetMyTasksResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyTasks(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyTasksResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetMyTasksAsync(AOS.DataAccessLayer.Appointment82.GetMyTasksRequest request) {
            return base.Channel.GetMyTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyTasksResponse> GetMyTasksAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Count) {
            AOS.DataAccessLayer.Appointment82.GetMyTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPersonDiaryResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonDiary(AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest request) {
            return base.Channel.GetPersonDiary(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPersonDiary(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetPersonDiaryResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonDiary(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonDiaryResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonDiaryAsync(AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest request) {
            return base.Channel.GetPersonDiaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonDiaryResponse> GetPersonDiaryAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonDiaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPersonTasksResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonTasks(AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest request) {
            return base.Channel.GetPersonTasks(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPersonTasks(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetPersonTasksResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonTasks(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonTasksResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonTasksAsync(AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest request) {
            return base.Channel.GetPersonTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonTasksResponse> GetPersonTasksAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, int Count) {
            AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest request) {
            return base.Channel.GetPersonAppointmentsByType(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPersonAppointmentsByType(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByType(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest request) {
            return base.Channel.GetPersonAppointmentsByTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeResponse> GetPersonAppointmentsByTypeAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointments(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest request) {
            return base.Channel.GetProjectAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest request) {
            return base.Channel.GetProjectAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsResponse> GetProjectAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest request) {
            return base.Channel.GetProjectAppointmentsByType(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectAppointmentsByType(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByType(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest request) {
            return base.Channel.GetProjectAppointmentsByTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeResponse> GetProjectAppointmentsByTypeAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointments(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest request) {
            return base.Channel.GetContactAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetContactAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest request) {
            return base.Channel.GetContactAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsResponse> GetContactAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest request) {
            return base.Channel.GetContactAppointmentsByType(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetContactAppointmentsByType(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByType(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest request) {
            return base.Channel.GetContactAppointmentsByTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeResponse> GetContactAppointmentsByTypeAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointments(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest request) {
            return base.Channel.GetProjectMemberAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectMemberAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest request) {
            return base.Channel.GetProjectMemberAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsResponse> GetProjectMemberAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByType(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByType(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectMemberAppointmentsByType(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByType(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByTypeAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeResponse> GetProjectMemberAppointmentsByTypeAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, AOS.DataAccessLayer.Appointment82.AppointmentType AppointmentType) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTypeRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.AppointmentType = AppointmentType;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest request) {
            return base.Channel.GetPersonAppointmentsByTask(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPersonAppointmentsByTask(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByTask(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest request) {
            return base.Channel.GetPersonAppointmentsByTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskResponse> GetPersonAppointmentsByTaskAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest request) {
            return base.Channel.GetPersonAppointmentsByTasks(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPersonAppointmentsByTasks(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByTasks(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest request) {
            return base.Channel.GetPersonAppointmentsByTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksResponse> GetPersonAppointmentsByTasksAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetPersonAppointmentsByTaskHeading(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPersonAppointmentsByTaskHeading(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByTaskHeading(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPersonAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetPersonAppointmentsByTaskHeadingAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingResponse> GetPersonAppointmentsByTaskHeadingAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, bool IncludeProjectAppointments, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPersonAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.IncludeProjectAppointments = IncludeProjectAppointments;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPersonAppointmentsByTaskHeadingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest request) {
            return base.Channel.GetProjectAppointmentsByTask(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectAppointmentsByTask(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByTask(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest request) {
            return base.Channel.GetProjectAppointmentsByTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskResponse> GetProjectAppointmentsByTaskAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest request) {
            return base.Channel.GetProjectAppointmentsByTasks(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectAppointmentsByTasks(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByTasks(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest request) {
            return base.Channel.GetProjectAppointmentsByTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksResponse> GetProjectAppointmentsByTasksAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetProjectAppointmentsByTaskHeading(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectAppointmentsByTaskHeading(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByTaskHeading(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetProjectAppointmentsByTaskHeadingAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingResponse> GetProjectAppointmentsByTaskHeadingAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectAppointmentsByTaskHeadingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByTask(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectMemberAppointmentsByTask(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByTask(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskResponse> GetProjectMemberAppointmentsByTaskAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByTasks(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectMemberAppointmentsByTasks(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByTasks(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksResponse> GetProjectMemberAppointmentsByTasksAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByTaskHeading(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetProjectMemberAppointmentsByTaskHeading(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByTaskHeading(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetProjectMemberAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetProjectMemberAppointmentsByTaskHeadingAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingResponse> GetProjectMemberAppointmentsByTaskHeadingAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int PersonId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetProjectMemberAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.PersonId = PersonId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetProjectMemberAppointmentsByTaskHeadingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByTask(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest request) {
            return base.Channel.GetContactAppointmentsByTask(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetContactAppointmentsByTask(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByTask(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByTaskAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest request) {
            return base.Channel.GetContactAppointmentsByTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskResponse> GetContactAppointmentsByTaskAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskId) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskId = TaskId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByTasks(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest request) {
            return base.Channel.GetContactAppointmentsByTasks(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetContactAppointmentsByTasks(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByTasks(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByTasksAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest request) {
            return base.Channel.GetContactAppointmentsByTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksResponse> GetContactAppointmentsByTasksAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int[] TaskIds) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTasksRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskIds = TaskIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetContactAppointmentsByTaskHeading(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetContactAppointmentsByTaskHeading(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByTaskHeading(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetContactAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetContactAppointmentsByTaskHeadingAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingResponse> GetContactAppointmentsByTaskHeadingAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ContactId, System.DateTime StartTime, System.DateTime EndTime, int Count, int TaskHeadingId) {
            AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetContactAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ContactId = ContactId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            inValue.TaskHeadingId = TaskHeadingId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetContactAppointmentsByTaskHeadingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPublishedAppointment(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest request) {
            return base.Channel.GetPublishedAppointment(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPublishedAppointment(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment Response) {
            AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPublishedAppointment(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPublishedAppointmentAsync(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest request) {
            return base.Channel.GetPublishedAppointmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentResponse> GetPublishedAppointmentAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AppointmentId) {
            AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentId = AppointmentId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPublishedAppointmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPublishedAppointments(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest request) {
            return base.Channel.GetPublishedAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPublishedAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentIds = AppointmentIds;
            AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPublishedAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPublishedAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest request) {
            return base.Channel.GetPublishedAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsResponse> GetPublishedAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AppointmentIds) {
            AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPublishedAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AppointmentIds = AppointmentIds;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPublishedAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetMyPublishedAppointments(AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest request) {
            return base.Channel.GetMyPublishedAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetMyPublishedAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyPublishedAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetMyPublishedAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest request) {
            return base.Channel.GetMyPublishedAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsResponse> GetMyPublishedAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetMyPublishedAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetMyPublishedAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetPublishedProjectAppointments(AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest request) {
            return base.Channel.GetPublishedProjectAppointments(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetPublishedProjectAppointments(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPublishedProjectAppointments(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetPublishedProjectAppointmentsAsync(AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest request) {
            return base.Channel.GetPublishedProjectAppointmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsResponse> GetPublishedProjectAppointmentsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int ProjectId) {
            AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetPublishedProjectAppointmentsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ProjectId = ProjectId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetPublishedProjectAppointmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentsByTaskHeading(AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetAppointmentsByTaskHeading(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAppointmentsByTaskHeading(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int TaskHeadingId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.TaskHeadingId = TaskHeadingId;
            AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentsByTaskHeading(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentsByTaskHeadingAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest request) {
            return base.Channel.GetAppointmentsByTaskHeadingAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingResponse> GetAppointmentsByTaskHeadingAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int TaskHeadingId) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentsByTaskHeadingRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.TaskHeadingId = TaskHeadingId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentsByTaskHeadingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAssociateDiaryResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAssociateDiary(AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest request) {
            return base.Channel.GetAssociateDiary(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAssociateDiary(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateId, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateId = AssociateId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetAssociateDiaryResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAssociateDiary(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAssociateDiaryResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAssociateDiaryAsync(AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest request) {
            return base.Channel.GetAssociateDiaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAssociateDiaryResponse> GetAssociateDiaryAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateId, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAssociateDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateId = AssociateId;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAssociateDiaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetDiaryByGroupResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetDiaryByGroup(AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest request) {
            return base.Channel.GetDiaryByGroup(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetDiaryByGroup(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int GroupId, int GroupType, System.DateTime StartTime, System.DateTime EndTime, int Count, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest inValue = new AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.GroupId = GroupId;
            inValue.GroupType = GroupType;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            AOS.DataAccessLayer.Appointment82.GetDiaryByGroupResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetDiaryByGroup(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetDiaryByGroupResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetDiaryByGroupAsync(AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest request) {
            return base.Channel.GetDiaryByGroupAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetDiaryByGroupResponse> GetDiaryByGroupAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int GroupId, int GroupType, System.DateTime StartTime, System.DateTime EndTime, int Count) {
            AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest inValue = new AOS.DataAccessLayer.Appointment82.GetDiaryByGroupRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.GroupId = GroupId;
            inValue.GroupType = GroupType;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Count = Count;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetDiaryByGroupAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.UpdateAppointmentResponse AOS.DataAccessLayer.Appointment82.Appointment1.UpdateAppointment(AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest request) {
            return base.Channel.UpdateAppointment(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo UpdateAppointment(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Id, System.DateTime StartTime, System.DateTime EndTime, int Status, int Type, int AssociateId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment Response) {
            AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Id = Id;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Status = Status;
            inValue.Type = Type;
            inValue.AssociateId = AssociateId;
            AOS.DataAccessLayer.Appointment82.UpdateAppointmentResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).UpdateAppointment(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.UpdateAppointmentResponse> AOS.DataAccessLayer.Appointment82.Appointment1.UpdateAppointmentAsync(AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest request) {
            return base.Channel.UpdateAppointmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.UpdateAppointmentResponse> UpdateAppointmentAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int Id, System.DateTime StartTime, System.DateTime EndTime, int Status, int Type, int AssociateId) {
            AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.UpdateAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.Id = Id;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.Status = Status;
            inValue.Type = Type;
            inValue.AssociateId = AssociateId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).UpdateAppointmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAssociatesDiary(AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest request) {
            return base.Channel.GetAssociatesDiary(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAssociatesDiary(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AssociateIds, System.DateTime StartTime, System.DateTime EndTime, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIds = AssociateIds;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAssociatesDiary(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAssociatesDiaryAsync(AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest request) {
            return base.Channel.GetAssociatesDiaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryResponse> GetAssociatesDiaryAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int[] AssociateIds, System.DateTime StartTime, System.DateTime EndTime) {
            AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAssociatesDiaryRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIds = AssociateIds;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAssociatesDiaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentRecords(AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest request) {
            return base.Channel.GetAppointmentRecords(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAppointmentRecords(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int MotherId, int RecurrenceRuleId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.Appointment[] Response) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.MotherId = MotherId;
            inValue.RecurrenceRuleId = RecurrenceRuleId;
            AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentRecords(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAppointmentRecordsAsync(AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest request) {
            return base.Channel.GetAppointmentRecordsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsResponse> GetAppointmentRecordsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int MotherId, int RecurrenceRuleId) {
            AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAppointmentRecordsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.MotherId = MotherId;
            inValue.RecurrenceRuleId = RecurrenceRuleId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAppointmentRecordsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetDayInformationListByDatesAndAssociate(AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest request) {
            return base.Channel.GetDayInformationListByDatesAndAssociate(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetDayInformationListByDatesAndAssociate(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.DayInformationListItem[] Response) {
            AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.AssociateId = AssociateId;
            AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetDayInformationListByDatesAndAssociate(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetDayInformationListByDatesAndAssociateAsync(AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest request) {
            return base.Channel.GetDayInformationListByDatesAndAssociateAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateResponse> GetDayInformationListByDatesAndAssociateAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId) {
            AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.GetDayInformationListByDatesAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.AssociateId = AssociateId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetDayInformationListByDatesAndAssociateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetActivityInformationListByDatesAndAssociate(AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest request) {
            return base.Channel.GetActivityInformationListByDatesAndAssociate(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetActivityInformationListByDatesAndAssociate(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.ActivityInformationListItem[] Response) {
            AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.AssociateId = AssociateId;
            AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetActivityInformationListByDatesAndAssociate(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetActivityInformationListByDatesAndAssociateAsync(AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest request) {
            return base.Channel.GetActivityInformationListByDatesAndAssociateAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateResponse> GetActivityInformationListByDatesAndAssociateAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId) {
            AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.GetActivityInformationListByDatesAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.AssociateId = AssociateId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetActivityInformationListByDatesAndAssociateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetRedLetterInformationListByDatesAndAssociate(AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest request) {
            return base.Channel.GetRedLetterInformationListByDatesAndAssociate(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetRedLetterInformationListByDatesAndAssociate(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.RedLetterInformationListItem[] Response) {
            AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.AssociateId = AssociateId;
            AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetRedLetterInformationListByDatesAndAssociate(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetRedLetterInformationListByDatesAndAssociateAsync(AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest request) {
            return base.Channel.GetRedLetterInformationListByDatesAndAssociateAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateResponse> GetRedLetterInformationListByDatesAndAssociateAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, System.DateTime StartDate, System.DateTime EndDate, int AssociateId) {
            AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest inValue = new AOS.DataAccessLayer.Appointment82.GetRedLetterInformationListByDatesAndAssociateRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.AssociateId = AssociateId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetRedLetterInformationListByDatesAndAssociateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetAlarmsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetAlarms(AOS.DataAccessLayer.Appointment82.GetAlarmsRequest request) {
            return base.Channel.GetAlarms(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetAlarms(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool IncludeInvitations, bool IncludeAllAppointments, int DefaultAlarmLeadTimeInMinutes, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.MultiAlarmData Response) {
            AOS.DataAccessLayer.Appointment82.GetAlarmsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAlarmsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.IncludeInvitations = IncludeInvitations;
            inValue.IncludeAllAppointments = IncludeAllAppointments;
            inValue.DefaultAlarmLeadTimeInMinutes = DefaultAlarmLeadTimeInMinutes;
            AOS.DataAccessLayer.Appointment82.GetAlarmsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAlarms(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAlarmsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetAlarmsAsync(AOS.DataAccessLayer.Appointment82.GetAlarmsRequest request) {
            return base.Channel.GetAlarmsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetAlarmsResponse> GetAlarmsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool IncludeInvitations, bool IncludeAllAppointments, int DefaultAlarmLeadTimeInMinutes) {
            AOS.DataAccessLayer.Appointment82.GetAlarmsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetAlarmsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.IncludeInvitations = IncludeInvitations;
            inValue.IncludeAllAppointments = IncludeAllAppointments;
            inValue.DefaultAlarmLeadTimeInMinutes = DefaultAlarmLeadTimeInMinutes;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetAlarmsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GenerateLeadResponse AOS.DataAccessLayer.Appointment82.Appointment1.GenerateLead(AOS.DataAccessLayer.Appointment82.GenerateLeadRequest request) {
            return base.Channel.GenerateLead(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GenerateLead(
                    string ApplicationToken, 
                    AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, 
                    ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, 
                    int AssociateIdForNewContact, 
                    string LeadDescription, 
                    string Relation, 
                    int RelationId, 
                    string LeadContact, 
                    string LeadPersonFirstname, 
                    string LeadPersonLastname, 
                    string LeadPersonEmail, 
                    string LeadPhoneNumber, 
                    string CreatorsContact, 
                    string CreatorsFirstname, 
                    string CreatorsLastname, 
                    out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, 
                    out bool Succeeded, 
                    out AOS.DataAccessLayer.Appointment82.SalesActivity Response) {
            AOS.DataAccessLayer.Appointment82.GenerateLeadRequest inValue = new AOS.DataAccessLayer.Appointment82.GenerateLeadRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIdForNewContact = AssociateIdForNewContact;
            inValue.LeadDescription = LeadDescription;
            inValue.Relation = Relation;
            inValue.RelationId = RelationId;
            inValue.LeadContact = LeadContact;
            inValue.LeadPersonFirstname = LeadPersonFirstname;
            inValue.LeadPersonLastname = LeadPersonLastname;
            inValue.LeadPersonEmail = LeadPersonEmail;
            inValue.LeadPhoneNumber = LeadPhoneNumber;
            inValue.CreatorsContact = CreatorsContact;
            inValue.CreatorsFirstname = CreatorsFirstname;
            inValue.CreatorsLastname = CreatorsLastname;
            AOS.DataAccessLayer.Appointment82.GenerateLeadResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GenerateLead(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GenerateLeadResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GenerateLeadAsync(AOS.DataAccessLayer.Appointment82.GenerateLeadRequest request) {
            return base.Channel.GenerateLeadAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GenerateLeadResponse> GenerateLeadAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateIdForNewContact, string LeadDescription, string Relation, int RelationId, string LeadContact, string LeadPersonFirstname, string LeadPersonLastname, string LeadPersonEmail, string LeadPhoneNumber, string CreatorsContact, string CreatorsFirstname, string CreatorsLastname) {
            AOS.DataAccessLayer.Appointment82.GenerateLeadRequest inValue = new AOS.DataAccessLayer.Appointment82.GenerateLeadRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIdForNewContact = AssociateIdForNewContact;
            inValue.LeadDescription = LeadDescription;
            inValue.Relation = Relation;
            inValue.RelationId = RelationId;
            inValue.LeadContact = LeadContact;
            inValue.LeadPersonFirstname = LeadPersonFirstname;
            inValue.LeadPersonLastname = LeadPersonLastname;
            inValue.LeadPersonEmail = LeadPersonEmail;
            inValue.LeadPhoneNumber = LeadPhoneNumber;
            inValue.CreatorsContact = CreatorsContact;
            inValue.CreatorsFirstname = CreatorsFirstname;
            inValue.CreatorsLastname = CreatorsLastname;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GenerateLeadAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.RequestForInfoResponse AOS.DataAccessLayer.Appointment82.Appointment1.RequestForInfo(AOS.DataAccessLayer.Appointment82.RequestForInfoRequest request) {
            return base.Channel.RequestForInfo(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo RequestForInfo(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateIdForNewContact, string Channel, string Regarding, string ContactName, string PersonFirstname, string PersonLastname, string EmailAddress, string PhoneNumber, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.SalesActivity Response) {
            AOS.DataAccessLayer.Appointment82.RequestForInfoRequest inValue = new AOS.DataAccessLayer.Appointment82.RequestForInfoRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIdForNewContact = AssociateIdForNewContact;
            inValue.Channel = Channel;
            inValue.Regarding = Regarding;
            inValue.ContactName = ContactName;
            inValue.PersonFirstname = PersonFirstname;
            inValue.PersonLastname = PersonLastname;
            inValue.EmailAddress = EmailAddress;
            inValue.PhoneNumber = PhoneNumber;
            AOS.DataAccessLayer.Appointment82.RequestForInfoResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).RequestForInfo(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.RequestForInfoResponse> AOS.DataAccessLayer.Appointment82.Appointment1.RequestForInfoAsync(AOS.DataAccessLayer.Appointment82.RequestForInfoRequest request) {
            return base.Channel.RequestForInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.RequestForInfoResponse> RequestForInfoAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int AssociateIdForNewContact, string Channel, string Regarding, string ContactName, string PersonFirstname, string PersonLastname, string EmailAddress, string PhoneNumber) {
            AOS.DataAccessLayer.Appointment82.RequestForInfoRequest inValue = new AOS.DataAccessLayer.Appointment82.RequestForInfoRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateIdForNewContact = AssociateIdForNewContact;
            inValue.Channel = Channel;
            inValue.Regarding = Regarding;
            inValue.ContactName = ContactName;
            inValue.PersonFirstname = PersonFirstname;
            inValue.PersonLastname = PersonLastname;
            inValue.EmailAddress = EmailAddress;
            inValue.PhoneNumber = PhoneNumber;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).RequestForInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetSuggestedAppointment(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest request) {
            return base.Channel.GetSuggestedAppointment(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetSuggestedAppointment(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.SuggestedAppointment Response) {
            AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetSuggestedAppointment(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetSuggestedAppointmentAsync(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest request) {
            return base.Channel.GetSuggestedAppointmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentResponse> GetSuggestedAppointmentAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentId) {
            AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest inValue = new AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentId = SuggestedAppointmentId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetSuggestedAppointmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetSuggestedAppointmentEntity(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest request) {
            return base.Channel.GetSuggestedAppointmentEntity(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetSuggestedAppointmentEntity(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentEntityId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.SuggestedAppointmentEntity Response) {
            AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentEntityId = SuggestedAppointmentEntityId;
            AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetSuggestedAppointmentEntity(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetSuggestedAppointmentEntityAsync(AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest request) {
            return base.Channel.GetSuggestedAppointmentEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityResponse> GetSuggestedAppointmentEntityAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int SuggestedAppointmentEntityId) {
            AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest inValue = new AOS.DataAccessLayer.Appointment82.GetSuggestedAppointmentEntityRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SuggestedAppointmentEntityId = SuggestedAppointmentEntityId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetSuggestedAppointmentEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetTaskListItemResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetTaskListItem(AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest request) {
            return base.Channel.GetTaskListItem(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetTaskListItem(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int TaskListItemId, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.TaskListItem Response) {
            AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest inValue = new AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.TaskListItemId = TaskListItemId;
            AOS.DataAccessLayer.Appointment82.GetTaskListItemResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetTaskListItem(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetTaskListItemResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetTaskListItemAsync(AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest request) {
            return base.Channel.GetTaskListItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetTaskListItemResponse> GetTaskListItemAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, int TaskListItemId) {
            AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest inValue = new AOS.DataAccessLayer.Appointment82.GetTaskListItemRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.TaskListItemId = TaskListItemId;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetTaskListItemAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.Appointment82.GetTaskListItemsResponse AOS.DataAccessLayer.Appointment82.Appointment1.GetTaskListItems(AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest request) {
            return base.Channel.GetTaskListItems(request);
        }
        
        public AOS.DataAccessLayer.Appointment82.SoExceptionInfo GetTaskListItems(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, ref AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool IncludeDeleted, out AOS.DataAccessLayer.Appointment82.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.Appointment82.TaskListItem[] Response) {
            AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.IncludeDeleted = IncludeDeleted;
            AOS.DataAccessLayer.Appointment82.GetTaskListItemsResponse retVal = ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetTaskListItems(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetTaskListItemsResponse> AOS.DataAccessLayer.Appointment82.Appointment1.GetTaskListItemsAsync(AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest request) {
            return base.Channel.GetTaskListItemsAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.Appointment82.GetTaskListItemsResponse> GetTaskListItemsAsync(string ApplicationToken, AOS.DataAccessLayer.Appointment82.SoCredentials Credentials, AOS.DataAccessLayer.Appointment82.SoTimeZone TimeZone, bool IncludeDeleted) {
            AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest inValue = new AOS.DataAccessLayer.Appointment82.GetTaskListItemsRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.IncludeDeleted = IncludeDeleted;
            return ((AOS.DataAccessLayer.Appointment82.Appointment1)(this)).GetTaskListItemsAsync(inValue);
        }
    }
}
