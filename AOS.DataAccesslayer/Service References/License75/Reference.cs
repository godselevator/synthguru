//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AOS.DataAccessLayer.License75 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoCredentials", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class SoCredentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ticket {
            get {
                return this.TicketField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketField, value) != true)) {
                    this.TicketField = value;
                    this.RaisePropertyChanged("Ticket");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoTimeZone", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class SoTimeZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoTimeZoneIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoTimeZoneLocationCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoTimeZoneId {
            get {
                return this.SoTimeZoneIdField;
            }
            set {
                if ((this.SoTimeZoneIdField.Equals(value) != true)) {
                    this.SoTimeZoneIdField = value;
                    this.RaisePropertyChanged("SoTimeZoneId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoTimeZoneLocationCode {
            get {
                return this.SoTimeZoneLocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SoTimeZoneLocationCodeField, value) != true)) {
                    this.SoTimeZoneLocationCodeField = value;
                    this.RaisePropertyChanged("SoTimeZoneLocationCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoExceptionInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class SoExceptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.SoExceptionInfo InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.SoExceptionInfoParameters ParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string FriendlyText {
            get {
                return this.FriendlyTextField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyTextField, value) != true)) {
                    this.FriendlyTextField = value;
                    this.RaisePropertyChanged("FriendlyText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public AOS.DataAccessLayer.License75.SoExceptionInfo InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public AOS.DataAccessLayer.License75.SoExceptionInfoParameters Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SoExceptionInfoParameters", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", ItemName="SoExceptionInfoParametersKeyValuePair", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class SoExceptionInfoParameters : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SoExtraInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", ItemName="ExtraInfoNameValuePair", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class SoExtraInfo : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedLicenseInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class ExtendedLicenseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanBeActivatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.LicenseInfo NewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.LicenseInfo CurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.ExtendedModuleLicense[] ExtendedModuleLicensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccumulatedNextCheckDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool CanBeActivated {
            get {
                return this.CanBeActivatedField;
            }
            set {
                if ((this.CanBeActivatedField.Equals(value) != true)) {
                    this.CanBeActivatedField = value;
                    this.RaisePropertyChanged("CanBeActivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public AOS.DataAccessLayer.License75.LicenseInfo New {
            get {
                return this.NewField;
            }
            set {
                if ((object.ReferenceEquals(this.NewField, value) != true)) {
                    this.NewField = value;
                    this.RaisePropertyChanged("New");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public AOS.DataAccessLayer.License75.LicenseInfo Current {
            get {
                return this.CurrentField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentField, value) != true)) {
                    this.CurrentField = value;
                    this.RaisePropertyChanged("Current");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public AOS.DataAccessLayer.License75.ExtendedModuleLicense[] ExtendedModuleLicenses {
            get {
                return this.ExtendedModuleLicensesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendedModuleLicensesField, value) != true)) {
                    this.ExtendedModuleLicensesField = value;
                    this.RaisePropertyChanged("ExtendedModuleLicenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime AccumulatedNextCheckDate {
            get {
                return this.AccumulatedNextCheckDateField;
            }
            set {
                if ((this.AccumulatedNextCheckDateField.Equals(value) != true)) {
                    this.AccumulatedNextCheckDateField = value;
                    this.RaisePropertyChanged("AccumulatedNextCheckDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseInfo", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class LicenseInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NextCheckDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MaintenanceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AdminWarningDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime GraceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtraFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeploymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.ModuleLicense[] ModuleLicensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.SignedPublicKey PublicKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNr {
            get {
                return this.SerialNrField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNrField, value) != true)) {
                    this.SerialNrField = value;
                    this.RaisePropertyChanged("SerialNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string OwnerDescription {
            get {
                return this.OwnerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerDescriptionField, value) != true)) {
                    this.OwnerDescriptionField = value;
                    this.RaisePropertyChanged("OwnerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime NextCheckDate {
            get {
                return this.NextCheckDateField;
            }
            set {
                if ((this.NextCheckDateField.Equals(value) != true)) {
                    this.NextCheckDateField = value;
                    this.RaisePropertyChanged("NextCheckDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime MaintenanceDate {
            get {
                return this.MaintenanceDateField;
            }
            set {
                if ((this.MaintenanceDateField.Equals(value) != true)) {
                    this.MaintenanceDateField = value;
                    this.RaisePropertyChanged("MaintenanceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.DateTime AdminWarningDate {
            get {
                return this.AdminWarningDateField;
            }
            set {
                if ((this.AdminWarningDateField.Equals(value) != true)) {
                    this.AdminWarningDateField = value;
                    this.RaisePropertyChanged("AdminWarningDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.DateTime GraceDate {
            get {
                return this.GraceDateField;
            }
            set {
                if ((this.GraceDateField.Equals(value) != true)) {
                    this.GraceDateField = value;
                    this.RaisePropertyChanged("GraceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int ExtraFlags {
            get {
                return this.ExtraFlagsField;
            }
            set {
                if ((this.ExtraFlagsField.Equals(value) != true)) {
                    this.ExtraFlagsField = value;
                    this.RaisePropertyChanged("ExtraFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string LicenseUrl {
            get {
                return this.LicenseUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseUrlField, value) != true)) {
                    this.LicenseUrlField = value;
                    this.RaisePropertyChanged("LicenseUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string LicenseVersion {
            get {
                return this.LicenseVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseVersionField, value) != true)) {
                    this.LicenseVersionField = value;
                    this.RaisePropertyChanged("LicenseVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int DeploymentType {
            get {
                return this.DeploymentTypeField;
            }
            set {
                if ((this.DeploymentTypeField.Equals(value) != true)) {
                    this.DeploymentTypeField = value;
                    this.RaisePropertyChanged("DeploymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string ProductType {
            get {
                return this.ProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTypeField, value) != true)) {
                    this.ProductTypeField = value;
                    this.RaisePropertyChanged("ProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string ProductDescription {
            get {
                return this.ProductDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true)) {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public AOS.DataAccessLayer.License75.ModuleLicense[] ModuleLicenses {
            get {
                return this.ModuleLicensesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleLicensesField, value) != true)) {
                    this.ModuleLicensesField = value;
                    this.RaisePropertyChanged("ModuleLicenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public AOS.DataAccessLayer.License75.SignedPublicKey PublicKey {
            get {
                return this.PublicKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicKeyField, value) != true)) {
                    this.PublicKeyField = value;
                    this.RaisePropertyChanged("PublicKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedModuleLicense", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class ExtendedModuleLicense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.ModuleLicense NewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.ModuleLicense CurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfLicensesInUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfLicensesFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfLicensesAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfLicensesNewTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfLicensesNewFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfLicensesTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.License75.ModuleLicense New {
            get {
                return this.NewField;
            }
            set {
                if ((object.ReferenceEquals(this.NewField, value) != true)) {
                    this.NewField = value;
                    this.RaisePropertyChanged("New");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public AOS.DataAccessLayer.License75.ModuleLicense Current {
            get {
                return this.CurrentField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentField, value) != true)) {
                    this.CurrentField = value;
                    this.RaisePropertyChanged("Current");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int NumberOfLicensesInUse {
            get {
                return this.NumberOfLicensesInUseField;
            }
            set {
                if ((this.NumberOfLicensesInUseField.Equals(value) != true)) {
                    this.NumberOfLicensesInUseField = value;
                    this.RaisePropertyChanged("NumberOfLicensesInUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int NumberOfLicensesFree {
            get {
                return this.NumberOfLicensesFreeField;
            }
            set {
                if ((this.NumberOfLicensesFreeField.Equals(value) != true)) {
                    this.NumberOfLicensesFreeField = value;
                    this.RaisePropertyChanged("NumberOfLicensesFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int NumberOfLicensesAdded {
            get {
                return this.NumberOfLicensesAddedField;
            }
            set {
                if ((this.NumberOfLicensesAddedField.Equals(value) != true)) {
                    this.NumberOfLicensesAddedField = value;
                    this.RaisePropertyChanged("NumberOfLicensesAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int NumberOfLicensesNewTotal {
            get {
                return this.NumberOfLicensesNewTotalField;
            }
            set {
                if ((this.NumberOfLicensesNewTotalField.Equals(value) != true)) {
                    this.NumberOfLicensesNewTotalField = value;
                    this.RaisePropertyChanged("NumberOfLicensesNewTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int NumberOfLicensesNewFree {
            get {
                return this.NumberOfLicensesNewFreeField;
            }
            set {
                if ((this.NumberOfLicensesNewFreeField.Equals(value) != true)) {
                    this.NumberOfLicensesNewFreeField = value;
                    this.RaisePropertyChanged("NumberOfLicensesNewFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int NumberOfLicensesTotal {
            get {
                return this.NumberOfLicensesTotalField;
            }
            set {
                if ((this.NumberOfLicensesTotalField.Equals(value) != true)) {
                    this.NumberOfLicensesTotalField = value;
                    this.RaisePropertyChanged("NumberOfLicensesTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignedPublicKey", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class SignedPublicKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SignDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Cryptography.DSAParameters KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SignDate {
            get {
                return this.SignDateField;
            }
            set {
                if ((this.SignDateField.Equals(value) != true)) {
                    this.SignDateField = value;
                    this.RaisePropertyChanged("SignDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Security.Cryptography.DSAParameters Key {
            get {
                return this.KeyField;
            }
            set {
                if ((this.KeyField.Equals(value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleLicense", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class ModuleLicense : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleTooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModuleVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.LicenseType LicenseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnrestrictedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.UserType AllowedUserTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfLicensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtraFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrerequisiteModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ModuleName {
            get {
                return this.ModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleNameField, value) != true)) {
                    this.ModuleNameField = value;
                    this.RaisePropertyChanged("ModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ModuleDescription {
            get {
                return this.ModuleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleDescriptionField, value) != true)) {
                    this.ModuleDescriptionField = value;
                    this.RaisePropertyChanged("ModuleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ModuleTooltip {
            get {
                return this.ModuleTooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleTooltipField, value) != true)) {
                    this.ModuleTooltipField = value;
                    this.RaisePropertyChanged("ModuleTooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ModuleVersion {
            get {
                return this.ModuleVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleVersionField, value) != true)) {
                    this.ModuleVersionField = value;
                    this.RaisePropertyChanged("ModuleVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public AOS.DataAccessLayer.License75.LicenseType LicenseType {
            get {
                return this.LicenseTypeField;
            }
            set {
                if ((this.LicenseTypeField.Equals(value) != true)) {
                    this.LicenseTypeField = value;
                    this.RaisePropertyChanged("LicenseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool Unrestricted {
            get {
                return this.UnrestrictedField;
            }
            set {
                if ((this.UnrestrictedField.Equals(value) != true)) {
                    this.UnrestrictedField = value;
                    this.RaisePropertyChanged("Unrestricted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public AOS.DataAccessLayer.License75.UserType AllowedUserType {
            get {
                return this.AllowedUserTypeField;
            }
            set {
                if ((this.AllowedUserTypeField.Equals(value) != true)) {
                    this.AllowedUserTypeField = value;
                    this.RaisePropertyChanged("AllowedUserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int NumberOfLicenses {
            get {
                return this.NumberOfLicensesField;
            }
            set {
                if ((this.NumberOfLicensesField.Equals(value) != true)) {
                    this.NumberOfLicensesField = value;
                    this.RaisePropertyChanged("NumberOfLicenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int ExtraFlags {
            get {
                return this.ExtraFlagsField;
            }
            set {
                if ((this.ExtraFlagsField.Equals(value) != true)) {
                    this.ExtraFlagsField = value;
                    this.RaisePropertyChanged("ExtraFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string ExtraInfo {
            get {
                return this.ExtraInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInfoField, value) != true)) {
                    this.ExtraInfoField = value;
                    this.RaisePropertyChanged("ExtraInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool IsHidden {
            get {
                return this.IsHiddenField;
            }
            set {
                if ((this.IsHiddenField.Equals(value) != true)) {
                    this.IsHiddenField = value;
                    this.RaisePropertyChanged("IsHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string PrerequisiteModuleName {
            get {
                return this.PrerequisiteModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrerequisiteModuleNameField, value) != true)) {
                    this.PrerequisiteModuleNameField = value;
                    this.RaisePropertyChanged("PrerequisiteModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    public enum LicenseType : short {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteLicense = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatelliteLicense = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserLicense = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalAssociate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceAssociate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalAssociate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnonymousAssociate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAssociate = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Carrier", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.License75.LicenseOwner))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.License75.ModuleLicenseLink))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.License75.SelectableMDOListItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AOS.DataAccessLayer.License75.LicenseResult))]
    public partial class Carrier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.TableRight TableRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.FieldPropertyDictionary FieldPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.License75.TableRight TableRight {
            get {
                return this.TableRightField;
            }
            set {
                if ((object.ReferenceEquals(this.TableRightField, value) != true)) {
                    this.TableRightField = value;
                    this.RaisePropertyChanged("TableRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public AOS.DataAccessLayer.License75.FieldPropertyDictionary FieldProperties {
            get {
                return this.FieldPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldPropertiesField, value) != true)) {
                    this.FieldPropertiesField = value;
                    this.RaisePropertyChanged("FieldProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class TableRight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.ETableRight MaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.License75.ETableRight Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((this.MaskField.Equals(value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseOwner", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class LicenseOwner : AOS.DataAccessLayer.License75.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.ModuleLicenseLink[] RestrictedModuleLicensesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.ModuleLicenseLink[] UnrestrictedModuleLicensesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public AOS.DataAccessLayer.License75.ModuleLicenseLink[] RestrictedModuleLicenses {
            get {
                return this.RestrictedModuleLicensesField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictedModuleLicensesField, value) != true)) {
                    this.RestrictedModuleLicensesField = value;
                    this.RaisePropertyChanged("RestrictedModuleLicenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public AOS.DataAccessLayer.License75.ModuleLicenseLink[] UnrestrictedModuleLicenses {
            get {
                return this.UnrestrictedModuleLicensesField;
            }
            set {
                if ((object.ReferenceEquals(this.UnrestrictedModuleLicensesField, value) != true)) {
                    this.UnrestrictedModuleLicensesField = value;
                    this.RaisePropertyChanged("UnrestrictedModuleLicenses");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleLicenseLink", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class ModuleLicenseLink : AOS.DataAccessLayer.License75.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnrestrictedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TooltipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanAssignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AssignedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModuleLicenseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrerequisiteModuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Unrestricted {
            get {
                return this.UnrestrictedField;
            }
            set {
                if ((this.UnrestrictedField.Equals(value) != true)) {
                    this.UnrestrictedField = value;
                    this.RaisePropertyChanged("Unrestricted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Tooltip {
            get {
                return this.TooltipField;
            }
            set {
                if ((object.ReferenceEquals(this.TooltipField, value) != true)) {
                    this.TooltipField = value;
                    this.RaisePropertyChanged("Tooltip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool CanAssign {
            get {
                return this.CanAssignField;
            }
            set {
                if ((this.CanAssignField.Equals(value) != true)) {
                    this.CanAssignField = value;
                    this.RaisePropertyChanged("CanAssign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int Free {
            get {
                return this.FreeField;
            }
            set {
                if ((this.FreeField.Equals(value) != true)) {
                    this.FreeField = value;
                    this.RaisePropertyChanged("Free");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int InUse {
            get {
                return this.InUseField;
            }
            set {
                if ((this.InUseField.Equals(value) != true)) {
                    this.InUseField = value;
                    this.RaisePropertyChanged("InUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool Assigned {
            get {
                return this.AssignedField;
            }
            set {
                if ((this.AssignedField.Equals(value) != true)) {
                    this.AssignedField = value;
                    this.RaisePropertyChanged("Assigned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int ModuleLicenseId {
            get {
                return this.ModuleLicenseIdField;
            }
            set {
                if ((this.ModuleLicenseIdField.Equals(value) != true)) {
                    this.ModuleLicenseIdField = value;
                    this.RaisePropertyChanged("ModuleLicenseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string PrerequisiteModuleName {
            get {
                return this.PrerequisiteModuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrerequisiteModuleNameField, value) != true)) {
                    this.PrerequisiteModuleNameField = value;
                    this.RaisePropertyChanged("PrerequisiteModuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectableMDOListItem", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class SelectableMDOListItem : AOS.DataAccessLayer.License75.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolTipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorBlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconHintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.SelectableMDOListItem[] ChildItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StyleHintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HiddenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTip {
            get {
                return this.ToolTipField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipField, value) != true)) {
                    this.ToolTipField = value;
                    this.RaisePropertyChanged("ToolTip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int ColorBlock {
            get {
                return this.ColorBlockField;
            }
            set {
                if ((this.ColorBlockField.Equals(value) != true)) {
                    this.ColorBlockField = value;
                    this.RaisePropertyChanged("ColorBlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string IconHint {
            get {
                return this.IconHintField;
            }
            set {
                if ((object.ReferenceEquals(this.IconHintField, value) != true)) {
                    this.IconHintField = value;
                    this.RaisePropertyChanged("IconHint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public AOS.DataAccessLayer.License75.SelectableMDOListItem[] ChildItems {
            get {
                return this.ChildItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildItemsField, value) != true)) {
                    this.ChildItemsField = value;
                    this.RaisePropertyChanged("ChildItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string ExtraInfo {
            get {
                return this.ExtraInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInfoField, value) != true)) {
                    this.ExtraInfoField = value;
                    this.RaisePropertyChanged("ExtraInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string StyleHint {
            get {
                return this.StyleHintField;
            }
            set {
                if ((object.ReferenceEquals(this.StyleHintField, value) != true)) {
                    this.StyleHintField = value;
                    this.RaisePropertyChanged("StyleHint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public bool Hidden {
            get {
                return this.HiddenField;
            }
            set {
                if ((this.HiddenField.Equals(value) != true)) {
                    this.HiddenField = value;
                    this.RaisePropertyChanged("Hidden");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseResult", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class LicenseResult : AOS.DataAccessLayer.License75.Carrier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SucceededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Succeeded {
            get {
                return this.SucceededField;
            }
            set {
                if ((this.SucceededField.Equals(value) != true)) {
                    this.SucceededField = value;
                    this.RaisePropertyChanged("Succeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FieldPropertyDictionary", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", ItemName="FieldPropertyDictionaryKeyValuePair", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class FieldPropertyDictionary : System.Collections.Generic.Dictionary<string, AOS.DataAccessLayer.License75.FieldProperty> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ETableRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    public enum ETableRight : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Select = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insert = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Filtering = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RestrictedUpdate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused1 = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Uninitialized = 128,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldProperty", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class FieldProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.FieldRight FieldRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldLengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.License75.FieldRight FieldRight {
            get {
                return this.FieldRightField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldRightField, value) != true)) {
                    this.FieldRightField = value;
                    this.RaisePropertyChanged("FieldRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldTypeField, value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int FieldLength {
            get {
                return this.FieldLengthField;
            }
            set {
                if ((this.FieldLengthField.Equals(value) != true)) {
                    this.FieldLengthField = value;
                    this.RaisePropertyChanged("FieldLength");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class FieldRight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.EFieldRight MaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.License75.EFieldRight Mask {
            get {
                return this.MaskField;
            }
            set {
                if ((this.MaskField.Equals(value) != true)) {
                    this.MaskField = value;
                    this.RaisePropertyChanged("Mask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="EFieldRight", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    public enum EFieldRight : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Write = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused1 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused2 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused3 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused4 = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UIHintMandatory = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UIHintReadOnly = 128,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckLicenseStatusResult", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    [System.SerializableAttribute()]
    public partial class CheckLicenseStatusResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AOS.DataAccessLayer.License75.LicenseStatus LicenseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AOS.DataAccessLayer.License75.LicenseStatus LicenseStatus {
            get {
                return this.LicenseStatusField;
            }
            set {
                if ((this.LicenseStatusField.Equals(value) != true)) {
                    this.LicenseStatusField = value;
                    this.RaisePropertyChanged("LicenseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseStatus", Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
    public enum LicenseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewLicenseAvailable = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewCompanyNameAvailable = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewSerialAvailable = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCustomMessage = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCustomMessageAndUrl = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProblemWithLicense = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownError = 5000,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", ConfigurationName="License75.License")]
    public interface License {
        
        // CODEGEN: Generating message contract since message GetLicenseForAllOwnersFromDBRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseForAllOw" +
            "nersFromDB", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseForAllOw" +
            "nersFromDBResponse")]
        AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBResponse GetLicenseForAllOwnersFromDB(AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseForAllOw" +
            "nersFromDB", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseForAllOw" +
            "nersFromDBResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBResponse> GetLicenseForAllOwnersFromDBAsync(AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest request);
        
        // CODEGEN: Generating message contract since message GetLicenseFromLicenseServerRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromLice" +
            "nseServer", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromLice" +
            "nseServerResponse")]
        AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerResponse GetLicenseFromLicenseServer(AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromLice" +
            "nseServer", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromLice" +
            "nseServerResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerResponse> GetLicenseFromLicenseServerAsync(AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest request);
        
        // CODEGEN: Generating message contract since message GetModuleLicenseHistoryFromLicenseServerRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetModuleLicenseHi" +
            "storyFromLicenseServer", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetModuleLicenseHi" +
            "storyFromLicenseServerResponse")]
        AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerResponse GetModuleLicenseHistoryFromLicenseServer(AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetModuleLicenseHi" +
            "storyFromLicenseServer", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetModuleLicenseHi" +
            "storyFromLicenseServerResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerResponse> GetModuleLicenseHistoryFromLicenseServerAsync(AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest request);
        
        // CODEGEN: Generating message contract since message ValidateLicenseInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ValidateLicenseInf" +
            "o", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ValidateLicenseInf" +
            "oResponse")]
        AOS.DataAccessLayer.License75.ValidateLicenseInfoResponse ValidateLicenseInfo(AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ValidateLicenseInf" +
            "o", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ValidateLicenseInf" +
            "oResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ValidateLicenseInfoResponse> ValidateLicenseInfoAsync(AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest request);
        
        // CODEGEN: Generating message contract since message ActivateLicenseInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ActivateLicenseInf" +
            "o", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ActivateLicenseInf" +
            "oResponse")]
        AOS.DataAccessLayer.License75.ActivateLicenseInfoResponse ActivateLicenseInfo(AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ActivateLicenseInf" +
            "o", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ActivateLicenseInf" +
            "oResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ActivateLicenseInfoResponse> ActivateLicenseInfoAsync(AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetLicenseStatusFromLicenseServerRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseStatusFr" +
            "omLicenseServer", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseStatusFr" +
            "omLicenseServerResponse")]
        AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerResponse GetLicenseStatusFromLicenseServer(AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseStatusFr" +
            "omLicenseServer", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseStatusFr" +
            "omLicenseServerResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerResponse> GetLicenseStatusFromLicenseServerAsync(AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest request);
        
        // CODEGEN: Generating message contract since message GetLicenseFromDBRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromDB", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromDBRe" +
            "sponse")]
        AOS.DataAccessLayer.License75.GetLicenseFromDBResponse GetLicenseFromDB(AOS.DataAccessLayer.License75.GetLicenseFromDBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromDB", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromDBRe" +
            "sponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromDBResponse> GetLicenseFromDBAsync(AOS.DataAccessLayer.License75.GetLicenseFromDBRequest request);
        
        // CODEGEN: Generating message contract since message ChangeSerialNumberRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ChangeSerialNumber" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ChangeSerialNumber" +
            "Response")]
        AOS.DataAccessLayer.License75.ChangeSerialNumberResponse ChangeSerialNumber(AOS.DataAccessLayer.License75.ChangeSerialNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ChangeSerialNumber" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/ChangeSerialNumber" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ChangeSerialNumberResponse> ChangeSerialNumberAsync(AOS.DataAccessLayer.License75.ChangeSerialNumberRequest request);
        
        // CODEGEN: Generating message contract since message GetUserLicensesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicenses", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicensesRes" +
            "ponse")]
        AOS.DataAccessLayer.License75.GetUserLicensesResponse GetUserLicenses(AOS.DataAccessLayer.License75.GetUserLicensesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicenses", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicensesRes" +
            "ponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetUserLicensesResponse> GetUserLicensesAsync(AOS.DataAccessLayer.License75.GetUserLicensesRequest request);
        
        // CODEGEN: Generating message contract since message GetSatelliteLicensesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetSatelliteLicens" +
            "es", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetSatelliteLicens" +
            "esResponse")]
        AOS.DataAccessLayer.License75.GetSatelliteLicensesResponse GetSatelliteLicenses(AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetSatelliteLicens" +
            "es", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetSatelliteLicens" +
            "esResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetSatelliteLicensesResponse> GetSatelliteLicensesAsync(AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest request);
        
        // CODEGEN: Generating message contract since message RemoveLicenseFromDBRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/RemoveLicenseFromD" +
            "B", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/RemoveLicenseFromD" +
            "BResponse")]
        AOS.DataAccessLayer.License75.RemoveLicenseFromDBResponse RemoveLicenseFromDB(AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/RemoveLicenseFromD" +
            "B", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/RemoveLicenseFromD" +
            "BResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.RemoveLicenseFromDBResponse> RemoveLicenseFromDBAsync(AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest request);
        
        // CODEGEN: Generating message contract since message GetLicenseFromFileRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromFile" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromFile" +
            "Response")]
        AOS.DataAccessLayer.License75.GetLicenseFromFileResponse GetLicenseFromFile(AOS.DataAccessLayer.License75.GetLicenseFromFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromFile" +
            "", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetLicenseFromFile" +
            "Response")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromFileResponse> GetLicenseFromFileAsync(AOS.DataAccessLayer.License75.GetLicenseFromFileRequest request);
        
        // CODEGEN: Generating message contract since message GetShopUrlRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetShopUrl", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetShopUrlResponse" +
            "")]
        AOS.DataAccessLayer.License75.GetShopUrlResponse GetShopUrl(AOS.DataAccessLayer.License75.GetShopUrlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetShopUrl", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetShopUrlResponse" +
            "")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetShopUrlResponse> GetShopUrlAsync(AOS.DataAccessLayer.License75.GetShopUrlRequest request);
        
        // CODEGEN: Generating message contract since message GetUserLicensesMDOListRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicensesMDO" +
            "List", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicensesMDO" +
            "ListResponse")]
        AOS.DataAccessLayer.License75.GetUserLicensesMDOListResponse GetUserLicensesMDOList(AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicensesMDO" +
            "List", ReplyAction="http://www.superoffice.net/ws/crm/NetServer/Services75/License/GetUserLicensesMDO" +
            "ListResponse")]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetUserLicensesMDOListResponse> GetUserLicensesMDOListAsync(AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseForAllOwnersFromDB", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseForAllOwnersFromDBRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        public GetLicenseForAllOwnersFromDBRequest() {
        }
        
        public GetLicenseForAllOwnersFromDBRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseForAllOwnersFromDBResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseForAllOwnersFromDBResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.ExtendedLicenseInfo[] Response;
        
        public GetLicenseForAllOwnersFromDBResponse() {
        }
        
        public GetLicenseForAllOwnersFromDBResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseFromLicenseServer", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseFromLicenseServerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string OwnerName;
        
        public GetLicenseFromLicenseServerRequest() {
        }
        
        public GetLicenseFromLicenseServerRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.OwnerName = OwnerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseFromLicenseServerResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseFromLicenseServerResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response;
        
        public GetLicenseFromLicenseServerResponse() {
        }
        
        public GetLicenseFromLicenseServerResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleLicenseHistoryFromLicenseServer", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetModuleLicenseHistoryFromLicenseServerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=1)]
        public AOS.DataAccessLayer.License75.ExtendedModuleLicense ModuleLicense;
        
        public GetModuleLicenseHistoryFromLicenseServerRequest() {
        }
        
        public GetModuleLicenseHistoryFromLicenseServerRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo, AOS.DataAccessLayer.License75.ExtendedModuleLicense ModuleLicense) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.LicenseInfo = LicenseInfo;
            this.ModuleLicense = ModuleLicense;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetModuleLicenseHistoryFromLicenseServerResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetModuleLicenseHistoryFromLicenseServerResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string Response;
        
        public GetModuleLicenseHistoryFromLicenseServerResponse() {
        }
        
        public GetModuleLicenseHistoryFromLicenseServerResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateLicenseInfo", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class ValidateLicenseInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo;
        
        public ValidateLicenseInfoRequest() {
        }
        
        public ValidateLicenseInfoRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.LicenseInfo = LicenseInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateLicenseInfoResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class ValidateLicenseInfoResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.LicenseResult Response;
        
        public ValidateLicenseInfoResponse() {
        }
        
        public ValidateLicenseInfoResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.LicenseResult Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ActivateLicenseInfo", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class ActivateLicenseInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.ExtendedLicenseInfo NewLicense;
        
        public ActivateLicenseInfoRequest() {
        }
        
        public ActivateLicenseInfoRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo NewLicense) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.NewLicense = NewLicense;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ActivateLicenseInfoResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class ActivateLicenseInfoResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.LicenseResult Response;
        
        public ActivateLicenseInfoResponse() {
        }
        
        public ActivateLicenseInfoResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.LicenseResult Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseStatusFromLicenseServer", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseStatusFromLicenseServerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string OwnerName;
        
        public GetLicenseStatusFromLicenseServerRequest() {
        }
        
        public GetLicenseStatusFromLicenseServerRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.OwnerName = OwnerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseStatusFromLicenseServerResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseStatusFromLicenseServerResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.CheckLicenseStatusResult Response;
        
        public GetLicenseStatusFromLicenseServerResponse() {
        }
        
        public GetLicenseStatusFromLicenseServerResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.CheckLicenseStatusResult Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseFromDB", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseFromDBRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string OwnerName;
        
        public GetLicenseFromDBRequest() {
        }
        
        public GetLicenseFromDBRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.OwnerName = OwnerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseFromDBResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseFromDBResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response;
        
        public GetLicenseFromDBResponse() {
        }
        
        public GetLicenseFromDBResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSerialNumber", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class ChangeSerialNumberRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string NewCompanyName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=1)]
        public string NewSerialNumber;
        
        public ChangeSerialNumberRequest() {
        }
        
        public ChangeSerialNumberRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string NewCompanyName, string NewSerialNumber) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.NewCompanyName = NewCompanyName;
            this.NewSerialNumber = NewSerialNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeSerialNumberResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class ChangeSerialNumberResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.LicenseResult Response;
        
        public ChangeSerialNumberResponse() {
        }
        
        public ChangeSerialNumberResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.LicenseResult Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLicenses", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetUserLicensesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public int AssociateId;
        
        public GetUserLicensesRequest() {
        }
        
        public GetUserLicensesRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, int AssociateId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.AssociateId = AssociateId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLicensesResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetUserLicensesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.LicenseOwner[] Response;
        
        public GetUserLicensesResponse() {
        }
        
        public GetUserLicensesResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.LicenseOwner[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSatelliteLicenses", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetSatelliteLicensesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public int SatelliteId;
        
        public GetSatelliteLicensesRequest() {
        }
        
        public GetSatelliteLicensesRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, int SatelliteId) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.SatelliteId = SatelliteId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSatelliteLicensesResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetSatelliteLicensesResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.LicenseOwner[] Response;
        
        public GetSatelliteLicensesResponse() {
        }
        
        public GetSatelliteLicensesResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.LicenseOwner[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveLicenseFromDB", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class RemoveLicenseFromDBRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string ModuleOwner;
        
        public RemoveLicenseFromDBRequest() {
        }
        
        public RemoveLicenseFromDBRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string ModuleOwner) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.ModuleOwner = ModuleOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveLicenseFromDBResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class RemoveLicenseFromDBResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.LicenseResult Response;
        
        public RemoveLicenseFromDBResponse() {
        }
        
        public RemoveLicenseFromDBResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.LicenseResult Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseFromFile", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseFromFileRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string FileContent;
        
        public GetLicenseFromFileRequest() {
        }
        
        public GetLicenseFromFileRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string FileContent) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.FileContent = FileContent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLicenseFromFileResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetLicenseFromFileResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response;
        
        public GetLicenseFromFileResponse() {
        }
        
        public GetLicenseFromFileResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShopUrl", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetShopUrlRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string OwnerName;
        
        public GetShopUrlRequest() {
        }
        
        public GetShopUrlRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
            this.OwnerName = OwnerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShopUrlResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetShopUrlResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public string Response;
        
        public GetShopUrlResponse() {
        }
        
        public GetShopUrlResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLicensesMDOList", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetUserLicensesMDOListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public string ApplicationToken;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoCredentials Credentials;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        public GetUserLicensesMDOListRequest() {
        }
        
        public GetUserLicensesMDOListRequest(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone) {
            this.ApplicationToken = ApplicationToken;
            this.Credentials = Credentials;
            this.TimeZone = TimeZone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserLicensesMDOListResponse", WrapperNamespace="http://www.superoffice.net/ws/crm/NetServer/Services75", IsWrapped=true)]
    public partial class GetUserLicensesMDOListResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public bool Succeeded;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75")]
        public AOS.DataAccessLayer.License75.SoTimeZone TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.superoffice.net/ws/crm/NetServer/Services75", Order=0)]
        public AOS.DataAccessLayer.License75.SelectableMDOListItem[] Response;
        
        public GetUserLicensesMDOListResponse() {
        }
        
        public GetUserLicensesMDOListResponse(AOS.DataAccessLayer.License75.SoExceptionInfo ExceptionInfo, AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, bool Succeeded, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.SelectableMDOListItem[] Response) {
            this.ExceptionInfo = ExceptionInfo;
            this.ExtraInfo = ExtraInfo;
            this.Succeeded = Succeeded;
            this.TimeZone = TimeZone;
            this.Response = Response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LicenseChannel : AOS.DataAccessLayer.License75.License, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseClient : System.ServiceModel.ClientBase<AOS.DataAccessLayer.License75.License>, AOS.DataAccessLayer.License75.License {
        
        public LicenseClient() {
        }
        
        public LicenseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBResponse AOS.DataAccessLayer.License75.License.GetLicenseForAllOwnersFromDB(AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest request) {
            return base.Channel.GetLicenseForAllOwnersFromDB(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetLicenseForAllOwnersFromDB(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.ExtendedLicenseInfo[] Response) {
            AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseForAllOwnersFromDB(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBResponse> AOS.DataAccessLayer.License75.License.GetLicenseForAllOwnersFromDBAsync(AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest request) {
            return base.Channel.GetLicenseForAllOwnersFromDBAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBResponse> GetLicenseForAllOwnersFromDBAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseForAllOwnersFromDBRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseForAllOwnersFromDBAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerResponse AOS.DataAccessLayer.License75.License.GetLicenseFromLicenseServer(AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest request) {
            return base.Channel.GetLicenseFromLicenseServer(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetLicenseFromLicenseServer(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response) {
            AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseFromLicenseServer(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerResponse> AOS.DataAccessLayer.License75.License.GetLicenseFromLicenseServerAsync(AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest request) {
            return base.Channel.GetLicenseFromLicenseServerAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerResponse> GetLicenseFromLicenseServerAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseFromLicenseServerRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseFromLicenseServerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerResponse AOS.DataAccessLayer.License75.License.GetModuleLicenseHistoryFromLicenseServer(AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest request) {
            return base.Channel.GetModuleLicenseHistoryFromLicenseServer(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetModuleLicenseHistoryFromLicenseServer(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo, AOS.DataAccessLayer.License75.ExtendedModuleLicense ModuleLicense, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out string Response) {
            AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest inValue = new AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.LicenseInfo = LicenseInfo;
            inValue.ModuleLicense = ModuleLicense;
            AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetModuleLicenseHistoryFromLicenseServer(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerResponse> AOS.DataAccessLayer.License75.License.GetModuleLicenseHistoryFromLicenseServerAsync(AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest request) {
            return base.Channel.GetModuleLicenseHistoryFromLicenseServerAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerResponse> GetModuleLicenseHistoryFromLicenseServerAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo, AOS.DataAccessLayer.License75.ExtendedModuleLicense ModuleLicense) {
            AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest inValue = new AOS.DataAccessLayer.License75.GetModuleLicenseHistoryFromLicenseServerRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.LicenseInfo = LicenseInfo;
            inValue.ModuleLicense = ModuleLicense;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetModuleLicenseHistoryFromLicenseServerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.ValidateLicenseInfoResponse AOS.DataAccessLayer.License75.License.ValidateLicenseInfo(AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest request) {
            return base.Channel.ValidateLicenseInfo(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo ValidateLicenseInfo(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.LicenseResult Response) {
            AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest inValue = new AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.LicenseInfo = LicenseInfo;
            AOS.DataAccessLayer.License75.ValidateLicenseInfoResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).ValidateLicenseInfo(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ValidateLicenseInfoResponse> AOS.DataAccessLayer.License75.License.ValidateLicenseInfoAsync(AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest request) {
            return base.Channel.ValidateLicenseInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ValidateLicenseInfoResponse> ValidateLicenseInfoAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo LicenseInfo) {
            AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest inValue = new AOS.DataAccessLayer.License75.ValidateLicenseInfoRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.LicenseInfo = LicenseInfo;
            return ((AOS.DataAccessLayer.License75.License)(this)).ValidateLicenseInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.ActivateLicenseInfoResponse AOS.DataAccessLayer.License75.License.ActivateLicenseInfo(AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest request) {
            return base.Channel.ActivateLicenseInfo(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo ActivateLicenseInfo(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo NewLicense, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.LicenseResult Response) {
            AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest inValue = new AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.NewLicense = NewLicense;
            AOS.DataAccessLayer.License75.ActivateLicenseInfoResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).ActivateLicenseInfo(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ActivateLicenseInfoResponse> AOS.DataAccessLayer.License75.License.ActivateLicenseInfoAsync(AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest request) {
            return base.Channel.ActivateLicenseInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ActivateLicenseInfoResponse> ActivateLicenseInfoAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, AOS.DataAccessLayer.License75.ExtendedLicenseInfo NewLicense) {
            AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest inValue = new AOS.DataAccessLayer.License75.ActivateLicenseInfoRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.NewLicense = NewLicense;
            return ((AOS.DataAccessLayer.License75.License)(this)).ActivateLicenseInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerResponse AOS.DataAccessLayer.License75.License.GetLicenseStatusFromLicenseServer(AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest request) {
            return base.Channel.GetLicenseStatusFromLicenseServer(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetLicenseStatusFromLicenseServer(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.CheckLicenseStatusResult Response) {
            AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseStatusFromLicenseServer(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerResponse> AOS.DataAccessLayer.License75.License.GetLicenseStatusFromLicenseServerAsync(AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest request) {
            return base.Channel.GetLicenseStatusFromLicenseServerAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerResponse> GetLicenseStatusFromLicenseServerAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseStatusFromLicenseServerRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseStatusFromLicenseServerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetLicenseFromDBResponse AOS.DataAccessLayer.License75.License.GetLicenseFromDB(AOS.DataAccessLayer.License75.GetLicenseFromDBRequest request) {
            return base.Channel.GetLicenseFromDB(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetLicenseFromDB(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response) {
            AOS.DataAccessLayer.License75.GetLicenseFromDBRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseFromDBRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            AOS.DataAccessLayer.License75.GetLicenseFromDBResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseFromDB(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromDBResponse> AOS.DataAccessLayer.License75.License.GetLicenseFromDBAsync(AOS.DataAccessLayer.License75.GetLicenseFromDBRequest request) {
            return base.Channel.GetLicenseFromDBAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromDBResponse> GetLicenseFromDBAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            AOS.DataAccessLayer.License75.GetLicenseFromDBRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseFromDBRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseFromDBAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.ChangeSerialNumberResponse AOS.DataAccessLayer.License75.License.ChangeSerialNumber(AOS.DataAccessLayer.License75.ChangeSerialNumberRequest request) {
            return base.Channel.ChangeSerialNumber(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo ChangeSerialNumber(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string NewCompanyName, string NewSerialNumber, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.LicenseResult Response) {
            AOS.DataAccessLayer.License75.ChangeSerialNumberRequest inValue = new AOS.DataAccessLayer.License75.ChangeSerialNumberRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.NewCompanyName = NewCompanyName;
            inValue.NewSerialNumber = NewSerialNumber;
            AOS.DataAccessLayer.License75.ChangeSerialNumberResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).ChangeSerialNumber(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ChangeSerialNumberResponse> AOS.DataAccessLayer.License75.License.ChangeSerialNumberAsync(AOS.DataAccessLayer.License75.ChangeSerialNumberRequest request) {
            return base.Channel.ChangeSerialNumberAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.ChangeSerialNumberResponse> ChangeSerialNumberAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string NewCompanyName, string NewSerialNumber) {
            AOS.DataAccessLayer.License75.ChangeSerialNumberRequest inValue = new AOS.DataAccessLayer.License75.ChangeSerialNumberRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.NewCompanyName = NewCompanyName;
            inValue.NewSerialNumber = NewSerialNumber;
            return ((AOS.DataAccessLayer.License75.License)(this)).ChangeSerialNumberAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetUserLicensesResponse AOS.DataAccessLayer.License75.License.GetUserLicenses(AOS.DataAccessLayer.License75.GetUserLicensesRequest request) {
            return base.Channel.GetUserLicenses(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetUserLicenses(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, int AssociateId, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.LicenseOwner[] Response) {
            AOS.DataAccessLayer.License75.GetUserLicensesRequest inValue = new AOS.DataAccessLayer.License75.GetUserLicensesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateId = AssociateId;
            AOS.DataAccessLayer.License75.GetUserLicensesResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetUserLicenses(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetUserLicensesResponse> AOS.DataAccessLayer.License75.License.GetUserLicensesAsync(AOS.DataAccessLayer.License75.GetUserLicensesRequest request) {
            return base.Channel.GetUserLicensesAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetUserLicensesResponse> GetUserLicensesAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, int AssociateId) {
            AOS.DataAccessLayer.License75.GetUserLicensesRequest inValue = new AOS.DataAccessLayer.License75.GetUserLicensesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.AssociateId = AssociateId;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetUserLicensesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetSatelliteLicensesResponse AOS.DataAccessLayer.License75.License.GetSatelliteLicenses(AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest request) {
            return base.Channel.GetSatelliteLicenses(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetSatelliteLicenses(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, int SatelliteId, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.LicenseOwner[] Response) {
            AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest inValue = new AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SatelliteId = SatelliteId;
            AOS.DataAccessLayer.License75.GetSatelliteLicensesResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetSatelliteLicenses(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetSatelliteLicensesResponse> AOS.DataAccessLayer.License75.License.GetSatelliteLicensesAsync(AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest request) {
            return base.Channel.GetSatelliteLicensesAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetSatelliteLicensesResponse> GetSatelliteLicensesAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, int SatelliteId) {
            AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest inValue = new AOS.DataAccessLayer.License75.GetSatelliteLicensesRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.SatelliteId = SatelliteId;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetSatelliteLicensesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.RemoveLicenseFromDBResponse AOS.DataAccessLayer.License75.License.RemoveLicenseFromDB(AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest request) {
            return base.Channel.RemoveLicenseFromDB(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo RemoveLicenseFromDB(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string ModuleOwner, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.LicenseResult Response) {
            AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest inValue = new AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ModuleOwner = ModuleOwner;
            AOS.DataAccessLayer.License75.RemoveLicenseFromDBResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).RemoveLicenseFromDB(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.RemoveLicenseFromDBResponse> AOS.DataAccessLayer.License75.License.RemoveLicenseFromDBAsync(AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest request) {
            return base.Channel.RemoveLicenseFromDBAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.RemoveLicenseFromDBResponse> RemoveLicenseFromDBAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string ModuleOwner) {
            AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest inValue = new AOS.DataAccessLayer.License75.RemoveLicenseFromDBRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.ModuleOwner = ModuleOwner;
            return ((AOS.DataAccessLayer.License75.License)(this)).RemoveLicenseFromDBAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetLicenseFromFileResponse AOS.DataAccessLayer.License75.License.GetLicenseFromFile(AOS.DataAccessLayer.License75.GetLicenseFromFileRequest request) {
            return base.Channel.GetLicenseFromFile(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetLicenseFromFile(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string FileContent, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.ExtendedLicenseInfo Response) {
            AOS.DataAccessLayer.License75.GetLicenseFromFileRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseFromFileRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.FileContent = FileContent;
            AOS.DataAccessLayer.License75.GetLicenseFromFileResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseFromFile(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromFileResponse> AOS.DataAccessLayer.License75.License.GetLicenseFromFileAsync(AOS.DataAccessLayer.License75.GetLicenseFromFileRequest request) {
            return base.Channel.GetLicenseFromFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetLicenseFromFileResponse> GetLicenseFromFileAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string FileContent) {
            AOS.DataAccessLayer.License75.GetLicenseFromFileRequest inValue = new AOS.DataAccessLayer.License75.GetLicenseFromFileRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.FileContent = FileContent;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetLicenseFromFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetShopUrlResponse AOS.DataAccessLayer.License75.License.GetShopUrl(AOS.DataAccessLayer.License75.GetShopUrlRequest request) {
            return base.Channel.GetShopUrl(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetShopUrl(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out string Response) {
            AOS.DataAccessLayer.License75.GetShopUrlRequest inValue = new AOS.DataAccessLayer.License75.GetShopUrlRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            AOS.DataAccessLayer.License75.GetShopUrlResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetShopUrl(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetShopUrlResponse> AOS.DataAccessLayer.License75.License.GetShopUrlAsync(AOS.DataAccessLayer.License75.GetShopUrlRequest request) {
            return base.Channel.GetShopUrlAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetShopUrlResponse> GetShopUrlAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone, string OwnerName) {
            AOS.DataAccessLayer.License75.GetShopUrlRequest inValue = new AOS.DataAccessLayer.License75.GetShopUrlRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            inValue.OwnerName = OwnerName;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetShopUrlAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AOS.DataAccessLayer.License75.GetUserLicensesMDOListResponse AOS.DataAccessLayer.License75.License.GetUserLicensesMDOList(AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest request) {
            return base.Channel.GetUserLicensesMDOList(request);
        }
        
        public AOS.DataAccessLayer.License75.SoExceptionInfo GetUserLicensesMDOList(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, ref AOS.DataAccessLayer.License75.SoTimeZone TimeZone, out AOS.DataAccessLayer.License75.SoExtraInfo ExtraInfo, out bool Succeeded, out AOS.DataAccessLayer.License75.SelectableMDOListItem[] Response) {
            AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest inValue = new AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            AOS.DataAccessLayer.License75.GetUserLicensesMDOListResponse retVal = ((AOS.DataAccessLayer.License75.License)(this)).GetUserLicensesMDOList(inValue);
            ExtraInfo = retVal.ExtraInfo;
            Succeeded = retVal.Succeeded;
            TimeZone = retVal.TimeZone;
            Response = retVal.Response;
            return retVal.ExceptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetUserLicensesMDOListResponse> AOS.DataAccessLayer.License75.License.GetUserLicensesMDOListAsync(AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest request) {
            return base.Channel.GetUserLicensesMDOListAsync(request);
        }
        
        public System.Threading.Tasks.Task<AOS.DataAccessLayer.License75.GetUserLicensesMDOListResponse> GetUserLicensesMDOListAsync(string ApplicationToken, AOS.DataAccessLayer.License75.SoCredentials Credentials, AOS.DataAccessLayer.License75.SoTimeZone TimeZone) {
            AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest inValue = new AOS.DataAccessLayer.License75.GetUserLicensesMDOListRequest();
            inValue.ApplicationToken = ApplicationToken;
            inValue.Credentials = Credentials;
            inValue.TimeZone = TimeZone;
            return ((AOS.DataAccessLayer.License75.License)(this)).GetUserLicensesMDOListAsync(inValue);
        }
    }
}
